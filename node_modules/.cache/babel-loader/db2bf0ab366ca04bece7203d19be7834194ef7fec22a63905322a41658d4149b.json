{"ast":null,"code":"\"use strict\";\n\n/**\n *  The available providers should suffice for most developers purposes,\n *  but the [[AbstractProvider]] class has many features which enable\n *  sub-classing it for specific purposes.\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\nvar _classPrivateMethodInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateMethodGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodGet.js\").default;\nvar _classPrivateFieldGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\").default;\nvar _classPrivateFieldSet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\").default;\nvar _defineProperty = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractProvider = exports.UnmanagedSubscriber = void 0;\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../constants/index.js\");\nconst index_js_3 = require(\"../contract/index.js\");\nconst index_js_4 = require(\"../hash/index.js\");\nconst index_js_5 = require(\"../transaction/index.js\");\nconst index_js_6 = require(\"../utils/index.js\");\nconst ens_resolver_js_1 = require(\"./ens-resolver.js\");\nconst format_js_1 = require(\"./format.js\");\nconst network_js_1 = require(\"./network.js\");\nconst provider_js_1 = require(\"./provider.js\");\nconst subscriber_polling_js_1 = require(\"./subscriber-polling.js\");\n// Constants\nconst BN_2 = BigInt(2);\nconst MAX_CCIP_REDIRECTS = 10;\nfunction isPromise(value) {\n  return value && typeof value.then === \"function\";\n}\nfunction getTag(prefix, value) {\n  return prefix + \":\" + JSON.stringify(value, (k, v) => {\n    if (v == null) {\n      return \"null\";\n    }\n    if (typeof v === \"bigint\") {\n      return `bigint:${v.toString()}`;\n    }\n    if (typeof v === \"string\") {\n      return v.toLowerCase();\n    }\n    // Sort object keys\n    if (typeof v === \"object\" && !Array.isArray(v)) {\n      const keys = Object.keys(v);\n      keys.sort();\n      return keys.reduce((accum, key) => {\n        accum[key] = v[key];\n        return accum;\n      }, {});\n    }\n    return v;\n  });\n}\n/**\n *  An **UnmanagedSubscriber** is useful for events which do not require\n *  any additional management, such as ``\"debug\"`` which only requires\n *  emit in synchronous event loop triggered calls.\n */\nclass UnmanagedSubscriber {\n  /**\n   *  Create a new UnmanagedSubscriber with %%name%%.\n   */\n  constructor(name) {\n    /**\n     *  The name fof the event.\n     */\n    _defineProperty(this, \"name\", void 0);\n    (0, index_js_6.defineProperties)(this, {\n      name\n    });\n  }\n  start() {}\n  stop() {}\n  pause(dropWhilePaused) {}\n  resume() {}\n}\nexports.UnmanagedSubscriber = UnmanagedSubscriber;\nfunction copy(value) {\n  return JSON.parse(JSON.stringify(value));\n}\nfunction concisify(items) {\n  items = Array.from(new Set(items).values());\n  items.sort();\n  return items;\n}\nasync function getSubscription(_event, provider) {\n  if (_event == null) {\n    throw new Error(\"invalid event\");\n  }\n  // Normalize topic array info an EventFilter\n  if (Array.isArray(_event)) {\n    _event = {\n      topics: _event\n    };\n  }\n  if (typeof _event === \"string\") {\n    switch (_event) {\n      case \"block\":\n      case \"pending\":\n      case \"debug\":\n      case \"error\":\n      case \"network\":\n        {\n          return {\n            type: _event,\n            tag: _event\n          };\n        }\n    }\n  }\n  if ((0, index_js_6.isHexString)(_event, 32)) {\n    const hash = _event.toLowerCase();\n    return {\n      type: \"transaction\",\n      tag: getTag(\"tx\", {\n        hash\n      }),\n      hash\n    };\n  }\n  if (_event.orphan) {\n    const event = _event;\n    // @TODO: Should lowercase and whatnot things here instead of copy...\n    return {\n      type: \"orphan\",\n      tag: getTag(\"orphan\", event),\n      filter: copy(event)\n    };\n  }\n  if (_event.address || _event.topics) {\n    const event = _event;\n    const filter = {\n      topics: (event.topics || []).map(t => {\n        if (t == null) {\n          return null;\n        }\n        if (Array.isArray(t)) {\n          return concisify(t.map(t => t.toLowerCase()));\n        }\n        return t.toLowerCase();\n      })\n    };\n    if (event.address) {\n      const addresses = [];\n      const promises = [];\n      const addAddress = addr => {\n        if ((0, index_js_6.isHexString)(addr)) {\n          addresses.push(addr);\n        } else {\n          promises.push((async () => {\n            addresses.push(await (0, index_js_1.resolveAddress)(addr, provider));\n          })());\n        }\n      };\n      if (Array.isArray(event.address)) {\n        event.address.forEach(addAddress);\n      } else {\n        addAddress(event.address);\n      }\n      if (promises.length) {\n        await Promise.all(promises);\n      }\n      filter.address = concisify(addresses.map(a => a.toLowerCase()));\n    }\n    return {\n      filter,\n      tag: getTag(\"event\", filter),\n      type: \"event\"\n    };\n  }\n  (0, index_js_6.assertArgument)(false, \"unknown ProviderEvent\", \"event\", _event);\n}\nfunction getTime() {\n  return new Date().getTime();\n}\nconst defaultOptions = {\n  cacheTimeout: 250\n};\n/**\n *  An **AbstractProvider** provides a base class for other sub-classes to\n *  implement the [[Provider]] API by normalizing input arguments and\n *  formatting output results as well as tracking events for consistent\n *  behaviour on an eventually-consistent network.\n */\nvar _subs = /*#__PURE__*/new WeakMap();\nvar _plugins = /*#__PURE__*/new WeakMap();\nvar _pausedState = /*#__PURE__*/new WeakMap();\nvar _destroyed = /*#__PURE__*/new WeakMap();\nvar _networkPromise = /*#__PURE__*/new WeakMap();\nvar _anyNetwork = /*#__PURE__*/new WeakMap();\nvar _performCache = /*#__PURE__*/new WeakMap();\nvar _lastBlockNumber = /*#__PURE__*/new WeakMap();\nvar _nextTimer = /*#__PURE__*/new WeakMap();\nvar _timers = /*#__PURE__*/new WeakMap();\nvar _disableCcipRead = /*#__PURE__*/new WeakMap();\nvar _options = /*#__PURE__*/new WeakMap();\nvar _perform = /*#__PURE__*/new WeakSet();\nvar _call = /*#__PURE__*/new WeakSet();\nvar _checkNetwork = /*#__PURE__*/new WeakSet();\nvar _getAccountValue = /*#__PURE__*/new WeakSet();\nvar _getBlock = /*#__PURE__*/new WeakSet();\nvar _hasSub = /*#__PURE__*/new WeakSet();\nvar _getSub = /*#__PURE__*/new WeakSet();\nclass AbstractProvider {\n  /**\n   *  Create a new **AbstractProvider** connected to %%network%%, or\n   *  use the various network detection capabilities to discover the\n   *  [[Network]] if necessary.\n   */\n  constructor(_network, options) {\n    _classPrivateMethodInitSpec(this, _getSub);\n    _classPrivateMethodInitSpec(this, _hasSub);\n    _classPrivateMethodInitSpec(this, _getBlock);\n    // Account\n    _classPrivateMethodInitSpec(this, _getAccountValue);\n    _classPrivateMethodInitSpec(this, _checkNetwork);\n    _classPrivateMethodInitSpec(this, _call);\n    // Shares multiple identical requests made during the same 250ms\n    _classPrivateMethodInitSpec(this, _perform);\n    _classPrivateFieldInitSpec(this, _subs, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _plugins, {\n      writable: true,\n      value: void 0\n    });\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    _classPrivateFieldInitSpec(this, _pausedState, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _destroyed, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _networkPromise, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _anyNetwork, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _performCache, {\n      writable: true,\n      value: void 0\n    });\n    // The most recent block number if running an event or -1 if no \"block\" event\n    _classPrivateFieldInitSpec(this, _lastBlockNumber, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _nextTimer, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _timers, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _disableCcipRead, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _options, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _options, Object.assign({}, defaultOptions, options || {}));\n    if (_network === \"any\") {\n      _classPrivateFieldSet(this, _anyNetwork, true);\n      _classPrivateFieldSet(this, _networkPromise, null);\n    } else if (_network) {\n      const network = network_js_1.Network.from(_network);\n      _classPrivateFieldSet(this, _anyNetwork, false);\n      _classPrivateFieldSet(this, _networkPromise, Promise.resolve(network));\n      setTimeout(() => {\n        this.emit(\"network\", network, null);\n      }, 0);\n    } else {\n      _classPrivateFieldSet(this, _anyNetwork, false);\n      _classPrivateFieldSet(this, _networkPromise, null);\n    }\n    _classPrivateFieldSet(this, _lastBlockNumber, -1);\n    _classPrivateFieldSet(this, _performCache, new Map());\n    _classPrivateFieldSet(this, _subs, new Map());\n    _classPrivateFieldSet(this, _plugins, new Map());\n    _classPrivateFieldSet(this, _pausedState, null);\n    _classPrivateFieldSet(this, _destroyed, false);\n    _classPrivateFieldSet(this, _nextTimer, 1);\n    _classPrivateFieldSet(this, _timers, new Map());\n    _classPrivateFieldSet(this, _disableCcipRead, false);\n  }\n  /**\n   *  Returns ``this``, to allow an **AbstractProvider** to implement\n   *  the [[ContractRunner]] interface.\n   */\n  get provider() {\n    return this;\n  }\n  /**\n   *  Returns all the registered plug-ins.\n   */\n  get plugins() {\n    return Array.from(_classPrivateFieldGet(this, _plugins).values());\n  }\n  /**\n   *  Attach a new plug-in.\n   */\n  attachPlugin(plugin) {\n    if (_classPrivateFieldGet(this, _plugins).get(plugin.name)) {\n      throw new Error(`cannot replace existing plugin: ${plugin.name} `);\n    }\n    _classPrivateFieldGet(this, _plugins).set(plugin.name, plugin.connect(this));\n    return this;\n  }\n  /**\n   *  Get a plugin by name.\n   */\n  getPlugin(name) {\n    return _classPrivateFieldGet(this, _plugins).get(name) || null;\n  }\n  /**\n   *  Prevent any CCIP-read operation, regardless of whether requested\n   *  in a [[call]] using ``enableCcipRead``.\n   */\n  get disableCcipRead() {\n    return _classPrivateFieldGet(this, _disableCcipRead);\n  }\n  set disableCcipRead(value) {\n    _classPrivateFieldSet(this, _disableCcipRead, !!value);\n  }\n  /**\n   *  Resolves to the data for executing the CCIP-read operations.\n   */\n  async ccipReadFetch(tx, calldata, urls) {\n    if (this.disableCcipRead || urls.length === 0 || tx.to == null) {\n      return null;\n    }\n    const sender = tx.to.toLowerCase();\n    const data = calldata.toLowerCase();\n    const errorMessages = [];\n    for (let i = 0; i < urls.length; i++) {\n      const url = urls[i];\n      // URL expansion\n      const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n      // If no {data} is present, use POST; otherwise GET\n      //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n      //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n      //    value.status = response.statusCode;\n      //    return value;\n      //});\n      const request = new index_js_6.FetchRequest(href);\n      if (url.indexOf(\"{data}\") === -1) {\n        request.body = {\n          data,\n          sender\n        };\n      }\n      this.emit(\"debug\", {\n        action: \"sendCcipReadFetchRequest\",\n        request,\n        index: i,\n        urls\n      });\n      let errorMessage = \"unknown error\";\n      const resp = await request.send();\n      try {\n        const result = resp.bodyJson;\n        if (result.data) {\n          this.emit(\"debug\", {\n            action: \"receiveCcipReadFetchResult\",\n            request,\n            result\n          });\n          return result.data;\n        }\n        if (result.message) {\n          errorMessage = result.message;\n        }\n        this.emit(\"debug\", {\n          action: \"receiveCcipReadFetchError\",\n          request,\n          result\n        });\n      } catch (error) {}\n      // 4xx indicates the result is not present; stop\n      (0, index_js_6.assert)(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${errorMessage}`, \"OFFCHAIN_FAULT\", {\n        reason: \"404_MISSING_RESOURCE\",\n        transaction: tx,\n        info: {\n          url,\n          errorMessage\n        }\n      });\n      // 5xx indicates server issue; try the next url\n      errorMessages.push(errorMessage);\n    }\n    (0, index_js_6.assert)(false, `error encountered during CCIP fetch: ${errorMessages.map(m => JSON.stringify(m)).join(\", \")}`, \"OFFCHAIN_FAULT\", {\n      reason: \"500_SERVER_ERROR\",\n      transaction: tx,\n      info: {\n        urls,\n        errorMessages\n      }\n    });\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a block before\n   *  returning it, to add additional properties or an alternate\n   *  sub-class of [[Block]].\n   */\n  _wrapBlock(value, network) {\n    return new provider_js_1.Block((0, format_js_1.formatBlock)(value), this);\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a log before\n   *  returning it, to add additional properties or an alternate\n   *  sub-class of [[Log]].\n   */\n  _wrapLog(value, network) {\n    return new provider_js_1.Log((0, format_js_1.formatLog)(value), this);\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a transaction\n   *  receipt before returning it, to add additional properties or an\n   *  alternate sub-class of [[TransactionReceipt]].\n   */\n  _wrapTransactionReceipt(value, network) {\n    return new provider_js_1.TransactionReceipt((0, format_js_1.formatTransactionReceipt)(value), this);\n  }\n  /**\n   *  Provides the opportunity for a sub-class to wrap a transaction\n   *  response before returning it, to add additional properties or an\n   *  alternate sub-class of [[TransactionResponse]].\n   */\n  _wrapTransactionResponse(tx, network) {\n    return new provider_js_1.TransactionResponse((0, format_js_1.formatTransactionResponse)(tx), this);\n  }\n  /**\n   *  Resolves to the Network, forcing a network detection using whatever\n   *  technique the sub-class requires.\n   *\n   *  Sub-classes **must** override this.\n   */\n  _detectNetwork() {\n    (0, index_js_6.assert)(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"_detectNetwork\"\n    });\n  }\n  /**\n   *  Sub-classes should use this to perform all built-in operations. All\n   *  methods sanitizes and normalizes the values passed into this.\n   *\n   *  Sub-classes **must** override this.\n   */\n  async _perform(req) {\n    (0, index_js_6.assert)(false, `unsupported method: ${req.method}`, \"UNSUPPORTED_OPERATION\", {\n      operation: req.method,\n      info: req\n    });\n  }\n  // State\n  async getBlockNumber() {\n    const blockNumber = (0, index_js_6.getNumber)(await _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n      method: \"getBlockNumber\"\n    }), \"%response\");\n    if (_classPrivateFieldGet(this, _lastBlockNumber) >= 0) {\n      _classPrivateFieldSet(this, _lastBlockNumber, blockNumber);\n    }\n    return blockNumber;\n  }\n  /**\n   *  Returns or resolves to the address for %%address%%, resolving ENS\n   *  names and [[Addressable]] objects and returning if already an\n   *  address.\n   */\n  _getAddress(address) {\n    return (0, index_js_1.resolveAddress)(address, this);\n  }\n  /**\n   *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n   *  negative values and returning if already a valid block tag.\n   */\n  _getBlockTag(blockTag) {\n    if (blockTag == null) {\n      return \"latest\";\n    }\n    switch (blockTag) {\n      case \"earliest\":\n        return \"0x0\";\n      case \"latest\":\n      case \"pending\":\n      case \"safe\":\n      case \"finalized\":\n        return blockTag;\n    }\n    if ((0, index_js_6.isHexString)(blockTag)) {\n      if ((0, index_js_6.isHexString)(blockTag, 32)) {\n        return blockTag;\n      }\n      return (0, index_js_6.toQuantity)(blockTag);\n    }\n    if (typeof blockTag === \"bigint\") {\n      blockTag = (0, index_js_6.getNumber)(blockTag, \"blockTag\");\n    }\n    if (typeof blockTag === \"number\") {\n      if (blockTag >= 0) {\n        return (0, index_js_6.toQuantity)(blockTag);\n      }\n      if (_classPrivateFieldGet(this, _lastBlockNumber) >= 0) {\n        return (0, index_js_6.toQuantity)(_classPrivateFieldGet(this, _lastBlockNumber) + blockTag);\n      }\n      return this.getBlockNumber().then(b => (0, index_js_6.toQuantity)(b + blockTag));\n    }\n    (0, index_js_6.assertArgument)(false, \"invalid blockTag\", \"blockTag\", blockTag);\n  }\n  /**\n   *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n   *  names or [[Addressable]] object and returning if already a valid\n   *  filter.\n   */\n  _getFilter(filter) {\n    // Create a canonical representation of the topics\n    const topics = (filter.topics || []).map(t => {\n      if (t == null) {\n        return null;\n      }\n      if (Array.isArray(t)) {\n        return concisify(t.map(t => t.toLowerCase()));\n      }\n      return t.toLowerCase();\n    });\n    const blockHash = \"blockHash\" in filter ? filter.blockHash : undefined;\n    const resolve = (_address, fromBlock, toBlock) => {\n      let address = undefined;\n      switch (_address.length) {\n        case 0:\n          break;\n        case 1:\n          address = _address[0];\n          break;\n        default:\n          _address.sort();\n          address = _address;\n      }\n      if (blockHash) {\n        if (fromBlock != null || toBlock != null) {\n          throw new Error(\"invalid filter\");\n        }\n      }\n      const filter = {};\n      if (address) {\n        filter.address = address;\n      }\n      if (topics.length) {\n        filter.topics = topics;\n      }\n      if (fromBlock) {\n        filter.fromBlock = fromBlock;\n      }\n      if (toBlock) {\n        filter.toBlock = toBlock;\n      }\n      if (blockHash) {\n        filter.blockHash = blockHash;\n      }\n      return filter;\n    };\n    // Addresses could be async (ENS names or Addressables)\n    let address = [];\n    if (filter.address) {\n      if (Array.isArray(filter.address)) {\n        for (const addr of filter.address) {\n          address.push(this._getAddress(addr));\n        }\n      } else {\n        address.push(this._getAddress(filter.address));\n      }\n    }\n    let fromBlock = undefined;\n    if (\"fromBlock\" in filter) {\n      fromBlock = this._getBlockTag(filter.fromBlock);\n    }\n    let toBlock = undefined;\n    if (\"toBlock\" in filter) {\n      toBlock = this._getBlockTag(filter.toBlock);\n    }\n    if (address.filter(a => typeof a !== \"string\").length || fromBlock != null && typeof fromBlock !== \"string\" || toBlock != null && typeof toBlock !== \"string\") {\n      return Promise.all([Promise.all(address), fromBlock, toBlock]).then(result => {\n        return resolve(result[0], result[1], result[2]);\n      });\n    }\n    return resolve(address, fromBlock, toBlock);\n  }\n  /**\n   *  Returns or resovles to a transaction for %%request%%, resolving\n   *  any ENS names or [[Addressable]] and returning if already a valid\n   *  transaction.\n   */\n  _getTransactionRequest(_request) {\n    const request = (0, provider_js_1.copyRequest)(_request);\n    const promises = [];\n    [\"to\", \"from\"].forEach(key => {\n      if (request[key] == null) {\n        return;\n      }\n      const addr = (0, index_js_1.resolveAddress)(request[key]);\n      if (isPromise(addr)) {\n        promises.push(async function () {\n          request[key] = await addr;\n        }());\n      } else {\n        request[key] = addr;\n      }\n    });\n    if (request.blockTag != null) {\n      const blockTag = this._getBlockTag(request.blockTag);\n      if (isPromise(blockTag)) {\n        promises.push(async function () {\n          request.blockTag = await blockTag;\n        }());\n      } else {\n        request.blockTag = blockTag;\n      }\n    }\n    if (promises.length) {\n      return async function () {\n        await Promise.all(promises);\n        return request;\n      }();\n    }\n    return request;\n  }\n  async getNetwork() {\n    // No explicit network was set and this is our first time\n    if (_classPrivateFieldGet(this, _networkPromise) == null) {\n      // Detect the current network (shared with all calls)\n      const detectNetwork = this._detectNetwork().then(network => {\n        this.emit(\"network\", network, null);\n        return network;\n      }, error => {\n        // Reset the networkPromise on failure, so we will try again\n        if (_classPrivateFieldGet(this, _networkPromise) === detectNetwork) {\n          _classPrivateFieldSet(this, _networkPromise, null);\n        }\n        throw error;\n      });\n      _classPrivateFieldSet(this, _networkPromise, detectNetwork);\n      return (await detectNetwork).clone();\n    }\n    const networkPromise = _classPrivateFieldGet(this, _networkPromise);\n    const [expected, actual] = await Promise.all([networkPromise, this._detectNetwork() // The actual connected network\n    ]);\n\n    if (expected.chainId !== actual.chainId) {\n      if (_classPrivateFieldGet(this, _anyNetwork)) {\n        // The \"any\" network can change, so notify listeners\n        this.emit(\"network\", actual, expected);\n        // Update the network if something else hasn't already changed it\n        if (_classPrivateFieldGet(this, _networkPromise) === networkPromise) {\n          _classPrivateFieldSet(this, _networkPromise, Promise.resolve(actual));\n        }\n      } else {\n        // Otherwise, we do not allow changes to the underlying network\n        (0, index_js_6.assert)(false, `network changed: ${expected.chainId} => ${actual.chainId} `, \"NETWORK_ERROR\", {\n          event: \"changed\"\n        });\n      }\n    }\n    return expected.clone();\n  }\n  async getFeeData() {\n    const {\n      block,\n      gasPrice\n    } = await (0, index_js_6.resolveProperties)({\n      block: this.getBlock(\"latest\"),\n      gasPrice: (async () => {\n        try {\n          const gasPrice = await _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n            method: \"getGasPrice\"\n          });\n          return (0, index_js_6.getBigInt)(gasPrice, \"%response\");\n        } catch (error) {}\n        return null;\n      })()\n    });\n    let maxFeePerGas = null,\n      maxPriorityFeePerGas = null;\n    if (block && block.baseFeePerGas) {\n      // We may want to compute this more accurately in the future,\n      // using the formula \"check if the base fee is correct\".\n      // See: https://eips.ethereum.org/EIPS/eip-1559\n      maxPriorityFeePerGas = BigInt(\"1000000000\");\n      // Allow a network to override their maximum priority fee per gas\n      //const priorityFeePlugin = (await this.getNetwork()).getPlugin<MaxPriorityFeePlugin>(\"org.ethers.plugins.max-priority-fee\");\n      //if (priorityFeePlugin) {\n      //    maxPriorityFeePerGas = await priorityFeePlugin.getPriorityFee(this);\n      //}\n      maxFeePerGas = block.baseFeePerGas * BN_2 + maxPriorityFeePerGas;\n    }\n    return new provider_js_1.FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n  }\n  async estimateGas(_tx) {\n    let tx = this._getTransactionRequest(_tx);\n    if (isPromise(tx)) {\n      tx = await tx;\n    }\n    return (0, index_js_6.getBigInt)(await _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n      method: \"estimateGas\",\n      transaction: tx\n    }), \"%response\");\n  }\n  async call(_tx) {\n    const {\n      tx,\n      blockTag\n    } = await (0, index_js_6.resolveProperties)({\n      tx: this._getTransactionRequest(_tx),\n      blockTag: this._getBlockTag(_tx.blockTag)\n    });\n    return await _classPrivateMethodGet(this, _checkNetwork, _checkNetwork2).call(this, _classPrivateMethodGet(this, _call, _call2).call(this, tx, blockTag, _tx.enableCcipRead ? 0 : -1));\n  }\n  async getBalance(address, blockTag) {\n    return (0, index_js_6.getBigInt)(await _classPrivateMethodGet(this, _getAccountValue, _getAccountValue2).call(this, {\n      method: \"getBalance\"\n    }, address, blockTag), \"%response\");\n  }\n  async getTransactionCount(address, blockTag) {\n    return (0, index_js_6.getNumber)(await _classPrivateMethodGet(this, _getAccountValue, _getAccountValue2).call(this, {\n      method: \"getTransactionCount\"\n    }, address, blockTag), \"%response\");\n  }\n  async getCode(address, blockTag) {\n    return (0, index_js_6.hexlify)(await _classPrivateMethodGet(this, _getAccountValue, _getAccountValue2).call(this, {\n      method: \"getCode\"\n    }, address, blockTag));\n  }\n  async getStorage(address, _position, blockTag) {\n    const position = (0, index_js_6.getBigInt)(_position, \"position\");\n    return (0, index_js_6.hexlify)(await _classPrivateMethodGet(this, _getAccountValue, _getAccountValue2).call(this, {\n      method: \"getStorage\",\n      position\n    }, address, blockTag));\n  }\n  // Write\n  async broadcastTransaction(signedTx) {\n    const {\n      blockNumber,\n      hash,\n      network\n    } = await (0, index_js_6.resolveProperties)({\n      blockNumber: this.getBlockNumber(),\n      hash: this._perform({\n        method: \"broadcastTransaction\",\n        signedTransaction: signedTx\n      }),\n      network: this.getNetwork()\n    });\n    const tx = index_js_5.Transaction.from(signedTx);\n    if (tx.hash !== hash) {\n      throw new Error(\"@TODO: the returned hash did not match\");\n    }\n    return this._wrapTransactionResponse(tx, network).replaceableTransaction(blockNumber);\n  }\n  // Queries\n  async getBlock(block, prefetchTxs) {\n    const {\n      network,\n      params\n    } = await (0, index_js_6.resolveProperties)({\n      network: this.getNetwork(),\n      params: _classPrivateMethodGet(this, _getBlock, _getBlock2).call(this, block, !!prefetchTxs)\n    });\n    if (params == null) {\n      return null;\n    }\n    return this._wrapBlock(params, network);\n  }\n  async getTransaction(hash) {\n    const {\n      network,\n      params\n    } = await (0, index_js_6.resolveProperties)({\n      network: this.getNetwork(),\n      params: _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n        method: \"getTransaction\",\n        hash\n      })\n    });\n    if (params == null) {\n      return null;\n    }\n    return this._wrapTransactionResponse(params, network);\n  }\n  async getTransactionReceipt(hash) {\n    const {\n      network,\n      params\n    } = await (0, index_js_6.resolveProperties)({\n      network: this.getNetwork(),\n      params: _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n        method: \"getTransactionReceipt\",\n        hash\n      })\n    });\n    if (params == null) {\n      return null;\n    }\n    // Some backends did not backfill the effectiveGasPrice into old transactions\n    // in the receipt, so we look it up manually and inject it.\n    if (params.gasPrice == null && params.effectiveGasPrice == null) {\n      const tx = await _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n        method: \"getTransaction\",\n        hash\n      });\n      if (tx == null) {\n        throw new Error(\"report this; could not find tx or effectiveGasPrice\");\n      }\n      params.effectiveGasPrice = tx.gasPrice;\n    }\n    return this._wrapTransactionReceipt(params, network);\n  }\n  async getTransactionResult(hash) {\n    const {\n      result\n    } = await (0, index_js_6.resolveProperties)({\n      network: this.getNetwork(),\n      result: _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n        method: \"getTransactionResult\",\n        hash\n      })\n    });\n    if (result == null) {\n      return null;\n    }\n    return (0, index_js_6.hexlify)(result);\n  }\n  // Bloom-filter Queries\n  async getLogs(_filter) {\n    let filter = this._getFilter(_filter);\n    if (isPromise(filter)) {\n      filter = await filter;\n    }\n    const {\n      network,\n      params\n    } = await (0, index_js_6.resolveProperties)({\n      network: this.getNetwork(),\n      params: _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n        method: \"getLogs\",\n        filter\n      })\n    });\n    return params.map(p => this._wrapLog(p, network));\n  }\n  // ENS\n  _getProvider(chainId) {\n    (0, index_js_6.assert)(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"_getProvider()\"\n    });\n  }\n  async getResolver(name) {\n    return await ens_resolver_js_1.EnsResolver.fromName(this, name);\n  }\n  async getAvatar(name) {\n    const resolver = await this.getResolver(name);\n    if (resolver) {\n      return await resolver.getAvatar();\n    }\n    return null;\n  }\n  async resolveName(name) {\n    const resolver = await this.getResolver(name);\n    if (resolver) {\n      return await resolver.getAddress();\n    }\n    return null;\n  }\n  async lookupAddress(address) {\n    address = (0, index_js_1.getAddress)(address);\n    const node = (0, index_js_4.namehash)(address.substring(2).toLowerCase() + \".addr.reverse\");\n    try {\n      const ensAddr = await ens_resolver_js_1.EnsResolver.getEnsAddress(this);\n      const ensContract = new index_js_3.Contract(ensAddr, [\"function resolver(bytes32) view returns (address)\"], this);\n      const resolver = await ensContract.resolver(node);\n      if (resolver == null || resolver === index_js_2.ZeroAddress) {\n        return null;\n      }\n      const resolverContract = new index_js_3.Contract(resolver, [\"function name(bytes32) view returns (string)\"], this);\n      const name = await resolverContract.name(node);\n      // Failed forward resolution\n      const check = await this.resolveName(name);\n      if (check !== address) {\n        return null;\n      }\n      return name;\n    } catch (error) {\n      // No data was returned from the resolver\n      if ((0, index_js_6.isError)(error, \"BAD_DATA\") && error.value === \"0x\") {\n        return null;\n      }\n      // Something reerted\n      if ((0, index_js_6.isError)(error, \"CALL_EXCEPTION\")) {\n        return null;\n      }\n      throw error;\n    }\n    return null;\n  }\n  async waitForTransaction(hash, _confirms, timeout) {\n    const confirms = _confirms != null ? _confirms : 1;\n    if (confirms === 0) {\n      return this.getTransactionReceipt(hash);\n    }\n    return new Promise(async (resolve, reject) => {\n      let timer = null;\n      const listener = async blockNumber => {\n        try {\n          const receipt = await this.getTransactionReceipt(hash);\n          if (receipt != null) {\n            if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n              resolve(receipt);\n              //this.off(\"block\", listener);\n              if (timer) {\n                clearTimeout(timer);\n                timer = null;\n              }\n              return;\n            }\n          }\n        } catch (error) {\n          console.log(\"EEE\", error);\n        }\n        this.once(\"block\", listener);\n      };\n      if (timeout != null) {\n        timer = setTimeout(() => {\n          if (timer == null) {\n            return;\n          }\n          timer = null;\n          this.off(\"block\", listener);\n          reject((0, index_js_6.makeError)(\"timeout\", \"TIMEOUT\", {\n            reason: \"timeout\"\n          }));\n        }, timeout);\n      }\n      listener(await this.getBlockNumber());\n    });\n  }\n  async waitForBlock(blockTag) {\n    (0, index_js_6.assert)(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n      operation: \"waitForBlock\"\n    });\n  }\n  /**\n   *  Clear a timer created using the [[_setTimeout]] method.\n   */\n  _clearTimeout(timerId) {\n    const timer = _classPrivateFieldGet(this, _timers).get(timerId);\n    if (!timer) {\n      return;\n    }\n    if (timer.timer) {\n      clearTimeout(timer.timer);\n    }\n    _classPrivateFieldGet(this, _timers).delete(timerId);\n  }\n  /**\n   *  Create a timer that will execute %%func%% after at least %%timeout%%\n   *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n   *  in the next event loop.\n   *\n   *  [Pausing](AbstractProvider-paused) the provider will pause any\n   *  associated timers.\n   */\n  _setTimeout(_func, timeout) {\n    var _this$nextTimer, _this$nextTimer2;\n    if (timeout == null) {\n      timeout = 0;\n    }\n    const timerId = (_classPrivateFieldSet(this, _nextTimer, (_this$nextTimer = _classPrivateFieldGet(this, _nextTimer), _this$nextTimer2 = _this$nextTimer++, _this$nextTimer)), _this$nextTimer2);\n    const func = () => {\n      _classPrivateFieldGet(this, _timers).delete(timerId);\n      _func();\n    };\n    if (this.paused) {\n      _classPrivateFieldGet(this, _timers).set(timerId, {\n        timer: null,\n        func,\n        time: timeout\n      });\n    } else {\n      const timer = setTimeout(func, timeout);\n      _classPrivateFieldGet(this, _timers).set(timerId, {\n        timer,\n        func,\n        time: getTime()\n      });\n    }\n    return timerId;\n  }\n  /**\n   *  Perform %%func%% on each subscriber.\n   */\n  _forEachSubscriber(func) {\n    for (const sub of _classPrivateFieldGet(this, _subs).values()) {\n      func(sub.subscriber);\n    }\n  }\n  /**\n   *  Sub-classes may override this to customize subscription\n   *  implementations.\n   */\n  _getSubscriber(sub) {\n    switch (sub.type) {\n      case \"debug\":\n      case \"error\":\n      case \"network\":\n        return new UnmanagedSubscriber(sub.type);\n      case \"block\":\n        return new subscriber_polling_js_1.PollingBlockSubscriber(this);\n      case \"event\":\n        return new subscriber_polling_js_1.PollingEventSubscriber(this, sub.filter);\n      case \"transaction\":\n        return new subscriber_polling_js_1.PollingTransactionSubscriber(this, sub.hash);\n      case \"orphan\":\n        return new subscriber_polling_js_1.PollingOrphanSubscriber(this, sub.filter);\n    }\n    throw new Error(`unsupported event: ${sub.type}`);\n  }\n  /**\n   *  If a [[Subscriber]] fails and needs to replace itself, this\n   *  method may be used.\n   *\n   *  For example, this is used for providers when using the\n   *  ``eth_getFilterChanges`` method, which can return null if state\n   *  filters are not supported by the backend, allowing the Subscriber\n   *  to swap in a [[PollingEventSubscriber]].\n   */\n  _recoverSubscriber(oldSub, newSub) {\n    for (const sub of _classPrivateFieldGet(this, _subs).values()) {\n      if (sub.subscriber === oldSub) {\n        if (sub.started) {\n          sub.subscriber.stop();\n        }\n        sub.subscriber = newSub;\n        if (sub.started) {\n          newSub.start();\n        }\n        if (_classPrivateFieldGet(this, _pausedState) != null) {\n          newSub.pause(_classPrivateFieldGet(this, _pausedState));\n        }\n        break;\n      }\n    }\n  }\n  async on(event, listener) {\n    const sub = await _classPrivateMethodGet(this, _getSub, _getSub2).call(this, event);\n    sub.listeners.push({\n      listener,\n      once: false\n    });\n    if (!sub.started) {\n      sub.subscriber.start();\n      sub.started = true;\n      if (_classPrivateFieldGet(this, _pausedState) != null) {\n        sub.subscriber.pause(_classPrivateFieldGet(this, _pausedState));\n      }\n    }\n    return this;\n  }\n  async once(event, listener) {\n    const sub = await _classPrivateMethodGet(this, _getSub, _getSub2).call(this, event);\n    sub.listeners.push({\n      listener,\n      once: true\n    });\n    if (!sub.started) {\n      sub.subscriber.start();\n      sub.started = true;\n      if (_classPrivateFieldGet(this, _pausedState) != null) {\n        sub.subscriber.pause(_classPrivateFieldGet(this, _pausedState));\n      }\n    }\n    return this;\n  }\n  async emit(event, ...args) {\n    const sub = await _classPrivateMethodGet(this, _hasSub, _hasSub2).call(this, event, args);\n    // If there is not subscription or if a recent emit removed\n    // the last of them (which also deleted the sub) do nothing\n    if (!sub || sub.listeners.length === 0) {\n      return false;\n    }\n    ;\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({\n      listener,\n      once\n    }) => {\n      const payload = new index_js_6.EventPayload(this, once ? null : listener, event);\n      try {\n        listener.call(this, ...args, payload);\n      } catch (error) {}\n      return !once;\n    });\n    if (sub.listeners.length === 0) {\n      if (sub.started) {\n        sub.subscriber.stop();\n      }\n      _classPrivateFieldGet(this, _subs).delete(sub.tag);\n    }\n    return count > 0;\n  }\n  async listenerCount(event) {\n    if (event) {\n      const sub = await _classPrivateMethodGet(this, _hasSub, _hasSub2).call(this, event);\n      if (!sub) {\n        return 0;\n      }\n      return sub.listeners.length;\n    }\n    let total = 0;\n    for (const {\n      listeners\n    } of _classPrivateFieldGet(this, _subs).values()) {\n      total += listeners.length;\n    }\n    return total;\n  }\n  async listeners(event) {\n    if (event) {\n      const sub = await _classPrivateMethodGet(this, _hasSub, _hasSub2).call(this, event);\n      if (!sub) {\n        return [];\n      }\n      return sub.listeners.map(({\n        listener\n      }) => listener);\n    }\n    let result = [];\n    for (const {\n      listeners\n    } of _classPrivateFieldGet(this, _subs).values()) {\n      result = result.concat(listeners.map(({\n        listener\n      }) => listener));\n    }\n    return result;\n  }\n  async off(event, listener) {\n    const sub = await _classPrivateMethodGet(this, _hasSub, _hasSub2).call(this, event);\n    if (!sub) {\n      return this;\n    }\n    if (listener) {\n      const index = sub.listeners.map(({\n        listener\n      }) => listener).indexOf(listener);\n      if (index >= 0) {\n        sub.listeners.splice(index, 1);\n      }\n    }\n    if (!listener || sub.listeners.length === 0) {\n      if (sub.started) {\n        sub.subscriber.stop();\n      }\n      _classPrivateFieldGet(this, _subs).delete(sub.tag);\n    }\n    return this;\n  }\n  async removeAllListeners(event) {\n    if (event) {\n      const {\n        tag,\n        started,\n        subscriber\n      } = await _classPrivateMethodGet(this, _getSub, _getSub2).call(this, event);\n      if (started) {\n        subscriber.stop();\n      }\n      _classPrivateFieldGet(this, _subs).delete(tag);\n    } else {\n      for (const [tag, {\n        started,\n        subscriber\n      }] of _classPrivateFieldGet(this, _subs)) {\n        if (started) {\n          subscriber.stop();\n        }\n        _classPrivateFieldGet(this, _subs).delete(tag);\n      }\n    }\n    return this;\n  }\n  // Alias for \"on\"\n  async addListener(event, listener) {\n    return await this.on(event, listener);\n  }\n  // Alias for \"off\"\n  async removeListener(event, listener) {\n    return this.off(event, listener);\n  }\n  /**\n   *  If this provider has been destroyed using the [[destroy]] method.\n   *\n   *  Once destroyed, all resources are reclaimed, internal event loops\n   *  and timers are cleaned up and no further requests may be sent to\n   *  the provider.\n   */\n  get destroyed() {\n    return _classPrivateFieldGet(this, _destroyed);\n  }\n  /**\n   *  Sub-classes may use this to shutdown any sockets or release their\n   *  resources and reject any pending requests.\n   *\n   *  Sub-classes **must** call ``super.destroy()``.\n   */\n  destroy() {\n    // Stop all listeners\n    this.removeAllListeners();\n    // Shut down all tiemrs\n    for (const timerId of _classPrivateFieldGet(this, _timers).keys()) {\n      this._clearTimeout(timerId);\n    }\n    _classPrivateFieldSet(this, _destroyed, true);\n  }\n  /**\n   *  Whether the provider is currently paused.\n   *\n   *  A paused provider will not emit any events, and generally should\n   *  not make any requests to the network, but that is up to sub-classes\n   *  to manage.\n   *\n   *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n   *  which will buffer any events that occur while paused until the\n   *  provider is unpaused.\n   */\n  get paused() {\n    return _classPrivateFieldGet(this, _pausedState) != null;\n  }\n  set paused(pause) {\n    if (!!pause === this.paused) {\n      return;\n    }\n    if (this.paused) {\n      this.resume();\n    } else {\n      this.pause(false);\n    }\n  }\n  /**\n   *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n   *  while paused are dropped, otherwise all events will be emitted once\n   *  the provider is unpaused.\n   */\n  pause(dropWhilePaused) {\n    _classPrivateFieldSet(this, _lastBlockNumber, -1);\n    if (_classPrivateFieldGet(this, _pausedState) != null) {\n      if (_classPrivateFieldGet(this, _pausedState) == !!dropWhilePaused) {\n        return;\n      }\n      (0, index_js_6.assert)(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"pause\"\n      });\n    }\n    this._forEachSubscriber(s => s.pause(dropWhilePaused));\n    _classPrivateFieldSet(this, _pausedState, !!dropWhilePaused);\n    for (const timer of _classPrivateFieldGet(this, _timers).values()) {\n      // Clear the timer\n      if (timer.timer) {\n        clearTimeout(timer.timer);\n      }\n      // Remaining time needed for when we become unpaused\n      timer.time = getTime() - timer.time;\n    }\n  }\n  /**\n   *  Resume the provider.\n   */\n  resume() {\n    if (_classPrivateFieldGet(this, _pausedState) == null) {\n      return;\n    }\n    this._forEachSubscriber(s => s.resume());\n    _classPrivateFieldSet(this, _pausedState, null);\n    for (const timer of _classPrivateFieldGet(this, _timers).values()) {\n      // Remaining time when we were paused\n      let timeout = timer.time;\n      if (timeout < 0) {\n        timeout = 0;\n      }\n      // Start time (in cause paused, so we con compute remaininf time)\n      timer.time = getTime();\n      // Start the timer\n      setTimeout(timer.func, timeout);\n    }\n  }\n}\nasync function _perform2(req) {\n  const timeout = _classPrivateFieldGet(this, _options).cacheTimeout;\n  // Caching disabled\n  if (timeout < 0) {\n    return await this._perform(req);\n  }\n  // Create a tag\n  const tag = getTag(req.method, req);\n  let perform = _classPrivateFieldGet(this, _performCache).get(tag);\n  if (!perform) {\n    perform = this._perform(req);\n    _classPrivateFieldGet(this, _performCache).set(tag, perform);\n    setTimeout(() => {\n      if (_classPrivateFieldGet(this, _performCache).get(tag) === perform) {\n        _classPrivateFieldGet(this, _performCache).delete(tag);\n      }\n    }, timeout);\n  }\n  return await perform;\n}\nasync function _call2(tx, blockTag, attempt) {\n  (0, index_js_6.assert)(attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n    reason: \"TOO_MANY_REDIRECTS\",\n    transaction: Object.assign({}, tx, {\n      blockTag,\n      enableCcipRead: true\n    })\n  });\n  // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n  const transaction = (0, provider_js_1.copyRequest)(tx);\n  try {\n    return (0, index_js_6.hexlify)(await this._perform({\n      method: \"call\",\n      transaction,\n      blockTag\n    }));\n  } catch (error) {\n    // CCIP Read OffchainLookup\n    if (!this.disableCcipRead && (0, index_js_6.isCallException)(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && (0, index_js_6.dataSlice)(error.data, 0, 4) === \"0x556f1830\") {\n      const data = error.data;\n      const txSender = await (0, index_js_1.resolveAddress)(transaction.to, this);\n      // Parse the CCIP Read Arguments\n      let ccipArgs;\n      try {\n        ccipArgs = parseOffchainLookup((0, index_js_6.dataSlice)(error.data, 4));\n      } catch (error) {\n        (0, index_js_6.assert)(false, error.message, \"OFFCHAIN_FAULT\", {\n          reason: \"BAD_DATA\",\n          transaction,\n          info: {\n            data\n          }\n        });\n      }\n      // Check the sender of the OffchainLookup matches the transaction\n      (0, index_js_6.assert)(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(), \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n        action: \"call\",\n        data,\n        reason: \"OffchainLookup\",\n        transaction: transaction,\n        invocation: null,\n        revert: {\n          signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n          name: \"OffchainLookup\",\n          args: ccipArgs.errorArgs\n        }\n      });\n      const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n      (0, index_js_6.assert)(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n        reason: \"FETCH_FAILED\",\n        transaction,\n        info: {\n          data: error.data,\n          errorArgs: ccipArgs.errorArgs\n        }\n      });\n      const tx = {\n        to: txSender,\n        data: (0, index_js_6.concat)([ccipArgs.selector, encodeBytes([ccipResult, ccipArgs.extraData])])\n      };\n      this.emit(\"debug\", {\n        action: \"sendCcipReadCall\",\n        transaction: tx\n      });\n      try {\n        const result = await _classPrivateMethodGet(this, _call, _call2).call(this, tx, blockTag, attempt + 1);\n        this.emit(\"debug\", {\n          action: \"receiveCcipReadCallResult\",\n          transaction: Object.assign({}, tx),\n          result\n        });\n        return result;\n      } catch (error) {\n        this.emit(\"debug\", {\n          action: \"receiveCcipReadCallError\",\n          transaction: Object.assign({}, tx),\n          error\n        });\n        throw error;\n      }\n    }\n    throw error;\n  }\n}\nasync function _checkNetwork2(promise) {\n  const {\n    value\n  } = await (0, index_js_6.resolveProperties)({\n    network: this.getNetwork(),\n    value: promise\n  });\n  return value;\n}\nasync function _getAccountValue2(request, _address, _blockTag) {\n  let address = this._getAddress(_address);\n  let blockTag = this._getBlockTag(_blockTag);\n  if (typeof address !== \"string\" || typeof blockTag !== \"string\") {\n    [address, blockTag] = await Promise.all([address, blockTag]);\n  }\n  return await _classPrivateMethodGet(this, _checkNetwork, _checkNetwork2).call(this, _classPrivateMethodGet(this, _perform, _perform2).call(this, Object.assign(request, {\n    address,\n    blockTag\n  })));\n}\nasync function _getBlock2(block, includeTransactions) {\n  // @TODO: Add CustomBlockPlugin check\n  if ((0, index_js_6.isHexString)(block, 32)) {\n    return await _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n      method: \"getBlock\",\n      blockHash: block,\n      includeTransactions\n    });\n  }\n  let blockTag = this._getBlockTag(block);\n  if (typeof blockTag !== \"string\") {\n    blockTag = await blockTag;\n  }\n  return await _classPrivateMethodGet(this, _perform, _perform2).call(this, {\n    method: \"getBlock\",\n    blockTag,\n    includeTransactions\n  });\n}\nasync function _hasSub2(event, emitArgs) {\n  let sub = await getSubscription(event, this);\n  // This is a log that is removing an existing log; we actually want\n  // to emit an orphan event for the removed log\n  if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n    sub = await getSubscription({\n      orphan: \"drop-log\",\n      log: emitArgs[0]\n    }, this);\n  }\n  return _classPrivateFieldGet(this, _subs).get(sub.tag) || null;\n}\nasync function _getSub2(event) {\n  const subscription = await getSubscription(event, this);\n  // Prevent tampering with our tag in any subclass' _getSubscriber\n  const tag = subscription.tag;\n  let sub = _classPrivateFieldGet(this, _subs).get(tag);\n  if (!sub) {\n    const subscriber = this._getSubscriber(subscription);\n    const addressableMap = new WeakMap();\n    const nameMap = new Map();\n    sub = {\n      subscriber,\n      tag,\n      addressableMap,\n      nameMap,\n      started: false,\n      listeners: []\n    };\n    _classPrivateFieldGet(this, _subs).set(tag, sub);\n  }\n  return sub;\n}\nexports.AbstractProvider = AbstractProvider;\nfunction _parseString(result, start) {\n  try {\n    const bytes = _parseBytes(result, start);\n    if (bytes) {\n      return (0, index_js_6.toUtf8String)(bytes);\n    }\n  } catch (error) {}\n  return null;\n}\nfunction _parseBytes(result, start) {\n  if (result === \"0x\") {\n    return null;\n  }\n  try {\n    const offset = (0, index_js_6.getNumber)((0, index_js_6.dataSlice)(result, start, start + 32));\n    const length = (0, index_js_6.getNumber)((0, index_js_6.dataSlice)(result, offset, offset + 32));\n    return (0, index_js_6.dataSlice)(result, offset + 32, offset + 32 + length);\n  } catch (error) {}\n  return null;\n}\nfunction numPad(value) {\n  const result = (0, index_js_6.toBeArray)(value);\n  if (result.length > 32) {\n    throw new Error(\"internal; should not happen\");\n  }\n  const padded = new Uint8Array(32);\n  padded.set(result, 32 - result.length);\n  return padded;\n}\nfunction bytesPad(value) {\n  if (value.length % 32 === 0) {\n    return value;\n  }\n  const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n  result.set(value);\n  return result;\n}\nconst empty = new Uint8Array([]);\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n  const result = [];\n  let byteCount = 0;\n  // Add place-holders for pointers as we add items\n  for (let i = 0; i < datas.length; i++) {\n    result.push(empty);\n    byteCount += 32;\n  }\n  for (let i = 0; i < datas.length; i++) {\n    const data = (0, index_js_6.getBytes)(datas[i]);\n    // Update the bytes offset\n    result[i] = numPad(byteCount);\n    // The length and padded value of data\n    result.push(numPad(data.length));\n    result.push(bytesPad(data));\n    byteCount += 32 + Math.ceil(data.length / 32) * 32;\n  }\n  return (0, index_js_6.concat)(result);\n}\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nfunction parseOffchainLookup(data) {\n  const result = {\n    sender: \"\",\n    urls: [],\n    calldata: \"\",\n    selector: \"\",\n    extraData: \"\",\n    errorArgs: []\n  };\n  (0, index_js_6.assert)((0, index_js_6.dataLength)(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n    reason: \"insufficient OffchainLookup data\"\n  });\n  const sender = (0, index_js_6.dataSlice)(data, 0, 32);\n  (0, index_js_6.assert)((0, index_js_6.dataSlice)(sender, 0, 12) === (0, index_js_6.dataSlice)(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n    reason: \"corrupt OffchainLookup sender\"\n  });\n  result.sender = (0, index_js_6.dataSlice)(sender, 12);\n  // Read the URLs from the response\n  try {\n    const urls = [];\n    const urlsOffset = (0, index_js_6.getNumber)((0, index_js_6.dataSlice)(data, 32, 64));\n    const urlsLength = (0, index_js_6.getNumber)((0, index_js_6.dataSlice)(data, urlsOffset, urlsOffset + 32));\n    const urlsData = (0, index_js_6.dataSlice)(data, urlsOffset + 32);\n    for (let u = 0; u < urlsLength; u++) {\n      const url = _parseString(urlsData, u * 32);\n      if (url == null) {\n        throw new Error(\"abort\");\n      }\n      urls.push(url);\n    }\n    result.urls = urls;\n  } catch (error) {\n    (0, index_js_6.assert)(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup urls\"\n    });\n  }\n  // Get the CCIP calldata to forward\n  try {\n    const calldata = _parseBytes(data, 64);\n    if (calldata == null) {\n      throw new Error(\"abort\");\n    }\n    result.calldata = calldata;\n  } catch (error) {\n    (0, index_js_6.assert)(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup calldata\"\n    });\n  }\n  // Get the callbackSelector (bytes4)\n  (0, index_js_6.assert)((0, index_js_6.dataSlice)(data, 100, 128) === (0, index_js_6.dataSlice)(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n    reason: \"corrupt OffchainLookup callbaackSelector\"\n  });\n  result.selector = (0, index_js_6.dataSlice)(data, 96, 100);\n  // Get the extra data to send back to the contract as context\n  try {\n    const extraData = _parseBytes(data, 128);\n    if (extraData == null) {\n      throw new Error(\"abort\");\n    }\n    result.extraData = extraData;\n  } catch (error) {\n    (0, index_js_6.assert)(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n      reason: \"corrupt OffchainLookup extraData\"\n    });\n  }\n  result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map(k => result[k]);\n  return result;\n}","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateFieldInitSpec","_classPrivateMethodGet","_classPrivateFieldGet","_classPrivateFieldSet","_defineProperty","index_js_1","index_js_2","index_js_3","index_js_4","index_js_5","index_js_6","ens_resolver_js_1","format_js_1","network_js_1","provider_js_1","subscriber_polling_js_1","BN_2","BigInt","MAX_CCIP_REDIRECTS","isPromise","value","then","getTag","prefix","JSON","stringify","k","v","toString","toLowerCase","Array","isArray","keys","Object","sort","reduce","accum","key","UnmanagedSubscriber","constructor","name","defineProperties","start","stop","pause","dropWhilePaused","resume","exports","copy","parse","concisify","items","from","Set","values","getSubscription","_event","provider","Error","topics","type","tag","isHexString","hash","orphan","event","filter","address","map","t","addresses","promises","addAddress","addr","push","resolveAddress","forEach","length","Promise","all","a","assertArgument","getTime","Date","defaultOptions","cacheTimeout","_subs","WeakMap","_plugins","_pausedState","_destroyed","_networkPromise","_anyNetwork","_performCache","_lastBlockNumber","_nextTimer","_timers","_disableCcipRead","_options","_perform","WeakSet","_call","_checkNetwork","_getAccountValue","_getBlock","_hasSub","_getSub","AbstractProvider","_network","options","writable","assign","network","Network","resolve","setTimeout","emit","Map","plugins","attachPlugin","plugin","get","set","connect","getPlugin","disableCcipRead","ccipReadFetch","tx","calldata","urls","to","sender","data","errorMessages","i","url","href","replace","request","FetchRequest","indexOf","body","action","index","errorMessage","resp","send","result","bodyJson","message","error","assert","statusCode","reason","transaction","info","m","join","_wrapBlock","Block","formatBlock","_wrapLog","Log","formatLog","_wrapTransactionReceipt","TransactionReceipt","formatTransactionReceipt","_wrapTransactionResponse","TransactionResponse","formatTransactionResponse","_detectNetwork","operation","req","method","getBlockNumber","blockNumber","getNumber","_perform2","call","_getAddress","_getBlockTag","blockTag","toQuantity","b","_getFilter","blockHash","undefined","_address","fromBlock","toBlock","_getTransactionRequest","_request","copyRequest","getNetwork","detectNetwork","clone","networkPromise","expected","actual","chainId","getFeeData","block","gasPrice","resolveProperties","getBlock","getBigInt","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","FeeData","estimateGas","_tx","_checkNetwork2","_call2","enableCcipRead","getBalance","_getAccountValue2","getTransactionCount","getCode","hexlify","getStorage","_position","position","broadcastTransaction","signedTx","signedTransaction","Transaction","replaceableTransaction","prefetchTxs","params","_getBlock2","getTransaction","getTransactionReceipt","effectiveGasPrice","getTransactionResult","getLogs","_filter","p","_getProvider","getResolver","EnsResolver","fromName","getAvatar","resolver","resolveName","getAddress","lookupAddress","node","namehash","substring","ensAddr","getEnsAddress","ensContract","Contract","ZeroAddress","resolverContract","check","isError","waitForTransaction","_confirms","timeout","confirms","reject","timer","listener","receipt","clearTimeout","console","log","once","off","makeError","waitForBlock","_clearTimeout","timerId","delete","_setTimeout","_func","_this$nextTimer","_this$nextTimer2","func","paused","time","_forEachSubscriber","sub","subscriber","_getSubscriber","PollingBlockSubscriber","PollingEventSubscriber","PollingTransactionSubscriber","PollingOrphanSubscriber","_recoverSubscriber","oldSub","newSub","started","on","_getSub2","listeners","args","_hasSub2","count","payload","EventPayload","listenerCount","total","concat","splice","removeAllListeners","addListener","removeListener","destroyed","destroy","s","perform","attempt","isCallException","dataSlice","txSender","ccipArgs","parseOffchainLookup","invocation","revert","signature","errorArgs","ccipResult","selector","encodeBytes","extraData","promise","_blockTag","includeTransactions","emitArgs","removed","subscription","addressableMap","nameMap","_parseString","bytes","_parseBytes","toUtf8String","offset","numPad","toBeArray","padded","Uint8Array","bytesPad","Math","ceil","empty","datas","byteCount","getBytes","zeros","dataLength","urlsOffset","urlsLength","urlsData","u","split"],"sources":["../../src.ts/providers/abstract-provider.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}