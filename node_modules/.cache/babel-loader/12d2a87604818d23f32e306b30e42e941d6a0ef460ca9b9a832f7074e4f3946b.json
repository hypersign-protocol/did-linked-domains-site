{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupAuthExtension = void 0;\nconst query_1 = require(\"cosmjs-types/cosmos/auth/v1beta1/query\");\nconst utils_1 = require(\"./utils\");\nfunction setupAuthExtension(base) {\n  const rpc = (0, utils_1.createProtobufRpcClient)(base);\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    auth: {\n      account: async address => {\n        const {\n          account\n        } = await queryService.Account({\n          address: address\n        });\n        return account !== null && account !== void 0 ? account : null;\n      }\n    }\n  };\n}\nexports.setupAuthExtension = setupAuthExtension;","map":{"version":3,"names":["query_1","require","utils_1","setupAuthExtension","base","rpc","createProtobufRpcClient","queryService","QueryClientImpl","auth","account","address","Account","exports"],"sources":["../../src/queries/auth.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAIA,MAAAC,OAAA,GAAAD,OAAA;AAeA,SAAgBE,kBAAkBA,CAACC,IAAiB;EAClD,MAAMC,GAAG,GAAG,IAAAH,OAAA,CAAAI,uBAAuB,EAACF,IAAI,CAAC;EACzC;EACA;EACA,MAAMG,YAAY,GAAG,IAAIP,OAAA,CAAAQ,eAAe,CAACH,GAAG,CAAC;EAE7C,OAAO;IACLI,IAAI,EAAE;MACJC,OAAO,EAAE,MAAOC,OAAe,IAAI;QACjC,MAAM;UAAED;QAAO,CAAE,GAAG,MAAMH,YAAY,CAACK,OAAO,CAAC;UAAED,OAAO,EAAEA;QAAO,CAAE,CAAC;QACpE,OAAOD,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,IAAI;MACxB;;GAEH;AACH;AAdAG,OAAA,CAAAV,kBAAA,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}