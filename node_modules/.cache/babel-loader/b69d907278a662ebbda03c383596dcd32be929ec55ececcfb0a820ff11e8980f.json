{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnkrProvider = void 0;\n/**\n *  [[link-ankr]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Polygon (``matic``)\n *  - Arbitrum (``arbitrum``)\n *\n *  @_subsection: api/providers/thirdparty:Ankr  [providers-ankr]\n */\nconst index_js_1 = require(\"../utils/index.js\");\nconst community_js_1 = require(\"./community.js\");\nconst network_js_1 = require(\"./network.js\");\nconst provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n  switch (name) {\n    case \"mainnet\":\n      return \"rpc.ankr.com/eth\";\n    case \"goerli\":\n      return \"rpc.ankr.com/eth_goerli\";\n    case \"matic\":\n      return \"rpc.ankr.com/polygon\";\n    case \"arbitrum\":\n      return \"rpc.ankr.com/arbitrum\";\n  }\n  (0, index_js_1.assertArgument)(false, \"unsupported network\", \"network\", name);\n}\n/**\n *  The **AnkrProvider** connects to the [[link-ankr]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-ankr-signup).\n */\nclass AnkrProvider extends provider_jsonrpc_js_1.JsonRpcProvider {\n  /**\n   *  Create a new **AnkrProvider**.\n   *\n   *  By default connecting to ``mainnet`` with a highly throttled\n   *  API key.\n   */\n  constructor(_network, apiKey) {\n    if (_network == null) {\n      _network = \"mainnet\";\n    }\n    const network = network_js_1.Network.from(_network);\n    if (apiKey == null) {\n      apiKey = defaultApiKey;\n    }\n    // Ankr does not support filterId, so we force polling\n    const options = {\n      polling: true,\n      staticNetwork: network\n    };\n    const request = AnkrProvider.getRequest(network, apiKey);\n    super(request, network, options);\n    /**\n     *  The API key for the Ankr connection.\n     */\n    _defineProperty(this, \"apiKey\", void 0);\n    (0, index_js_1.defineProperties)(this, {\n      apiKey\n    });\n  }\n  _getProvider(chainId) {\n    try {\n      return new AnkrProvider(chainId, this.apiKey);\n    } catch (error) {}\n    return super._getProvider(chainId);\n  }\n  /**\n   *  Returns a prepared request for connecting to %%network%% with\n   *  %%apiKey%%.\n   */\n  static getRequest(network, apiKey) {\n    if (apiKey == null) {\n      apiKey = defaultApiKey;\n    }\n    const request = new index_js_1.FetchRequest(`https:/\\/${getHost(network.name)}/${apiKey}`);\n    request.allowGzip = true;\n    if (apiKey === defaultApiKey) {\n      request.retryFunc = async (request, response, attempt) => {\n        (0, community_js_1.showThrottleMessage)(\"AnkrProvider\");\n        return true;\n      };\n    }\n    return request;\n  }\n  getRpcError(payload, error) {\n    if (payload.method === \"eth_sendRawTransaction\") {\n      if (error && error.error && error.error.message === \"INTERNAL_ERROR: could not replace existing tx\") {\n        error.error.message = \"replacement transaction underpriced\";\n      }\n    }\n    return super.getRpcError(payload, error);\n  }\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n}\nexports.AnkrProvider = AnkrProvider;","map":{"version":3,"names":["index_js_1","require","community_js_1","network_js_1","provider_jsonrpc_js_1","defaultApiKey","getHost","name","assertArgument","AnkrProvider","JsonRpcProvider","constructor","_network","apiKey","network","Network","from","options","polling","staticNetwork","request","getRequest","_defineProperty","defineProperties","_getProvider","chainId","error","FetchRequest","allowGzip","retryFunc","response","attempt","showThrottleMessage","getRpcError","payload","method","message","isCommunityResource","exports"],"sources":["../../src.ts/providers/provider-ankr.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;AAaA,MAAAA,UAAA,GAAAC,OAAA;AAKA,MAAAC,cAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AACA,MAAAG,qBAAA,GAAAH,OAAA;AAOA,MAAMI,aAAa,GAAG,kEAAkE;AAExF,SAASC,OAAOA,CAACC,IAAY;EACzB,QAAQA,IAAI;IACR,KAAK,SAAS;MACV,OAAO,kBAAkB;IAC7B,KAAK,QAAQ;MACT,OAAO,yBAAyB;IACpC,KAAK,OAAO;MACR,OAAO,sBAAsB;IACjC,KAAK,UAAU;MACX,OAAO,uBAAuB;;EAGtC,IAAAP,UAAA,CAAAQ,cAAc,EAAC,KAAK,EAAE,qBAAqB,EAAE,SAAS,EAAED,IAAI,CAAC;AACjE;AAGA;;;;;;;;;AASA,MAAaE,YAAa,SAAQL,qBAAA,CAAAM,eAAe;EAO7C;;;;;;EAMAC,YAAYC,QAAqB,EAAEC,MAAsB;IACrD,IAAID,QAAQ,IAAI,IAAI,EAAE;MAAEA,QAAQ,GAAG,SAAS;;IAC5C,MAAME,OAAO,GAAGX,YAAA,CAAAY,OAAO,CAACC,IAAI,CAACJ,QAAQ,CAAC;IACtC,IAAIC,MAAM,IAAI,IAAI,EAAE;MAAEA,MAAM,GAAGR,aAAa;;IAE5C;IACA,MAAMY,OAAO,GAAG;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAEL;IAAO,CAAE;IAEzD,MAAMM,OAAO,GAAGX,YAAY,CAACY,UAAU,CAACP,OAAO,EAAED,MAAM,CAAC;IACxD,KAAK,CAACO,OAAO,EAAEN,OAAO,EAAEG,OAAO,CAAC;IApBpC;;;IAAAK,eAAA;IAsBI,IAAAtB,UAAA,CAAAuB,gBAAgB,EAAe,IAAI,EAAE;MAAEV;IAAM,CAAE,CAAC;EACpD;EAEAW,YAAYA,CAACC,OAAe;IACxB,IAAI;MACA,OAAO,IAAIhB,YAAY,CAACgB,OAAO,EAAE,IAAI,CAACZ,MAAM,CAAC;KAChD,CAAC,OAAOa,KAAK,EAAE;IAChB,OAAO,KAAK,CAACF,YAAY,CAACC,OAAO,CAAC;EACtC;EAEA;;;;EAIA,OAAOJ,UAAUA,CAACP,OAAgB,EAAED,MAAsB;IACtD,IAAIA,MAAM,IAAI,IAAI,EAAE;MAAEA,MAAM,GAAGR,aAAa;;IAE5C,MAAMe,OAAO,GAAG,IAAIpB,UAAA,CAAA2B,YAAY,CAAC,YAAarB,OAAO,CAACQ,OAAO,CAACP,IAAI,CAAE,IAAKM,MAAO,EAAE,CAAC;IACnFO,OAAO,CAACQ,SAAS,GAAG,IAAI;IAExB,IAAIf,MAAM,KAAKR,aAAa,EAAE;MAC1Be,OAAO,CAACS,SAAS,GAAG,OAAOT,OAAO,EAAEU,QAAQ,EAAEC,OAAO,KAAI;QACrD,IAAA7B,cAAA,CAAA8B,mBAAmB,EAAC,cAAc,CAAC;QACnC,OAAO,IAAI;MACf,CAAC;;IAGL,OAAOZ,OAAO;EAClB;EAEAa,WAAWA,CAACC,OAAuB,EAAER,KAAmB;IACpD,IAAIQ,OAAO,CAACC,MAAM,KAAK,wBAAwB,EAAE;MAC7C,IAAIT,KAAK,IAAIA,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACU,OAAO,KAAK,+CAA+C,EAAE;QACjGV,KAAK,CAACA,KAAK,CAACU,OAAO,GAAG,qCAAqC;;;IAInE,OAAO,KAAK,CAACH,WAAW,CAACC,OAAO,EAAER,KAAK,CAAC;EAC5C;EAEAW,mBAAmBA,CAAA;IACf,OAAQ,IAAI,CAACxB,MAAM,KAAKR,aAAa;EACzC;;AAlEJiC,OAAA,CAAA7B,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}