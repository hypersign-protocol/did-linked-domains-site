{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;\n/* eslint-disable no-bitwise */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst uint64MaxValue = new bn_js_1.default(\"18446744073709551615\", 10, \"be\");\nclass Uint32 {\n  constructor(input) {\n    if (Number.isNaN(input)) {\n      throw new Error(\"Input is not a number\");\n    }\n    if (!Number.isInteger(input)) {\n      throw new Error(\"Input is not an integer\");\n    }\n    if (input < 0 || input > 4294967295) {\n      throw new Error(\"Input not in uint32 range: \" + input.toString());\n    }\n    this.data = input;\n  }\n  /** @deprecated use Uint32.fromBytes */\n  static fromBigEndianBytes(bytes) {\n    return Uint32.fromBytes(bytes);\n  }\n  /**\n   * Creates a Uint32 from a fixed length byte array.\n   *\n   * @param bytes a list of exactly 4 bytes\n   * @param endianess defaults to big endian\n   */\n  static fromBytes(bytes, endianess = \"be\") {\n    if (bytes.length !== 4) {\n      throw new Error(\"Invalid input length. Expected 4 bytes.\");\n    }\n    for (let i = 0; i < bytes.length; ++i) {\n      if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n        throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n      }\n    }\n    const beBytes = endianess === \"be\" ? bytes : Array.from(bytes).reverse();\n    // Use mulitiplication instead of shifting since bitwise operators are defined\n    // on SIGNED int32 in JavaScript and we don't want to risk surprises\n    return new Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);\n  }\n  static fromString(str) {\n    if (!str.match(/^[0-9]+$/)) {\n      throw new Error(\"Invalid string format\");\n    }\n    return new Uint32(Number.parseInt(str, 10));\n  }\n  toBytesBigEndian() {\n    // Use division instead of shifting since bitwise operators are defined\n    // on SIGNED int32 in JavaScript and we don't want to risk surprises\n    return new Uint8Array([Math.floor(this.data / 2 ** 24) & 0xff, Math.floor(this.data / 2 ** 16) & 0xff, Math.floor(this.data / 2 ** 8) & 0xff, Math.floor(this.data / 2 ** 0) & 0xff]);\n  }\n  toBytesLittleEndian() {\n    // Use division instead of shifting since bitwise operators are defined\n    // on SIGNED int32 in JavaScript and we don't want to risk surprises\n    return new Uint8Array([Math.floor(this.data / 2 ** 0) & 0xff, Math.floor(this.data / 2 ** 8) & 0xff, Math.floor(this.data / 2 ** 16) & 0xff, Math.floor(this.data / 2 ** 24) & 0xff]);\n  }\n  toNumber() {\n    return this.data;\n  }\n  toString() {\n    return this.data.toString();\n  }\n}\nexports.Uint32 = Uint32;\nclass Int53 {\n  constructor(input) {\n    if (Number.isNaN(input)) {\n      throw new Error(\"Input is not a number\");\n    }\n    if (!Number.isInteger(input)) {\n      throw new Error(\"Input is not an integer\");\n    }\n    if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {\n      throw new Error(\"Input not in int53 range: \" + input.toString());\n    }\n    this.data = input;\n  }\n  static fromString(str) {\n    if (!str.match(/^-?[0-9]+$/)) {\n      throw new Error(\"Invalid string format\");\n    }\n    return new Int53(Number.parseInt(str, 10));\n  }\n  toNumber() {\n    return this.data;\n  }\n  toString() {\n    return this.data.toString();\n  }\n}\nexports.Int53 = Int53;\nclass Uint53 {\n  constructor(input) {\n    const signed = new Int53(input);\n    if (signed.toNumber() < 0) {\n      throw new Error(\"Input is negative\");\n    }\n    this.data = signed;\n  }\n  static fromString(str) {\n    const signed = Int53.fromString(str);\n    return new Uint53(signed.toNumber());\n  }\n  toNumber() {\n    return this.data.toNumber();\n  }\n  toString() {\n    return this.data.toString();\n  }\n}\nexports.Uint53 = Uint53;\nclass Uint64 {\n  constructor(data) {\n    if (data.isNeg()) {\n      throw new Error(\"Input is negative\");\n    }\n    if (data.gt(uint64MaxValue)) {\n      throw new Error(\"Input exceeds uint64 range\");\n    }\n    this.data = data;\n  }\n  /** @deprecated use Uint64.fromBytes */\n  static fromBytesBigEndian(bytes) {\n    return Uint64.fromBytes(bytes);\n  }\n  /**\n   * Creates a Uint64 from a fixed length byte array.\n   *\n   * @param bytes a list of exactly 8 bytes\n   * @param endianess defaults to big endian\n   */\n  static fromBytes(bytes, endianess = \"be\") {\n    if (bytes.length !== 8) {\n      throw new Error(\"Invalid input length. Expected 8 bytes.\");\n    }\n    for (let i = 0; i < bytes.length; ++i) {\n      if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n        throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n      }\n    }\n    const beBytes = endianess === \"be\" ? Array.from(bytes) : Array.from(bytes).reverse();\n    return new Uint64(new bn_js_1.default(beBytes));\n  }\n  static fromString(str) {\n    if (!str.match(/^[0-9]+$/)) {\n      throw new Error(\"Invalid string format\");\n    }\n    return new Uint64(new bn_js_1.default(str, 10, \"be\"));\n  }\n  static fromNumber(input) {\n    if (Number.isNaN(input)) {\n      throw new Error(\"Input is not a number\");\n    }\n    if (!Number.isInteger(input)) {\n      throw new Error(\"Input is not an integer\");\n    }\n    let bigint;\n    try {\n      bigint = new bn_js_1.default(input);\n    } catch (_a) {\n      throw new Error(\"Input is not a safe integer\");\n    }\n    return new Uint64(bigint);\n  }\n  toBytesBigEndian() {\n    return Uint8Array.from(this.data.toArray(\"be\", 8));\n  }\n  toBytesLittleEndian() {\n    return Uint8Array.from(this.data.toArray(\"le\", 8));\n  }\n  toString() {\n    return this.data.toString(10);\n  }\n  toNumber() {\n    return this.data.toNumber();\n  }\n}\nexports.Uint64 = Uint64;\n// Assign classes to unused variables in order to verify static interface conformance at compile time.\n// Workaround for https://github.com/microsoft/TypeScript/issues/33892\nconst _int53Class = Int53;\nconst _uint53Class = Uint53;\nconst _uint32Class = Uint32;\nconst _uint64Class = Uint64;","map":{"version":3,"names":["bn_js_1","__importDefault","require","uint64MaxValue","default","Uint32","constructor","input","Number","isNaN","Error","isInteger","toString","data","fromBigEndianBytes","bytes","fromBytes","endianess","length","i","beBytes","Array","from","reverse","fromString","str","match","parseInt","toBytesBigEndian","Uint8Array","Math","floor","toBytesLittleEndian","toNumber","exports","Int53","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","Uint53","signed","Uint64","isNeg","gt","fromBytesBigEndian","fromNumber","bigint","_a","toArray","_int53Class","_uint53Class","_uint32Class","_uint64Class"],"sources":["../src/integers.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}