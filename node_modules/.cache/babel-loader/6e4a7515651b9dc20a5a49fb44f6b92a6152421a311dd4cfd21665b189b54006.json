{"ast":null,"code":"\"use strict\";\n\n/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](link-solc-abi).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\nvar _classPrivateMethodInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateMethodGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodGet.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbiCoder = void 0;\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nconst index_js_1 = require(\"../utils/index.js\");\nconst abstract_coder_js_1 = require(\"./coders/abstract-coder.js\");\nconst address_js_1 = require(\"./coders/address.js\");\nconst array_js_1 = require(\"./coders/array.js\");\nconst boolean_js_1 = require(\"./coders/boolean.js\");\nconst bytes_js_1 = require(\"./coders/bytes.js\");\nconst fixed_bytes_js_1 = require(\"./coders/fixed-bytes.js\");\nconst null_js_1 = require(\"./coders/null.js\");\nconst number_js_1 = require(\"./coders/number.js\");\nconst string_js_1 = require(\"./coders/string.js\");\nconst tuple_js_1 = require(\"./coders/tuple.js\");\nconst fragments_js_1 = require(\"./fragments.js\");\nconst index_js_2 = require(\"../address/index.js\");\nconst index_js_3 = require(\"../utils/index.js\");\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nlet defaultCoder = null;\nfunction getBuiltinCallException(action, tx, data, abiCoder) {\n  let message = \"missing revert data\";\n  let reason = null;\n  const invocation = null;\n  let revert = null;\n  if (data) {\n    message = \"execution reverted\";\n    const bytes = (0, index_js_3.getBytes)(data);\n    data = (0, index_js_3.hexlify)(data);\n    if (bytes.length === 0) {\n      message += \" (no data present; likely require(false) occurred\";\n      reason = \"require(false)\";\n    } else if (bytes.length % 32 !== 4) {\n      message += \" (could not decode reason; invalid data length)\";\n    } else if ((0, index_js_3.hexlify)(bytes.slice(0, 4)) === \"0x08c379a0\") {\n      // Error(string)\n      try {\n        reason = abiCoder.decode([\"string\"], bytes.slice(4))[0];\n        revert = {\n          signature: \"Error(string)\",\n          name: \"Error\",\n          args: [reason]\n        };\n        message += `: ${JSON.stringify(reason)}`;\n      } catch (error) {\n        message += \" (could not decode reason; invalid string data)\";\n      }\n    } else if ((0, index_js_3.hexlify)(bytes.slice(0, 4)) === \"0x4e487b71\") {\n      // Panic(uint256)\n      try {\n        const code = Number(abiCoder.decode([\"uint256\"], bytes.slice(4))[0]);\n        revert = {\n          signature: \"Panic(uint256)\",\n          name: \"Panic\",\n          args: [code]\n        };\n        reason = `Panic due to ${PanicReasons.get(code) || \"UNKNOWN\"}(${code})`;\n        message += `: ${reason}`;\n      } catch (error) {\n        message += \" (could not decode panic code)\";\n      }\n    } else {\n      message += \" (unknown custom error)\";\n    }\n  }\n  const transaction = {\n    to: tx.to ? (0, index_js_2.getAddress)(tx.to) : null,\n    data: tx.data || \"0x\"\n  };\n  if (tx.from) {\n    transaction.from = (0, index_js_2.getAddress)(tx.from);\n  }\n  return (0, index_js_3.makeError)(message, \"CALL_EXCEPTION\", {\n    action,\n    data,\n    reason,\n    transaction,\n    invocation,\n    revert\n  });\n}\n/**\n *  The **AbiCoder** is a low-level class responsible for encoding JavaScript\n *  values into binary data and decoding binary data into JavaScript values.\n */\nvar _getCoder = /*#__PURE__*/new WeakSet();\nclass AbiCoder {\n  constructor() {\n    _classPrivateMethodInitSpec(this, _getCoder);\n  }\n  /**\n   *  Get the default values for the given %%types%%.\n   *\n   *  For example, a ``uint`` is by default ``0`` and ``bool``\n   *  is by default ``false``.\n   */\n  getDefaultValue(types) {\n    const coders = types.map(type => _classPrivateMethodGet(this, _getCoder, _getCoder2).call(this, fragments_js_1.ParamType.from(type)));\n    const coder = new tuple_js_1.TupleCoder(coders, \"_\");\n    return coder.defaultValue();\n  }\n  /**\n   *  Encode the %%values%% as the %%types%% into ABI data.\n   *\n   *  @returns DataHexstring\n   */\n  encode(types, values) {\n    (0, index_js_1.assertArgumentCount)(values.length, types.length, \"types/values length mismatch\");\n    const coders = types.map(type => _classPrivateMethodGet(this, _getCoder, _getCoder2).call(this, fragments_js_1.ParamType.from(type)));\n    const coder = new tuple_js_1.TupleCoder(coders, \"_\");\n    const writer = new abstract_coder_js_1.Writer();\n    coder.encode(writer, values);\n    return writer.data;\n  }\n  /**\n   *  Decode the ABI %%data%% as the %%types%% into values.\n   *\n   *  If %%loose%% decoding is enabled, then strict padding is\n   *  not enforced. Some older versions of Solidity incorrectly\n   *  padded event data emitted from ``external`` functions.\n   */\n  decode(types, data, loose) {\n    const coders = types.map(type => _classPrivateMethodGet(this, _getCoder, _getCoder2).call(this, fragments_js_1.ParamType.from(type)));\n    const coder = new tuple_js_1.TupleCoder(coders, \"_\");\n    return coder.decode(new abstract_coder_js_1.Reader(data, loose));\n  }\n  /**\n   *  Returns the shared singleton instance of a default [[AbiCoder]].\n   *\n   *  On the first call, the instance is created internally.\n   */\n  static defaultAbiCoder() {\n    if (defaultCoder == null) {\n      defaultCoder = new AbiCoder();\n    }\n    return defaultCoder;\n  }\n  /**\n   *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n   *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n   *  the Transaction %%tx%%.\n   */\n  static getBuiltinCallException(action, tx, data) {\n    return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n  }\n}\nfunction _getCoder2(param) {\n  if (param.isArray()) {\n    return new array_js_1.ArrayCoder(_classPrivateMethodGet(this, _getCoder, _getCoder2).call(this, param.arrayChildren), param.arrayLength, param.name);\n  }\n  if (param.isTuple()) {\n    return new tuple_js_1.TupleCoder(param.components.map(c => _classPrivateMethodGet(this, _getCoder, _getCoder2).call(this, c)), param.name);\n  }\n  switch (param.baseType) {\n    case \"address\":\n      return new address_js_1.AddressCoder(param.name);\n    case \"bool\":\n      return new boolean_js_1.BooleanCoder(param.name);\n    case \"string\":\n      return new string_js_1.StringCoder(param.name);\n    case \"bytes\":\n      return new bytes_js_1.BytesCoder(param.name);\n    case \"\":\n      return new null_js_1.NullCoder(param.name);\n  }\n  // u?int[0-9]*\n  let match = param.type.match(paramTypeNumber);\n  if (match) {\n    let size = parseInt(match[2] || \"256\");\n    (0, index_js_1.assertArgument)(size !== 0 && size <= 256 && size % 8 === 0, \"invalid \" + match[1] + \" bit length\", \"param\", param);\n    return new number_js_1.NumberCoder(size / 8, match[1] === \"int\", param.name);\n  }\n  // bytes[0-9]+\n  match = param.type.match(paramTypeBytes);\n  if (match) {\n    let size = parseInt(match[1]);\n    (0, index_js_1.assertArgument)(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n    return new fixed_bytes_js_1.FixedBytesCoder(size, param.name);\n  }\n  (0, index_js_1.assertArgument)(false, \"invalid type\", \"type\", param.type);\n}\nexports.AbiCoder = AbiCoder;","map":{"version":3,"names":["_classPrivateMethodInitSpec","require","default","_classPrivateMethodGet","index_js_1","abstract_coder_js_1","address_js_1","array_js_1","boolean_js_1","bytes_js_1","fixed_bytes_js_1","null_js_1","number_js_1","string_js_1","tuple_js_1","fragments_js_1","index_js_2","index_js_3","PanicReasons","Map","set","paramTypeBytes","RegExp","paramTypeNumber","defaultCoder","getBuiltinCallException","action","tx","data","abiCoder","message","reason","invocation","revert","bytes","getBytes","hexlify","length","slice","decode","signature","name","args","JSON","stringify","error","code","Number","get","transaction","to","getAddress","from","makeError","_getCoder","WeakSet","AbiCoder","constructor","getDefaultValue","types","coders","map","type","_getCoder2","call","ParamType","coder","TupleCoder","defaultValue","encode","values","assertArgumentCount","writer","Writer","loose","Reader","defaultAbiCoder","param","isArray","ArrayCoder","arrayChildren","arrayLength","isTuple","components","c","baseType","AddressCoder","BooleanCoder","StringCoder","BytesCoder","NullCoder","match","size","parseInt","assertArgument","NumberCoder","FixedBytesCoder","exports"],"sources":["../../src.ts/abi/abi-coder.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}