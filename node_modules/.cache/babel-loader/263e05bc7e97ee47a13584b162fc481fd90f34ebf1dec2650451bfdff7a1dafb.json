{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DidDocumentState = exports.SignInfo = exports.Service = exports.VerificationMethod = exports.Metadata = exports.Did = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst clientSpec_1 = require(\"./clientSpec\");\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseDid = {\n  context: \"\",\n  id: \"\",\n  controller: \"\",\n  alsoKnownAs: \"\",\n  authentication: \"\",\n  assertionMethod: \"\",\n  keyAgreement: \"\",\n  capabilityInvocation: \"\",\n  capabilityDelegation: \"\"\n};\nexports.Did = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    for (const v of message.context) {\n      writer.uint32(10).string(v);\n    }\n    if (message.id !== \"\") {\n      writer.uint32(18).string(message.id);\n    }\n    for (const v of message.controller) {\n      writer.uint32(26).string(v);\n    }\n    for (const v of message.alsoKnownAs) {\n      writer.uint32(34).string(v);\n    }\n    for (const v of message.verificationMethod) {\n      exports.VerificationMethod.encode(v, writer.uint32(42).fork()).ldelim();\n    }\n    for (const v of message.authentication) {\n      writer.uint32(50).string(v);\n    }\n    for (const v of message.assertionMethod) {\n      writer.uint32(58).string(v);\n    }\n    for (const v of message.keyAgreement) {\n      writer.uint32(66).string(v);\n    }\n    for (const v of message.capabilityInvocation) {\n      writer.uint32(74).string(v);\n    }\n    for (const v of message.capabilityDelegation) {\n      writer.uint32(82).string(v);\n    }\n    for (const v of message.service) {\n      exports.Service.encode(v, writer.uint32(90).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDid);\n    message.context = [];\n    message.controller = [];\n    message.alsoKnownAs = [];\n    message.verificationMethod = [];\n    message.authentication = [];\n    message.assertionMethod = [];\n    message.keyAgreement = [];\n    message.capabilityInvocation = [];\n    message.capabilityDelegation = [];\n    message.service = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.context.push(reader.string());\n          break;\n        case 2:\n          message.id = reader.string();\n          break;\n        case 3:\n          message.controller.push(reader.string());\n          break;\n        case 4:\n          message.alsoKnownAs.push(reader.string());\n          break;\n        case 5:\n          message.verificationMethod.push(exports.VerificationMethod.decode(reader, reader.uint32()));\n          break;\n        case 6:\n          message.authentication.push(reader.string());\n          break;\n        case 7:\n          message.assertionMethod.push(reader.string());\n          break;\n        case 8:\n          message.keyAgreement.push(reader.string());\n          break;\n        case 9:\n          message.capabilityInvocation.push(reader.string());\n          break;\n        case 10:\n          message.capabilityDelegation.push(reader.string());\n          break;\n        case 11:\n          message.service.push(exports.Service.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDid);\n    message.context = [];\n    message.controller = [];\n    message.alsoKnownAs = [];\n    message.verificationMethod = [];\n    message.authentication = [];\n    message.assertionMethod = [];\n    message.keyAgreement = [];\n    message.capabilityInvocation = [];\n    message.capabilityDelegation = [];\n    message.service = [];\n    if (object.context !== undefined && object.context !== null) {\n      for (const e of object.context) {\n        message.context.push(String(e));\n      }\n    }\n    if (object.id !== undefined && object.id !== null) {\n      message.id = String(object.id);\n    } else {\n      message.id = \"\";\n    }\n    if (object.controller !== undefined && object.controller !== null) {\n      for (const e of object.controller) {\n        message.controller.push(String(e));\n      }\n    }\n    if (object.alsoKnownAs !== undefined && object.alsoKnownAs !== null) {\n      for (const e of object.alsoKnownAs) {\n        message.alsoKnownAs.push(String(e));\n      }\n    }\n    if (object.verificationMethod !== undefined && object.verificationMethod !== null) {\n      for (const e of object.verificationMethod) {\n        message.verificationMethod.push(exports.VerificationMethod.fromJSON(e));\n      }\n    }\n    if (object.authentication !== undefined && object.authentication !== null) {\n      for (const e of object.authentication) {\n        message.authentication.push(String(e));\n      }\n    }\n    if (object.assertionMethod !== undefined && object.assertionMethod !== null) {\n      for (const e of object.assertionMethod) {\n        message.assertionMethod.push(String(e));\n      }\n    }\n    if (object.keyAgreement !== undefined && object.keyAgreement !== null) {\n      for (const e of object.keyAgreement) {\n        message.keyAgreement.push(String(e));\n      }\n    }\n    if (object.capabilityInvocation !== undefined && object.capabilityInvocation !== null) {\n      for (const e of object.capabilityInvocation) {\n        message.capabilityInvocation.push(String(e));\n      }\n    }\n    if (object.capabilityDelegation !== undefined && object.capabilityDelegation !== null) {\n      for (const e of object.capabilityDelegation) {\n        message.capabilityDelegation.push(String(e));\n      }\n    }\n    if (object.service !== undefined && object.service !== null) {\n      for (const e of object.service) {\n        message.service.push(exports.Service.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.context) {\n      obj.context = message.context.map(e => e);\n    } else {\n      obj.context = [];\n    }\n    message.id !== undefined && (obj.id = message.id);\n    if (message.controller) {\n      obj.controller = message.controller.map(e => e);\n    } else {\n      obj.controller = [];\n    }\n    if (message.alsoKnownAs) {\n      obj.alsoKnownAs = message.alsoKnownAs.map(e => e);\n    } else {\n      obj.alsoKnownAs = [];\n    }\n    if (message.verificationMethod) {\n      obj.verificationMethod = message.verificationMethod.map(e => e ? exports.VerificationMethod.toJSON(e) : undefined);\n    } else {\n      obj.verificationMethod = [];\n    }\n    if (message.authentication) {\n      obj.authentication = message.authentication.map(e => e);\n    } else {\n      obj.authentication = [];\n    }\n    if (message.assertionMethod) {\n      obj.assertionMethod = message.assertionMethod.map(e => e);\n    } else {\n      obj.assertionMethod = [];\n    }\n    if (message.keyAgreement) {\n      obj.keyAgreement = message.keyAgreement.map(e => e);\n    } else {\n      obj.keyAgreement = [];\n    }\n    if (message.capabilityInvocation) {\n      obj.capabilityInvocation = message.capabilityInvocation.map(e => e);\n    } else {\n      obj.capabilityInvocation = [];\n    }\n    if (message.capabilityDelegation) {\n      obj.capabilityDelegation = message.capabilityDelegation.map(e => e);\n    } else {\n      obj.capabilityDelegation = [];\n    }\n    if (message.service) {\n      obj.service = message.service.map(e => e ? exports.Service.toJSON(e) : undefined);\n    } else {\n      obj.service = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseDid);\n    message.context = [];\n    message.controller = [];\n    message.alsoKnownAs = [];\n    message.verificationMethod = [];\n    message.authentication = [];\n    message.assertionMethod = [];\n    message.keyAgreement = [];\n    message.capabilityInvocation = [];\n    message.capabilityDelegation = [];\n    message.service = [];\n    if (object.context !== undefined && object.context !== null) {\n      for (const e of object.context) {\n        message.context.push(e);\n      }\n    }\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n    if (object.controller !== undefined && object.controller !== null) {\n      for (const e of object.controller) {\n        message.controller.push(e);\n      }\n    }\n    if (object.alsoKnownAs !== undefined && object.alsoKnownAs !== null) {\n      for (const e of object.alsoKnownAs) {\n        message.alsoKnownAs.push(e);\n      }\n    }\n    if (object.verificationMethod !== undefined && object.verificationMethod !== null) {\n      for (const e of object.verificationMethod) {\n        message.verificationMethod.push(exports.VerificationMethod.fromPartial(e));\n      }\n    }\n    if (object.authentication !== undefined && object.authentication !== null) {\n      for (const e of object.authentication) {\n        message.authentication.push(e);\n      }\n    }\n    if (object.assertionMethod !== undefined && object.assertionMethod !== null) {\n      for (const e of object.assertionMethod) {\n        message.assertionMethod.push(e);\n      }\n    }\n    if (object.keyAgreement !== undefined && object.keyAgreement !== null) {\n      for (const e of object.keyAgreement) {\n        message.keyAgreement.push(e);\n      }\n    }\n    if (object.capabilityInvocation !== undefined && object.capabilityInvocation !== null) {\n      for (const e of object.capabilityInvocation) {\n        message.capabilityInvocation.push(e);\n      }\n    }\n    if (object.capabilityDelegation !== undefined && object.capabilityDelegation !== null) {\n      for (const e of object.capabilityDelegation) {\n        message.capabilityDelegation.push(e);\n      }\n    }\n    if (object.service !== undefined && object.service !== null) {\n      for (const e of object.service) {\n        message.service.push(exports.Service.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nconst baseMetadata = {\n  created: \"\",\n  updated: \"\",\n  deactivated: false,\n  versionId: \"\"\n};\nexports.Metadata = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.created !== \"\") {\n      writer.uint32(10).string(message.created);\n    }\n    if (message.updated !== \"\") {\n      writer.uint32(18).string(message.updated);\n    }\n    if (message.deactivated === true) {\n      writer.uint32(24).bool(message.deactivated);\n    }\n    if (message.versionId !== \"\") {\n      writer.uint32(34).string(message.versionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMetadata);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.created = reader.string();\n          break;\n        case 2:\n          message.updated = reader.string();\n          break;\n        case 3:\n          message.deactivated = reader.bool();\n          break;\n        case 4:\n          message.versionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMetadata);\n    if (object.created !== undefined && object.created !== null) {\n      message.created = String(object.created);\n    } else {\n      message.created = \"\";\n    }\n    if (object.updated !== undefined && object.updated !== null) {\n      message.updated = String(object.updated);\n    } else {\n      message.updated = \"\";\n    }\n    if (object.deactivated !== undefined && object.deactivated !== null) {\n      message.deactivated = Boolean(object.deactivated);\n    } else {\n      message.deactivated = false;\n    }\n    if (object.versionId !== undefined && object.versionId !== null) {\n      message.versionId = String(object.versionId);\n    } else {\n      message.versionId = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.created !== undefined && (obj.created = message.created);\n    message.updated !== undefined && (obj.updated = message.updated);\n    message.deactivated !== undefined && (obj.deactivated = message.deactivated);\n    message.versionId !== undefined && (obj.versionId = message.versionId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMetadata);\n    if (object.created !== undefined && object.created !== null) {\n      message.created = object.created;\n    } else {\n      message.created = \"\";\n    }\n    if (object.updated !== undefined && object.updated !== null) {\n      message.updated = object.updated;\n    } else {\n      message.updated = \"\";\n    }\n    if (object.deactivated !== undefined && object.deactivated !== null) {\n      message.deactivated = object.deactivated;\n    } else {\n      message.deactivated = false;\n    }\n    if (object.versionId !== undefined && object.versionId !== null) {\n      message.versionId = object.versionId;\n    } else {\n      message.versionId = \"\";\n    }\n    return message;\n  }\n};\nconst baseVerificationMethod = {\n  id: \"\",\n  type: \"\",\n  controller: \"\",\n  publicKeyMultibase: \"\",\n  blockchainAccountId: \"\"\n};\nexports.VerificationMethod = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.type !== \"\") {\n      writer.uint32(18).string(message.type);\n    }\n    if (message.controller !== \"\") {\n      writer.uint32(26).string(message.controller);\n    }\n    if (message.publicKeyMultibase !== \"\") {\n      writer.uint32(34).string(message.publicKeyMultibase);\n    }\n    if (message.blockchainAccountId !== \"\") {\n      writer.uint32(42).string(message.blockchainAccountId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseVerificationMethod);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.type = reader.string();\n          break;\n        case 3:\n          message.controller = reader.string();\n          break;\n        case 4:\n          message.publicKeyMultibase = reader.string();\n          break;\n        case 5:\n          message.blockchainAccountId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseVerificationMethod);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = String(object.id);\n    } else {\n      message.id = \"\";\n    }\n    if (object.type !== undefined && object.type !== null) {\n      message.type = String(object.type);\n    } else {\n      message.type = \"\";\n    }\n    if (object.controller !== undefined && object.controller !== null) {\n      message.controller = String(object.controller);\n    } else {\n      message.controller = \"\";\n    }\n    if (object.publicKeyMultibase !== undefined && object.publicKeyMultibase !== null) {\n      message.publicKeyMultibase = String(object.publicKeyMultibase);\n    } else {\n      message.publicKeyMultibase = \"\";\n    }\n    if (object.blockchainAccountId !== undefined && object.blockchainAccountId !== null) {\n      message.blockchainAccountId = String(object.blockchainAccountId);\n    } else {\n      message.blockchainAccountId = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    message.type !== undefined && (obj.type = message.type);\n    message.controller !== undefined && (obj.controller = message.controller);\n    message.publicKeyMultibase !== undefined && (obj.publicKeyMultibase = message.publicKeyMultibase);\n    message.blockchainAccountId !== undefined && (obj.blockchainAccountId = message.blockchainAccountId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseVerificationMethod);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = \"\";\n    }\n    if (object.controller !== undefined && object.controller !== null) {\n      message.controller = object.controller;\n    } else {\n      message.controller = \"\";\n    }\n    if (object.publicKeyMultibase !== undefined && object.publicKeyMultibase !== null) {\n      message.publicKeyMultibase = object.publicKeyMultibase;\n    } else {\n      message.publicKeyMultibase = \"\";\n    }\n    if (object.blockchainAccountId !== undefined && object.blockchainAccountId !== null) {\n      message.blockchainAccountId = object.blockchainAccountId;\n    } else {\n      message.blockchainAccountId = \"\";\n    }\n    return message;\n  }\n};\nconst baseService = {\n  id: \"\",\n  type: \"\",\n  serviceEndpoint: \"\"\n};\nexports.Service = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.type !== \"\") {\n      writer.uint32(18).string(message.type);\n    }\n    if (message.serviceEndpoint !== \"\") {\n      writer.uint32(26).string(message.serviceEndpoint);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseService);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.type = reader.string();\n          break;\n        case 3:\n          message.serviceEndpoint = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseService);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = String(object.id);\n    } else {\n      message.id = \"\";\n    }\n    if (object.type !== undefined && object.type !== null) {\n      message.type = String(object.type);\n    } else {\n      message.type = \"\";\n    }\n    if (object.serviceEndpoint !== undefined && object.serviceEndpoint !== null) {\n      message.serviceEndpoint = String(object.serviceEndpoint);\n    } else {\n      message.serviceEndpoint = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    message.type !== undefined && (obj.type = message.type);\n    message.serviceEndpoint !== undefined && (obj.serviceEndpoint = message.serviceEndpoint);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseService);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = \"\";\n    }\n    if (object.serviceEndpoint !== undefined && object.serviceEndpoint !== null) {\n      message.serviceEndpoint = object.serviceEndpoint;\n    } else {\n      message.serviceEndpoint = \"\";\n    }\n    return message;\n  }\n};\nconst baseSignInfo = {\n  verification_method_id: \"\",\n  signature: \"\"\n};\nexports.SignInfo = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.verification_method_id !== \"\") {\n      writer.uint32(10).string(message.verification_method_id);\n    }\n    if (message.signature !== \"\") {\n      writer.uint32(18).string(message.signature);\n    }\n    if (message.clientSpec !== undefined) {\n      clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseSignInfo);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.verification_method_id = reader.string();\n          break;\n        case 2:\n          message.signature = reader.string();\n          break;\n        case 3:\n          message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseSignInfo);\n    if (object.verification_method_id !== undefined && object.verification_method_id !== null) {\n      message.verification_method_id = String(object.verification_method_id);\n    } else {\n      message.verification_method_id = \"\";\n    }\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = String(object.signature);\n    } else {\n      message.signature = \"\";\n    }\n    if (object.clientSpec !== undefined && object.clientSpec !== null) {\n      message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n    } else {\n      message.clientSpec = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.verification_method_id !== undefined && (obj.verification_method_id = message.verification_method_id);\n    message.signature !== undefined && (obj.signature = message.signature);\n    message.clientSpec !== undefined && (obj.clientSpec = message.clientSpec ? clientSpec_1.ClientSpec.toJSON(message.clientSpec) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseSignInfo);\n    if (object.verification_method_id !== undefined && object.verification_method_id !== null) {\n      message.verification_method_id = object.verification_method_id;\n    } else {\n      message.verification_method_id = \"\";\n    }\n    if (object.signature !== undefined && object.signature !== null) {\n      message.signature = object.signature;\n    } else {\n      message.signature = \"\";\n    }\n    if (object.clientSpec !== undefined && object.clientSpec !== null) {\n      message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n    } else {\n      message.clientSpec = undefined;\n    }\n    return message;\n  }\n};\nconst baseDidDocumentState = {};\nexports.DidDocumentState = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.didDocument !== undefined) {\n      exports.Did.encode(message.didDocument, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.didDocumentMetadata !== undefined) {\n      exports.Metadata.encode(message.didDocumentMetadata, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDidDocumentState);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.didDocument = exports.Did.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.didDocumentMetadata = exports.Metadata.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseDidDocumentState);\n    if (object.didDocument !== undefined && object.didDocument !== null) {\n      message.didDocument = exports.Did.fromJSON(object.didDocument);\n    } else {\n      message.didDocument = undefined;\n    }\n    if (object.didDocumentMetadata !== undefined && object.didDocumentMetadata !== null) {\n      message.didDocumentMetadata = exports.Metadata.fromJSON(object.didDocumentMetadata);\n    } else {\n      message.didDocumentMetadata = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.didDocument !== undefined && (obj.didDocument = message.didDocument ? exports.Did.toJSON(message.didDocument) : undefined);\n    message.didDocumentMetadata !== undefined && (obj.didDocumentMetadata = message.didDocumentMetadata ? exports.Metadata.toJSON(message.didDocumentMetadata) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseDidDocumentState);\n    if (object.didDocument !== undefined && object.didDocument !== null) {\n      message.didDocument = exports.Did.fromPartial(object.didDocument);\n    } else {\n      message.didDocument = undefined;\n    }\n    if (object.didDocumentMetadata !== undefined && object.didDocumentMetadata !== null) {\n      message.didDocumentMetadata = exports.Metadata.fromPartial(object.didDocumentMetadata);\n    } else {\n      message.didDocumentMetadata = undefined;\n    }\n    return message;\n  }\n};","map":{"version":3,"names":["require","Object","defineProperty","exports","value","DidDocumentState","SignInfo","Service","VerificationMethod","Metadata","Did","protobufPackage","clientSpec_1","minimal_1","baseDid","context","id","controller","alsoKnownAs","authentication","assertionMethod","keyAgreement","capabilityInvocation","capabilityDelegation","encode","message","writer","Writer","create","v","uint32","string","verificationMethod","fork","ldelim","service","decode","input","length","reader","Uint8Array","Reader","end","undefined","len","pos","assign","tag","push","skipType","fromJSON","object","e","String","toJSON","obj","map","fromPartial","baseMetadata","created","updated","deactivated","versionId","bool","Boolean","baseVerificationMethod","type","publicKeyMultibase","blockchainAccountId","baseService","serviceEndpoint","baseSignInfo","verification_method_id","signature","clientSpec","ClientSpec","baseDidDocumentState","didDocument","didDocumentMetadata"],"sources":["/home/pratap/hid-ssi-js-sdk/build/libs/generated/ssi/did.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidDocumentState = exports.SignInfo = exports.Service = exports.VerificationMethod = exports.Metadata = exports.Did = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst clientSpec_1 = require(\"./clientSpec\");\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseDid = {\n    context: \"\",\n    id: \"\",\n    controller: \"\",\n    alsoKnownAs: \"\",\n    authentication: \"\",\n    assertionMethod: \"\",\n    keyAgreement: \"\",\n    capabilityInvocation: \"\",\n    capabilityDelegation: \"\",\n};\nexports.Did = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        for (const v of message.context) {\n            writer.uint32(10).string(v);\n        }\n        if (message.id !== \"\") {\n            writer.uint32(18).string(message.id);\n        }\n        for (const v of message.controller) {\n            writer.uint32(26).string(v);\n        }\n        for (const v of message.alsoKnownAs) {\n            writer.uint32(34).string(v);\n        }\n        for (const v of message.verificationMethod) {\n            exports.VerificationMethod.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.authentication) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.assertionMethod) {\n            writer.uint32(58).string(v);\n        }\n        for (const v of message.keyAgreement) {\n            writer.uint32(66).string(v);\n        }\n        for (const v of message.capabilityInvocation) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.capabilityDelegation) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.service) {\n            exports.Service.encode(v, writer.uint32(90).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDid);\n        message.context = [];\n        message.controller = [];\n        message.alsoKnownAs = [];\n        message.verificationMethod = [];\n        message.authentication = [];\n        message.assertionMethod = [];\n        message.keyAgreement = [];\n        message.capabilityInvocation = [];\n        message.capabilityDelegation = [];\n        message.service = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.context.push(reader.string());\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.controller.push(reader.string());\n                    break;\n                case 4:\n                    message.alsoKnownAs.push(reader.string());\n                    break;\n                case 5:\n                    message.verificationMethod.push(exports.VerificationMethod.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.authentication.push(reader.string());\n                    break;\n                case 7:\n                    message.assertionMethod.push(reader.string());\n                    break;\n                case 8:\n                    message.keyAgreement.push(reader.string());\n                    break;\n                case 9:\n                    message.capabilityInvocation.push(reader.string());\n                    break;\n                case 10:\n                    message.capabilityDelegation.push(reader.string());\n                    break;\n                case 11:\n                    message.service.push(exports.Service.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDid);\n        message.context = [];\n        message.controller = [];\n        message.alsoKnownAs = [];\n        message.verificationMethod = [];\n        message.authentication = [];\n        message.assertionMethod = [];\n        message.keyAgreement = [];\n        message.capabilityInvocation = [];\n        message.capabilityDelegation = [];\n        message.service = [];\n        if (object.context !== undefined && object.context !== null) {\n            for (const e of object.context) {\n                message.context.push(String(e));\n            }\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            for (const e of object.controller) {\n                message.controller.push(String(e));\n            }\n        }\n        if (object.alsoKnownAs !== undefined && object.alsoKnownAs !== null) {\n            for (const e of object.alsoKnownAs) {\n                message.alsoKnownAs.push(String(e));\n            }\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            for (const e of object.verificationMethod) {\n                message.verificationMethod.push(exports.VerificationMethod.fromJSON(e));\n            }\n        }\n        if (object.authentication !== undefined && object.authentication !== null) {\n            for (const e of object.authentication) {\n                message.authentication.push(String(e));\n            }\n        }\n        if (object.assertionMethod !== undefined &&\n            object.assertionMethod !== null) {\n            for (const e of object.assertionMethod) {\n                message.assertionMethod.push(String(e));\n            }\n        }\n        if (object.keyAgreement !== undefined && object.keyAgreement !== null) {\n            for (const e of object.keyAgreement) {\n                message.keyAgreement.push(String(e));\n            }\n        }\n        if (object.capabilityInvocation !== undefined &&\n            object.capabilityInvocation !== null) {\n            for (const e of object.capabilityInvocation) {\n                message.capabilityInvocation.push(String(e));\n            }\n        }\n        if (object.capabilityDelegation !== undefined &&\n            object.capabilityDelegation !== null) {\n            for (const e of object.capabilityDelegation) {\n                message.capabilityDelegation.push(String(e));\n            }\n        }\n        if (object.service !== undefined && object.service !== null) {\n            for (const e of object.service) {\n                message.service.push(exports.Service.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.context) {\n            obj.context = message.context.map((e) => e);\n        }\n        else {\n            obj.context = [];\n        }\n        message.id !== undefined && (obj.id = message.id);\n        if (message.controller) {\n            obj.controller = message.controller.map((e) => e);\n        }\n        else {\n            obj.controller = [];\n        }\n        if (message.alsoKnownAs) {\n            obj.alsoKnownAs = message.alsoKnownAs.map((e) => e);\n        }\n        else {\n            obj.alsoKnownAs = [];\n        }\n        if (message.verificationMethod) {\n            obj.verificationMethod = message.verificationMethod.map((e) => e ? exports.VerificationMethod.toJSON(e) : undefined);\n        }\n        else {\n            obj.verificationMethod = [];\n        }\n        if (message.authentication) {\n            obj.authentication = message.authentication.map((e) => e);\n        }\n        else {\n            obj.authentication = [];\n        }\n        if (message.assertionMethod) {\n            obj.assertionMethod = message.assertionMethod.map((e) => e);\n        }\n        else {\n            obj.assertionMethod = [];\n        }\n        if (message.keyAgreement) {\n            obj.keyAgreement = message.keyAgreement.map((e) => e);\n        }\n        else {\n            obj.keyAgreement = [];\n        }\n        if (message.capabilityInvocation) {\n            obj.capabilityInvocation = message.capabilityInvocation.map((e) => e);\n        }\n        else {\n            obj.capabilityInvocation = [];\n        }\n        if (message.capabilityDelegation) {\n            obj.capabilityDelegation = message.capabilityDelegation.map((e) => e);\n        }\n        else {\n            obj.capabilityDelegation = [];\n        }\n        if (message.service) {\n            obj.service = message.service.map((e) => e ? exports.Service.toJSON(e) : undefined);\n        }\n        else {\n            obj.service = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDid);\n        message.context = [];\n        message.controller = [];\n        message.alsoKnownAs = [];\n        message.verificationMethod = [];\n        message.authentication = [];\n        message.assertionMethod = [];\n        message.keyAgreement = [];\n        message.capabilityInvocation = [];\n        message.capabilityDelegation = [];\n        message.service = [];\n        if (object.context !== undefined && object.context !== null) {\n            for (const e of object.context) {\n                message.context.push(e);\n            }\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            for (const e of object.controller) {\n                message.controller.push(e);\n            }\n        }\n        if (object.alsoKnownAs !== undefined && object.alsoKnownAs !== null) {\n            for (const e of object.alsoKnownAs) {\n                message.alsoKnownAs.push(e);\n            }\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            for (const e of object.verificationMethod) {\n                message.verificationMethod.push(exports.VerificationMethod.fromPartial(e));\n            }\n        }\n        if (object.authentication !== undefined && object.authentication !== null) {\n            for (const e of object.authentication) {\n                message.authentication.push(e);\n            }\n        }\n        if (object.assertionMethod !== undefined &&\n            object.assertionMethod !== null) {\n            for (const e of object.assertionMethod) {\n                message.assertionMethod.push(e);\n            }\n        }\n        if (object.keyAgreement !== undefined && object.keyAgreement !== null) {\n            for (const e of object.keyAgreement) {\n                message.keyAgreement.push(e);\n            }\n        }\n        if (object.capabilityInvocation !== undefined &&\n            object.capabilityInvocation !== null) {\n            for (const e of object.capabilityInvocation) {\n                message.capabilityInvocation.push(e);\n            }\n        }\n        if (object.capabilityDelegation !== undefined &&\n            object.capabilityDelegation !== null) {\n            for (const e of object.capabilityDelegation) {\n                message.capabilityDelegation.push(e);\n            }\n        }\n        if (object.service !== undefined && object.service !== null) {\n            for (const e of object.service) {\n                message.service.push(exports.Service.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = {\n    created: \"\",\n    updated: \"\",\n    deactivated: false,\n    versionId: \"\",\n};\nexports.Metadata = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.created !== \"\") {\n            writer.uint32(10).string(message.created);\n        }\n        if (message.updated !== \"\") {\n            writer.uint32(18).string(message.updated);\n        }\n        if (message.deactivated === true) {\n            writer.uint32(24).bool(message.deactivated);\n        }\n        if (message.versionId !== \"\") {\n            writer.uint32(34).string(message.versionId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMetadata);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.created = reader.string();\n                    break;\n                case 2:\n                    message.updated = reader.string();\n                    break;\n                case 3:\n                    message.deactivated = reader.bool();\n                    break;\n                case 4:\n                    message.versionId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMetadata);\n        if (object.created !== undefined && object.created !== null) {\n            message.created = String(object.created);\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = String(object.updated);\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.deactivated !== undefined && object.deactivated !== null) {\n            message.deactivated = Boolean(object.deactivated);\n        }\n        else {\n            message.deactivated = false;\n        }\n        if (object.versionId !== undefined && object.versionId !== null) {\n            message.versionId = String(object.versionId);\n        }\n        else {\n            message.versionId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.created !== undefined && (obj.created = message.created);\n        message.updated !== undefined && (obj.updated = message.updated);\n        message.deactivated !== undefined &&\n            (obj.deactivated = message.deactivated);\n        message.versionId !== undefined && (obj.versionId = message.versionId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMetadata);\n        if (object.created !== undefined && object.created !== null) {\n            message.created = object.created;\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = object.updated;\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.deactivated !== undefined && object.deactivated !== null) {\n            message.deactivated = object.deactivated;\n        }\n        else {\n            message.deactivated = false;\n        }\n        if (object.versionId !== undefined && object.versionId !== null) {\n            message.versionId = object.versionId;\n        }\n        else {\n            message.versionId = \"\";\n        }\n        return message;\n    },\n};\nconst baseVerificationMethod = {\n    id: \"\",\n    type: \"\",\n    controller: \"\",\n    publicKeyMultibase: \"\",\n    blockchainAccountId: \"\",\n};\nexports.VerificationMethod = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.type !== \"\") {\n            writer.uint32(18).string(message.type);\n        }\n        if (message.controller !== \"\") {\n            writer.uint32(26).string(message.controller);\n        }\n        if (message.publicKeyMultibase !== \"\") {\n            writer.uint32(34).string(message.publicKeyMultibase);\n        }\n        if (message.blockchainAccountId !== \"\") {\n            writer.uint32(42).string(message.blockchainAccountId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseVerificationMethod);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.type = reader.string();\n                    break;\n                case 3:\n                    message.controller = reader.string();\n                    break;\n                case 4:\n                    message.publicKeyMultibase = reader.string();\n                    break;\n                case 5:\n                    message.blockchainAccountId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseVerificationMethod);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            message.controller = String(object.controller);\n        }\n        else {\n            message.controller = \"\";\n        }\n        if (object.publicKeyMultibase !== undefined &&\n            object.publicKeyMultibase !== null) {\n            message.publicKeyMultibase = String(object.publicKeyMultibase);\n        }\n        else {\n            message.publicKeyMultibase = \"\";\n        }\n        if (object.blockchainAccountId !== undefined &&\n            object.blockchainAccountId !== null) {\n            message.blockchainAccountId = String(object.blockchainAccountId);\n        }\n        else {\n            message.blockchainAccountId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.type !== undefined && (obj.type = message.type);\n        message.controller !== undefined && (obj.controller = message.controller);\n        message.publicKeyMultibase !== undefined &&\n            (obj.publicKeyMultibase = message.publicKeyMultibase);\n        message.blockchainAccountId !== undefined &&\n            (obj.blockchainAccountId = message.blockchainAccountId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseVerificationMethod);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            message.controller = object.controller;\n        }\n        else {\n            message.controller = \"\";\n        }\n        if (object.publicKeyMultibase !== undefined &&\n            object.publicKeyMultibase !== null) {\n            message.publicKeyMultibase = object.publicKeyMultibase;\n        }\n        else {\n            message.publicKeyMultibase = \"\";\n        }\n        if (object.blockchainAccountId !== undefined &&\n            object.blockchainAccountId !== null) {\n            message.blockchainAccountId = object.blockchainAccountId;\n        }\n        else {\n            message.blockchainAccountId = \"\";\n        }\n        return message;\n    },\n};\nconst baseService = { id: \"\", type: \"\", serviceEndpoint: \"\" };\nexports.Service = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.type !== \"\") {\n            writer.uint32(18).string(message.type);\n        }\n        if (message.serviceEndpoint !== \"\") {\n            writer.uint32(26).string(message.serviceEndpoint);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseService);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.type = reader.string();\n                    break;\n                case 3:\n                    message.serviceEndpoint = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseService);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.serviceEndpoint !== undefined &&\n            object.serviceEndpoint !== null) {\n            message.serviceEndpoint = String(object.serviceEndpoint);\n        }\n        else {\n            message.serviceEndpoint = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.type !== undefined && (obj.type = message.type);\n        message.serviceEndpoint !== undefined &&\n            (obj.serviceEndpoint = message.serviceEndpoint);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseService);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.serviceEndpoint !== undefined &&\n            object.serviceEndpoint !== null) {\n            message.serviceEndpoint = object.serviceEndpoint;\n        }\n        else {\n            message.serviceEndpoint = \"\";\n        }\n        return message;\n    },\n};\nconst baseSignInfo = { verification_method_id: \"\", signature: \"\" };\nexports.SignInfo = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.verification_method_id !== \"\") {\n            writer.uint32(10).string(message.verification_method_id);\n        }\n        if (message.signature !== \"\") {\n            writer.uint32(18).string(message.signature);\n        }\n        if (message.clientSpec !== undefined) {\n            clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSignInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.verification_method_id = reader.string();\n                    break;\n                case 2:\n                    message.signature = reader.string();\n                    break;\n                case 3:\n                    message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSignInfo);\n        if (object.verification_method_id !== undefined &&\n            object.verification_method_id !== null) {\n            message.verification_method_id = String(object.verification_method_id);\n        }\n        else {\n            message.verification_method_id = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = String(object.signature);\n        }\n        else {\n            message.signature = \"\";\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.verification_method_id !== undefined &&\n            (obj.verification_method_id = message.verification_method_id);\n        message.signature !== undefined && (obj.signature = message.signature);\n        message.clientSpec !== undefined &&\n            (obj.clientSpec = message.clientSpec\n                ? clientSpec_1.ClientSpec.toJSON(message.clientSpec)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSignInfo);\n        if (object.verification_method_id !== undefined &&\n            object.verification_method_id !== null) {\n            message.verification_method_id = object.verification_method_id;\n        }\n        else {\n            message.verification_method_id = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = \"\";\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n};\nconst baseDidDocumentState = {};\nexports.DidDocumentState = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.didDocument !== undefined) {\n            exports.Did.encode(message.didDocument, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.didDocumentMetadata !== undefined) {\n            exports.Metadata.encode(message.didDocumentMetadata, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDidDocumentState);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.didDocument = exports.Did.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.didDocumentMetadata = exports.Metadata.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDidDocumentState);\n        if (object.didDocument !== undefined && object.didDocument !== null) {\n            message.didDocument = exports.Did.fromJSON(object.didDocument);\n        }\n        else {\n            message.didDocument = undefined;\n        }\n        if (object.didDocumentMetadata !== undefined &&\n            object.didDocumentMetadata !== null) {\n            message.didDocumentMetadata = exports.Metadata.fromJSON(object.didDocumentMetadata);\n        }\n        else {\n            message.didDocumentMetadata = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.didDocument !== undefined &&\n            (obj.didDocument = message.didDocument\n                ? exports.Did.toJSON(message.didDocument)\n                : undefined);\n        message.didDocumentMetadata !== undefined &&\n            (obj.didDocumentMetadata = message.didDocumentMetadata\n                ? exports.Metadata.toJSON(message.didDocumentMetadata)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDidDocumentState);\n        if (object.didDocument !== undefined && object.didDocument !== null) {\n            message.didDocument = exports.Did.fromPartial(object.didDocument);\n        }\n        else {\n            message.didDocument = undefined;\n        }\n        if (object.didDocumentMetadata !== undefined &&\n            object.didDocumentMetadata !== null) {\n            message.didDocumentMetadata = exports.Metadata.fromPartial(object.didDocumentMetadata);\n        }\n        else {\n            message.didDocumentMetadata = undefined;\n        }\n        return message;\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}