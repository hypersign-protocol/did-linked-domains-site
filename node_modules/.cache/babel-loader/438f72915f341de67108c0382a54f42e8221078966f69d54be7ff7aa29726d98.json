{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateMethodGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodGet.js\").default;\nvar _defineProperty = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\").default;\nvar _classPrivateFieldSet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\").default;\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Reader = exports.Writer = exports.Coder = exports.checkResultErrors = exports.Result = exports.WordSize = void 0;\nconst index_js_1 = require(\"../../utils/index.js\");\n/**\n * @_ignore:\n */\nexports.WordSize = 32;\nconst Padding = new Uint8Array(exports.WordSize);\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [\"then\"];\nconst _guard = {};\nfunction throwError(name, error) {\n  const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${name}`);\n  wrapped.error = error;\n  throw wrapped;\n}\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nvar _names = /*#__PURE__*/new WeakMap();\nclass Result extends Array {\n  /**\n   *  @private\n   */\n  constructor(...args) {\n    // To properly sub-class Array so the other built-in\n    // functions work, the constructor has to behave fairly\n    // well. So, in the event we are created via fromItems()\n    // we build the read-only Result object we want, but on\n    // any other input, we use the default constructor\n    // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n    const guard = args[0];\n    let items = args[1];\n    let names = (args[2] || []).slice();\n    let wrap = true;\n    if (guard !== _guard) {\n      items = args;\n      names = [];\n      wrap = false;\n    }\n    // Can't just pass in ...items since an array of length 1\n    // is a special case in the super.\n    super(items.length);\n    _classPrivateFieldInitSpec(this, _names, {\n      writable: true,\n      value: void 0\n    });\n    items.forEach((item, index) => {\n      this[index] = item;\n    });\n    // Find all unique keys\n    const nameCounts = names.reduce((accum, name) => {\n      if (typeof name === \"string\") {\n        accum.set(name, (accum.get(name) || 0) + 1);\n      }\n      return accum;\n    }, new Map());\n    // Remove any key thats not unique\n    _classPrivateFieldSet(this, _names, Object.freeze(items.map((item, index) => {\n      const name = names[index];\n      if (name != null && nameCounts.get(name) === 1) {\n        return name;\n      }\n      return null;\n    })));\n    if (!wrap) {\n      return;\n    }\n    // A wrapped Result is immutable\n    Object.freeze(this);\n    // Proxy indices and names so we can trap deferred errors\n    return new Proxy(this, {\n      get: (target, prop, receiver) => {\n        if (typeof prop === \"string\") {\n          // Index accessor\n          if (prop.match(/^[0-9]+$/)) {\n            const index = (0, index_js_1.getNumber)(prop, \"%index\");\n            if (index < 0 || index >= this.length) {\n              throw new RangeError(\"out of result range\");\n            }\n            const item = target[index];\n            if (item instanceof Error) {\n              throwError(`index ${index}`, item);\n            }\n            return item;\n          }\n          // Pass important checks (like `then` for Promise) through\n          if (passProperties.indexOf(prop) >= 0) {\n            return Reflect.get(target, prop, receiver);\n          }\n          const value = target[prop];\n          if (value instanceof Function) {\n            // Make sure functions work with private variables\n            // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n            return function (...args) {\n              return value.apply(this === receiver ? target : this, args);\n            };\n          } else if (!(prop in target)) {\n            // Possible name accessor\n            return target.getValue.apply(this === receiver ? target : this, [prop]);\n          }\n        }\n        return Reflect.get(target, prop, receiver);\n      }\n    });\n  }\n  /**\n   *  Returns the Result as a normal Array.\n   *\n   *  This will throw if there are any outstanding deferred\n   *  errors.\n   */\n  toArray() {\n    const result = [];\n    this.forEach((item, index) => {\n      if (item instanceof Error) {\n        throwError(`index ${index}`, item);\n      }\n      result.push(item);\n    });\n    return result;\n  }\n  /**\n   *  Returns the Result as an Object with each name-value pair.\n   *\n   *  This will throw if any value is unnamed, or if there are\n   *  any outstanding deferred errors.\n   */\n  toObject() {\n    return _classPrivateFieldGet(this, _names).reduce((accum, name, index) => {\n      (0, index_js_1.assert)(name != null, \"value at index ${ index } unnamed\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"toObject()\"\n      });\n      // Add values for names that don't conflict\n      if (!(name in accum)) {\n        accum[name] = this.getValue(name);\n      }\n      return accum;\n    }, {});\n  }\n  /**\n   *  @_ignore\n   */\n  slice(start, end) {\n    if (start == null) {\n      start = 0;\n    }\n    if (start < 0) {\n      start += this.length;\n      if (start < 0) {\n        start = 0;\n      }\n    }\n    if (end == null) {\n      end = this.length;\n    }\n    if (end < 0) {\n      end += this.length;\n      if (end < 0) {\n        end = 0;\n      }\n    }\n    if (end > this.length) {\n      end = this.length;\n    }\n    const result = [],\n      names = [];\n    for (let i = start; i < end; i++) {\n      result.push(this[i]);\n      names.push(_classPrivateFieldGet(this, _names)[i]);\n    }\n    return new Result(_guard, result, names);\n  }\n  /**\n   *  @_ignore\n   */\n  filter(callback, thisArg) {\n    const result = [],\n      names = [];\n    for (let i = 0; i < this.length; i++) {\n      const item = this[i];\n      if (item instanceof Error) {\n        throwError(`index ${i}`, item);\n      }\n      if (callback.call(thisArg, item, i, this)) {\n        result.push(item);\n        names.push(_classPrivateFieldGet(this, _names)[i]);\n      }\n    }\n    return new Result(_guard, result, names);\n  }\n  /**\n   *  @_ignore\n   */\n  map(callback, thisArg) {\n    const result = [];\n    for (let i = 0; i < this.length; i++) {\n      const item = this[i];\n      if (item instanceof Error) {\n        throwError(`index ${i}`, item);\n      }\n      result.push(callback.call(thisArg, item, i, this));\n    }\n    return result;\n  }\n  /**\n   *  Returns the value for %%name%%.\n   *\n   *  Since it is possible to have a key whose name conflicts with\n   *  a method on a [[Result]] or its superclass Array, or any\n   *  JavaScript keyword, this ensures all named values are still\n   *  accessible by name.\n   */\n  getValue(name) {\n    const index = _classPrivateFieldGet(this, _names).indexOf(name);\n    if (index === -1) {\n      return undefined;\n    }\n    const value = this[index];\n    if (value instanceof Error) {\n      throwError(`property ${JSON.stringify(name)}`, value.error);\n    }\n    return value;\n  }\n  /**\n   *  Creates a new [[Result]] for %%items%% with each entry\n   *  also accessible by its corresponding name in %%keys%%.\n   */\n  static fromItems(items, keys) {\n    return new Result(_guard, items, keys);\n  }\n}\nexports.Result = Result;\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nfunction checkResultErrors(result) {\n  // Find the first error (if any)\n  const errors = [];\n  const checkErrors = function (path, object) {\n    if (!Array.isArray(object)) {\n      return;\n    }\n    for (let key in object) {\n      const childPath = path.slice();\n      childPath.push(key);\n      try {\n        checkErrors(childPath, object[key]);\n      } catch (error) {\n        errors.push({\n          path: childPath,\n          error: error\n        });\n      }\n    }\n  };\n  checkErrors([], result);\n  return errors;\n}\nexports.checkResultErrors = checkResultErrors;\nfunction getValue(value) {\n  let bytes = (0, index_js_1.toBeArray)(value);\n  (0, index_js_1.assert)(bytes.length <= exports.WordSize, \"value out-of-bounds\", \"BUFFER_OVERRUN\", {\n    buffer: bytes,\n    length: exports.WordSize,\n    offset: bytes.length\n  });\n  if (bytes.length !== exports.WordSize) {\n    bytes = (0, index_js_1.getBytesCopy)((0, index_js_1.concat)([Padding.slice(bytes.length % exports.WordSize), bytes]));\n  }\n  return bytes;\n}\n/**\n *  @_ignore\n */\nclass Coder {\n  constructor(name, type, localName, dynamic) {\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    _defineProperty(this, \"name\", void 0);\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    _defineProperty(this, \"type\", void 0);\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    _defineProperty(this, \"localName\", void 0);\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    _defineProperty(this, \"dynamic\", void 0);\n    (0, index_js_1.defineProperties)(this, {\n      name,\n      type,\n      localName,\n      dynamic\n    }, {\n      name: \"string\",\n      type: \"string\",\n      localName: \"string\",\n      dynamic: \"boolean\"\n    });\n  }\n  _throwError(message, value) {\n    (0, index_js_1.assertArgument)(false, message, this.localName, value);\n  }\n}\nexports.Coder = Coder;\n/**\n *  @_ignore\n */\nvar _data = /*#__PURE__*/new WeakMap();\nvar _dataLength = /*#__PURE__*/new WeakMap();\nvar _writeData = /*#__PURE__*/new WeakSet();\nclass Writer {\n  constructor() {\n    _classPrivateMethodInitSpec(this, _writeData);\n    // An array of WordSize lengthed objects to concatenation\n    _classPrivateFieldInitSpec(this, _data, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _dataLength, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _data, []);\n    _classPrivateFieldSet(this, _dataLength, 0);\n  }\n  get data() {\n    return (0, index_js_1.concat)(_classPrivateFieldGet(this, _data));\n  }\n  get length() {\n    return _classPrivateFieldGet(this, _dataLength);\n  }\n  appendWriter(writer) {\n    return _classPrivateMethodGet(this, _writeData, _writeData2).call(this, (0, index_js_1.getBytesCopy)(writer.data));\n  }\n  // Arrayish item; pad on the right to *nearest* WordSize\n  writeBytes(value) {\n    let bytes = (0, index_js_1.getBytesCopy)(value);\n    const paddingOffset = bytes.length % exports.WordSize;\n    if (paddingOffset) {\n      bytes = (0, index_js_1.getBytesCopy)((0, index_js_1.concat)([bytes, Padding.slice(paddingOffset)]));\n    }\n    return _classPrivateMethodGet(this, _writeData, _writeData2).call(this, bytes);\n  }\n  // Numeric item; pad on the left *to* WordSize\n  writeValue(value) {\n    return _classPrivateMethodGet(this, _writeData, _writeData2).call(this, getValue(value));\n  }\n  // Inserts a numeric place-holder, returning a callback that can\n  // be used to asjust the value later\n  writeUpdatableValue() {\n    const offset = _classPrivateFieldGet(this, _data).length;\n    _classPrivateFieldGet(this, _data).push(Padding);\n    _classPrivateFieldSet(this, _dataLength, _classPrivateFieldGet(this, _dataLength) + exports.WordSize);\n    return value => {\n      _classPrivateFieldGet(this, _data)[offset] = getValue(value);\n    };\n  }\n}\nfunction _writeData2(data) {\n  _classPrivateFieldGet(this, _data).push(data);\n  _classPrivateFieldSet(this, _dataLength, _classPrivateFieldGet(this, _dataLength) + data.length);\n  return data.length;\n}\nexports.Writer = Writer;\n/**\n *  @_ignore\n */\nvar _data2 = /*#__PURE__*/new WeakMap();\nvar _offset = /*#__PURE__*/new WeakMap();\nvar _peekBytes = /*#__PURE__*/new WeakSet();\nclass Reader {\n  constructor(data, allowLoose) {\n    _classPrivateMethodInitSpec(this, _peekBytes);\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    _defineProperty(this, \"allowLoose\", void 0);\n    _classPrivateFieldInitSpec(this, _data2, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _offset, {\n      writable: true,\n      value: void 0\n    });\n    (0, index_js_1.defineProperties)(this, {\n      allowLoose: !!allowLoose\n    });\n    _classPrivateFieldSet(this, _data2, (0, index_js_1.getBytesCopy)(data));\n    _classPrivateFieldSet(this, _offset, 0);\n  }\n  get data() {\n    return (0, index_js_1.hexlify)(_classPrivateFieldGet(this, _data2));\n  }\n  get dataLength() {\n    return _classPrivateFieldGet(this, _data2).length;\n  }\n  get consumed() {\n    return _classPrivateFieldGet(this, _offset);\n  }\n  get bytes() {\n    return new Uint8Array(_classPrivateFieldGet(this, _data2));\n  }\n  // Create a sub-reader with the same underlying data, but offset\n  subReader(offset) {\n    return new Reader(_classPrivateFieldGet(this, _data2).slice(_classPrivateFieldGet(this, _offset) + offset), this.allowLoose);\n  }\n  // Read bytes\n  readBytes(length, loose) {\n    let bytes = _classPrivateMethodGet(this, _peekBytes, _peekBytes2).call(this, 0, length, !!loose);\n    _classPrivateFieldSet(this, _offset, _classPrivateFieldGet(this, _offset) + bytes.length);\n    // @TODO: Make sure the length..end bytes are all 0?\n    return bytes.slice(0, length);\n  }\n  // Read a numeric values\n  readValue() {\n    return (0, index_js_1.toBigInt)(this.readBytes(exports.WordSize));\n  }\n  readIndex() {\n    return (0, index_js_1.toNumber)(this.readBytes(exports.WordSize));\n  }\n}\nfunction _peekBytes2(offset, length, loose) {\n  let alignedLength = Math.ceil(length / exports.WordSize) * exports.WordSize;\n  if (_classPrivateFieldGet(this, _offset) + alignedLength > _classPrivateFieldGet(this, _data2).length) {\n    if (this.allowLoose && loose && _classPrivateFieldGet(this, _offset) + length <= _classPrivateFieldGet(this, _data2).length) {\n      alignedLength = length;\n    } else {\n      (0, index_js_1.assert)(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n        buffer: (0, index_js_1.getBytesCopy)(_classPrivateFieldGet(this, _data2)),\n        length: _classPrivateFieldGet(this, _data2).length,\n        offset: _classPrivateFieldGet(this, _offset) + alignedLength\n      });\n    }\n  }\n  return _classPrivateFieldGet(this, _data2).slice(_classPrivateFieldGet(this, _offset), _classPrivateFieldGet(this, _offset) + alignedLength);\n}\nexports.Reader = Reader;","map":{"version":3,"names":["index_js_1","require","exports","WordSize","Padding","Uint8Array","passProperties","_guard","throwError","name","error","wrapped","Error","_names","WeakMap","Result","Array","constructor","args","guard","items","names","slice","wrap","length","_classPrivateFieldInitSpec","writable","value","forEach","item","index","nameCounts","reduce","accum","set","get","Map","_classPrivateFieldSet","Object","freeze","map","Proxy","target","prop","receiver","match","getNumber","RangeError","indexOf","Reflect","Function","apply","getValue","toArray","result","push","toObject","_classPrivateFieldGet","assert","operation","start","end","i","filter","callback","thisArg","call","undefined","JSON","stringify","fromItems","keys","checkResultErrors","errors","checkErrors","path","object","isArray","key","childPath","bytes","toBeArray","buffer","offset","getBytesCopy","concat","Coder","type","localName","dynamic","_defineProperty","defineProperties","_throwError","message","assertArgument","_data","_dataLength","_writeData","WeakSet","Writer","_classPrivateMethodInitSpec","data","appendWriter","writer","_classPrivateMethodGet","_writeData2","writeBytes","paddingOffset","writeValue","writeUpdatableValue","_data2","_offset","_peekBytes","Reader","allowLoose","hexlify","dataLength","consumed","subReader","readBytes","loose","_peekBytes2","readValue","toBigInt","readIndex","toNumber","alignedLength","Math","ceil"],"sources":["../../../src.ts/abi/coders/abstract-coder.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}