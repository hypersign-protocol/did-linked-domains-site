{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateMethodGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodGet.js\").default;\nvar _defineProperty = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VoidSigner = exports.AbstractSigner = void 0;\n/**\n *  Generally the [[Wallet]] and [[JsonRpcSigner]] and their sub-classes\n *  are sufficent for most developers, but this is provided to\n *  fascilitate more complex Signers.\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../transaction/index.js\");\nconst index_js_3 = require(\"../utils/index.js\");\nconst provider_js_1 = require(\"./provider.js\");\nfunction checkProvider(signer, operation) {\n  if (signer.provider) {\n    return signer.provider;\n  }\n  (0, index_js_3.assert)(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", {\n    operation\n  });\n}\nasync function populate(signer, tx) {\n  let pop = (0, provider_js_1.copyRequest)(tx);\n  if (pop.to != null) {\n    pop.to = (0, index_js_1.resolveAddress)(pop.to, signer);\n  }\n  if (pop.from != null) {\n    const from = pop.from;\n    pop.from = Promise.all([signer.getAddress(), (0, index_js_1.resolveAddress)(from, signer)]).then(([address, from]) => {\n      (0, index_js_3.assertArgument)(address.toLowerCase() === from.toLowerCase(), \"transaction from mismatch\", \"tx.from\", from);\n      return address;\n    });\n  } else {\n    pop.from = signer.getAddress();\n  }\n  return await (0, index_js_3.resolveProperties)(pop);\n}\n/**\n *  An **AbstractSigner** includes most of teh functionality required\n *  to get a [[Signer]] working as expected, but requires a few\n *  Signer-specific methods be overridden.\n *\n */\nclass AbstractSigner {\n  /**\n   *  Creates a new Signer connected to %%provider%%.\n   */\n  constructor(provider) {\n    /**\n     *  The provider this signer is connected to.\n     */\n    _defineProperty(this, \"provider\", void 0);\n    (0, index_js_3.defineProperties)(this, {\n      provider: provider || null\n    });\n  }\n  async getNonce(blockTag) {\n    return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n  }\n  async populateCall(tx) {\n    const pop = await populate(this, tx);\n    return pop;\n  }\n  async populateTransaction(tx) {\n    const provider = checkProvider(this, \"populateTransaction\");\n    const pop = await populate(this, tx);\n    if (pop.nonce == null) {\n      pop.nonce = await this.getNonce(\"pending\");\n    }\n    if (pop.gasLimit == null) {\n      pop.gasLimit = await this.estimateGas(pop);\n    }\n    // Populate the chain ID\n    const network = await this.provider.getNetwork();\n    if (pop.chainId != null) {\n      const chainId = (0, index_js_3.getBigInt)(pop.chainId);\n      (0, index_js_3.assertArgument)(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n    } else {\n      pop.chainId = network.chainId;\n    }\n    // Do not allow mixing pre-eip-1559 and eip-1559 properties\n    const hasEip1559 = pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null;\n    if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n      (0, index_js_3.assertArgument)(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n    } else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n      (0, index_js_3.assertArgument)(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n    }\n    if ((pop.type === 2 || pop.type == null) && pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null) {\n      // Fully-formed EIP-1559 transaction (skip getFeeData)\n      pop.type = 2;\n    } else if (pop.type === 0 || pop.type === 1) {\n      // Explicit Legacy or EIP-2930 transaction\n      // We need to get fee data to determine things\n      const feeData = await provider.getFeeData();\n      (0, index_js_3.assert)(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getGasPrice\"\n      });\n      // Populate missing gasPrice\n      if (pop.gasPrice == null) {\n        pop.gasPrice = feeData.gasPrice;\n      }\n    } else {\n      // We need to get fee data to determine things\n      const feeData = await provider.getFeeData();\n      if (pop.type == null) {\n        // We need to auto-detect the intended type of this transaction...\n        if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n          // The network supports EIP-1559!\n          // Upgrade transaction from null to eip-1559\n          pop.type = 2;\n          if (pop.gasPrice != null) {\n            // Using legacy gasPrice property on an eip-1559 network,\n            // so use gasPrice as both fee properties\n            const gasPrice = pop.gasPrice;\n            delete pop.gasPrice;\n            pop.maxFeePerGas = gasPrice;\n            pop.maxPriorityFeePerGas = gasPrice;\n          } else {\n            // Populate missing fee data\n            if (pop.maxFeePerGas == null) {\n              pop.maxFeePerGas = feeData.maxFeePerGas;\n            }\n            if (pop.maxPriorityFeePerGas == null) {\n              pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n            }\n          }\n        } else if (feeData.gasPrice != null) {\n          // Network doesn't support EIP-1559...\n          // ...but they are trying to use EIP-1559 properties\n          (0, index_js_3.assert)(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"populateTransaction\"\n          });\n          // Populate missing fee data\n          if (pop.gasPrice == null) {\n            pop.gasPrice = feeData.gasPrice;\n          }\n          // Explicitly set untyped transaction to legacy\n          // @TODO: Maybe this shold allow type 1?\n          pop.type = 0;\n        } else {\n          // getFeeData has failed us.\n          (0, index_js_3.assert)(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.getFeeData\"\n          });\n        }\n      } else if (pop.type === 2) {\n        // Explicitly using EIP-1559\n        // Populate missing fee data\n        if (pop.maxFeePerGas == null) {\n          pop.maxFeePerGas = feeData.maxFeePerGas;\n        }\n        if (pop.maxPriorityFeePerGas == null) {\n          pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n        }\n      }\n    }\n    //@TOOD: Don't await all over the place; save them up for\n    // the end for better batching\n    return await (0, index_js_3.resolveProperties)(pop);\n  }\n  async estimateGas(tx) {\n    return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n  }\n  async call(tx) {\n    return checkProvider(this, \"call\").call(await this.populateCall(tx));\n  }\n  async resolveName(name) {\n    const provider = checkProvider(this, \"resolveName\");\n    return await provider.resolveName(name);\n  }\n  async sendTransaction(tx) {\n    const provider = checkProvider(this, \"sendTransaction\");\n    const pop = await this.populateTransaction(tx);\n    delete pop.from;\n    const txObj = index_js_2.Transaction.from(pop);\n    return await provider.broadcastTransaction(await this.signTransaction(txObj));\n  }\n}\nexports.AbstractSigner = AbstractSigner;\n/**\n *  A **VoidSigner** is a class deisgned to allow an address to be used\n *  in any API which accepts a Signer, but for which there are no\n *  credentials available to perform any actual signing.\n *\n *  This for example allow impersonating an account for the purpose of\n *  static calls or estimating gas, but does not allow sending transactions.\n */\nvar _throwUnsupported = /*#__PURE__*/new WeakSet();\nclass VoidSigner extends AbstractSigner {\n  /**\n   *  Creates a new **VoidSigner** with %%address%% attached to\n   *  %%provider%%.\n   */\n  constructor(address, provider) {\n    super(provider);\n    _classPrivateMethodInitSpec(this, _throwUnsupported);\n    /**\n     *  The signer address.\n     */\n    _defineProperty(this, \"address\", void 0);\n    (0, index_js_3.defineProperties)(this, {\n      address\n    });\n  }\n  async getAddress() {\n    return this.address;\n  }\n  connect(provider) {\n    return new VoidSigner(this.address, provider);\n  }\n  async signTransaction(tx) {\n    _classPrivateMethodGet(this, _throwUnsupported, _throwUnsupported2).call(this, \"transactions\", \"signTransaction\");\n  }\n  async signMessage(message) {\n    _classPrivateMethodGet(this, _throwUnsupported, _throwUnsupported2).call(this, \"messages\", \"signMessage\");\n  }\n  async signTypedData(domain, types, value) {\n    _classPrivateMethodGet(this, _throwUnsupported, _throwUnsupported2).call(this, \"typed-data\", \"signTypedData\");\n  }\n}\nfunction _throwUnsupported2(suffix, operation) {\n  (0, index_js_3.assert)(false, `VoidSigner cannot sign ${suffix}`, \"UNSUPPORTED_OPERATION\", {\n    operation\n  });\n}\nexports.VoidSigner = VoidSigner;","map":{"version":3,"names":["index_js_1","require","index_js_2","index_js_3","provider_js_1","checkProvider","signer","operation","provider","assert","populate","tx","pop","copyRequest","to","resolveAddress","from","Promise","all","getAddress","then","address","assertArgument","toLowerCase","resolveProperties","AbstractSigner","constructor","_defineProperty","defineProperties","getNonce","blockTag","getTransactionCount","populateCall","populateTransaction","nonce","gasLimit","estimateGas","network","getNetwork","chainId","getBigInt","hasEip1559","maxFeePerGas","maxPriorityFeePerGas","gasPrice","type","feeData","getFeeData","call","resolveName","name","sendTransaction","txObj","Transaction","broadcastTransaction","signTransaction","exports","_throwUnsupported","WeakSet","VoidSigner","_classPrivateMethodInitSpec","connect","_classPrivateMethodGet","_throwUnsupported2","signMessage","message","signTypedData","domain","types","value","suffix"],"sources":["../../src.ts/providers/abstract-signer.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}