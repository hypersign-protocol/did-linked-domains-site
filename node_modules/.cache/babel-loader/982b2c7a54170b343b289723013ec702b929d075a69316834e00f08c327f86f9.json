{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlchemyProvider = void 0;\n/**\n *  About Alchemy\n *\n *  @_subsection: api/providers/thirdparty:Alchemy  [providers-alchemy]\n */\nconst index_js_1 = require(\"../utils/index.js\");\nconst community_js_1 = require(\"./community.js\");\nconst network_js_1 = require(\"./network.js\");\nconst provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nfunction getHost(name) {\n  switch (name) {\n    case \"mainnet\":\n      return \"eth-mainnet.alchemyapi.io\";\n    case \"goerli\":\n      return \"eth-goerli.g.alchemy.com\";\n    case \"sepolia\":\n      return \"eth-sepolia.g.alchemy.com\";\n    case \"arbitrum\":\n      return \"arb-mainnet.g.alchemy.com\";\n    case \"arbitrum-goerli\":\n      return \"arb-goerli.g.alchemy.com\";\n    case \"matic\":\n      return \"polygon-mainnet.g.alchemy.com\";\n    case \"matic-mumbai\":\n      return \"polygon-mumbai.g.alchemy.com\";\n    case \"optimism\":\n      return \"opt-mainnet.g.alchemy.com\";\n    case \"optimism-goerli\":\n      return \"opt-goerli.g.alchemy.com\";\n  }\n  (0, index_js_1.assertArgument)(false, \"unsupported network\", \"network\", name);\n}\n/**\n *  The **AlchemyProvider** connects to the [[link-alchemy]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-alchemy-signup).\n *\n *  @_docloc: api/providers/thirdparty\n */\nclass AlchemyProvider extends provider_jsonrpc_js_1.JsonRpcProvider {\n  constructor(_network, apiKey) {\n    if (_network == null) {\n      _network = \"mainnet\";\n    }\n    const network = network_js_1.Network.from(_network);\n    if (apiKey == null) {\n      apiKey = defaultApiKey;\n    }\n    const request = AlchemyProvider.getRequest(network, apiKey);\n    super(request, network, {\n      staticNetwork: network\n    });\n    _defineProperty(this, \"apiKey\", void 0);\n    (0, index_js_1.defineProperties)(this, {\n      apiKey\n    });\n  }\n  _getProvider(chainId) {\n    try {\n      return new AlchemyProvider(chainId, this.apiKey);\n    } catch (error) {}\n    return super._getProvider(chainId);\n  }\n  async _perform(req) {\n    // https://docs.alchemy.com/reference/trace-transaction\n    if (req.method === \"getTransactionResult\") {\n      const {\n        trace,\n        tx\n      } = await (0, index_js_1.resolveProperties)({\n        trace: this.send(\"trace_transaction\", [req.hash]),\n        tx: this.getTransaction(req.hash)\n      });\n      if (trace == null || tx == null) {\n        return null;\n      }\n      let data;\n      let error = false;\n      try {\n        data = trace[0].result.output;\n        error = trace[0].error === \"Reverted\";\n      } catch (error) {}\n      if (data) {\n        (0, index_js_1.assert)(!error, \"an error occurred during transaction executions\", \"CALL_EXCEPTION\", {\n          action: \"getTransactionResult\",\n          data,\n          reason: null,\n          transaction: tx,\n          invocation: null,\n          revert: null // @TODO\n        });\n\n        return data;\n      }\n      (0, index_js_1.assert)(false, \"could not parse trace result\", \"BAD_DATA\", {\n        value: trace\n      });\n    }\n    return await super._perform(req);\n  }\n  isCommunityResource() {\n    return this.apiKey === defaultApiKey;\n  }\n  static getRequest(network, apiKey) {\n    if (apiKey == null) {\n      apiKey = defaultApiKey;\n    }\n    const request = new index_js_1.FetchRequest(`https:/\\/${getHost(network.name)}/v2/${apiKey}`);\n    request.allowGzip = true;\n    if (apiKey === defaultApiKey) {\n      request.retryFunc = async (request, response, attempt) => {\n        (0, community_js_1.showThrottleMessage)(\"alchemy\");\n        return true;\n      };\n    }\n    return request;\n  }\n}\nexports.AlchemyProvider = AlchemyProvider;","map":{"version":3,"names":["index_js_1","require","community_js_1","network_js_1","provider_jsonrpc_js_1","defaultApiKey","getHost","name","assertArgument","AlchemyProvider","JsonRpcProvider","constructor","_network","apiKey","network","Network","from","request","getRequest","staticNetwork","_defineProperty","defineProperties","_getProvider","chainId","error","_perform","req","method","trace","tx","resolveProperties","send","hash","getTransaction","data","result","output","assert","action","reason","transaction","invocation","revert","value","isCommunityResource","FetchRequest","allowGzip","retryFunc","response","attempt","showThrottleMessage","exports"],"sources":["../../src.ts/providers/provider-alchemy.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}