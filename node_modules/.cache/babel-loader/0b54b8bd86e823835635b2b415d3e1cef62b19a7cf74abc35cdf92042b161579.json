{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateFieldInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _defineProperty = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _classPrivateFieldGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\").default;\nvar _classPrivateFieldSet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseWallet = void 0;\nconst index_js_1 = require(\"../address/index.js\");\nconst index_js_2 = require(\"../hash/index.js\");\nconst index_js_3 = require(\"../providers/index.js\");\nconst index_js_4 = require(\"../transaction/index.js\");\nconst index_js_5 = require(\"../utils/index.js\");\n/**\n *  The **BaseWallet** is a stream-lined implementation of a\n *  [[Signer]] that operates with a private key.\n *\n *  It is preferred to use the [[Wallet]] class, as it offers\n *  additional functionality and simplifies loading a variety\n *  of JSON formats, Mnemonic Phrases, etc.\n *\n *  This class may be of use for those attempting to implement\n *  a minimal Signer.\n */\nvar _signingKey = /*#__PURE__*/new WeakMap();\nclass BaseWallet extends index_js_3.AbstractSigner {\n  /**\n   *  Creates a new BaseWallet for %%privateKey%%, optionally\n   *  connected to %%provider%%.\n   *\n   *  If %%provider%% is not specified, only offline methods can\n   *  be used.\n   */\n  constructor(privateKey, provider) {\n    super(provider);\n    /**\n     *  The wallet address.\n     */\n    _defineProperty(this, \"address\", void 0);\n    _classPrivateFieldInitSpec(this, _signingKey, {\n      writable: true,\n      value: void 0\n    });\n    (0, index_js_5.assertArgument)(privateKey && typeof privateKey.sign === \"function\", \"invalid private key\", \"privateKey\", \"[ REDACTED ]\");\n    _classPrivateFieldSet(this, _signingKey, privateKey);\n    const address = (0, index_js_4.computeAddress)(this.signingKey.publicKey);\n    (0, index_js_5.defineProperties)(this, {\n      address\n    });\n  }\n  // Store private values behind getters to reduce visibility\n  // in console.log\n  /**\n   *  The [[SigningKey]] used for signing payloads.\n   */\n  get signingKey() {\n    return _classPrivateFieldGet(this, _signingKey);\n  }\n  /**\n   *  The private key for this wallet.\n   */\n  get privateKey() {\n    return this.signingKey.privateKey;\n  }\n  async getAddress() {\n    return this.address;\n  }\n  connect(provider) {\n    return new BaseWallet(_classPrivateFieldGet(this, _signingKey), provider);\n  }\n  async signTransaction(tx) {\n    // Replace any Addressable or ENS name with an address\n    const {\n      to,\n      from\n    } = await (0, index_js_5.resolveProperties)({\n      to: tx.to ? (0, index_js_1.resolveAddress)(tx.to, this.provider) : undefined,\n      from: tx.from ? (0, index_js_1.resolveAddress)(tx.from, this.provider) : undefined\n    });\n    if (to != null) {\n      tx.to = to;\n    }\n    if (from != null) {\n      tx.from = from;\n    }\n    if (tx.from != null) {\n      (0, index_js_5.assertArgument)((0, index_js_1.getAddress)(tx.from) === this.address, \"transaction from address mismatch\", \"tx.from\", tx.from);\n      delete tx.from;\n    }\n    // Build the transaction\n    const btx = index_js_4.Transaction.from(tx);\n    btx.signature = this.signingKey.sign(btx.unsignedHash);\n    return btx.serialized;\n  }\n  async signMessage(message) {\n    return this.signMessageSync(message);\n  }\n  // @TODO: Add a secialized signTx and signTyped sync that enforces\n  // all parameters are known?\n  /**\n   *  Returns the signature for %%message%% signed with this wallet.\n   */\n  signMessageSync(message) {\n    return this.signingKey.sign((0, index_js_2.hashMessage)(message)).serialized;\n  }\n  async signTypedData(domain, types, value) {\n    // Populate any ENS names\n    const populated = await index_js_2.TypedDataEncoder.resolveNames(domain, types, value, async name => {\n      // @TODO: this should use resolveName; addresses don't\n      //        need a provider\n      (0, index_js_5.assert)(this.provider != null, \"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"resolveName\",\n        info: {\n          name\n        }\n      });\n      const address = await this.provider.resolveName(name);\n      (0, index_js_5.assert)(address != null, \"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n        value: name\n      });\n      return address;\n    });\n    return this.signingKey.sign(index_js_2.TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n  }\n}\nexports.BaseWallet = BaseWallet;","map":{"version":3,"names":["index_js_1","require","index_js_2","index_js_3","index_js_4","index_js_5","_signingKey","WeakMap","BaseWallet","AbstractSigner","constructor","privateKey","provider","_defineProperty","_classPrivateFieldInitSpec","writable","value","assertArgument","sign","_classPrivateFieldSet","address","computeAddress","signingKey","publicKey","defineProperties","_classPrivateFieldGet","getAddress","connect","signTransaction","tx","to","from","resolveProperties","resolveAddress","undefined","btx","Transaction","signature","unsignedHash","serialized","signMessage","message","signMessageSync","hashMessage","signTypedData","domain","types","populated","TypedDataEncoder","resolveNames","name","assert","operation","info","resolveName","hash","exports"],"sources":["../../src.ts/wallet/base-wallet.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}