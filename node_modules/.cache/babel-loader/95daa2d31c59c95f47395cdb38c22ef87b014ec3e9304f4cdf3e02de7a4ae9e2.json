{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseCoins = void 0;\n/**\n * Takes a coins list like \"819966000ucosm,700000000ustake\" and parses it.\n *\n * This is a Stargate ready version of parseCoins from @cosmjs/amino.\n * It supports more denoms.\n */\nfunction parseCoins(input) {\n  return input.replace(/\\s/g, \"\").split(\",\").filter(Boolean).map(part => {\n    // Denom regex from Stargate (https://github.com/cosmos/cosmos-sdk/blob/v0.42.7/types/coin.go#L599-L601)\n    const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);\n    if (!match) throw new Error(\"Got an invalid coin string\");\n    return {\n      amount: match[1].replace(/^0+/, \"\") || \"0\",\n      denom: match[2]\n    };\n  });\n}\nexports.parseCoins = parseCoins;","map":{"version":3,"names":["parseCoins","input","replace","split","filter","Boolean","map","part","match","Error","amount","denom","exports"],"sources":["../src/coins.ts"],"sourcesContent":[null],"mappings":";;;;;;AAEA;;;;;;AAMA,SAAgBA,UAAUA,CAACC,KAAa;EACtC,OAAOA,KAAK,CACTC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAACC,OAAO,CAAC,CACfC,GAAG,CAAEC,IAAI,IAAI;IACZ;IACA,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAAC,yCAAyC,CAAC;IACnE,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IACzD,OAAO;MACLC,MAAM,EAAEF,KAAK,CAAC,CAAC,CAAC,CAACN,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG;MAC1CS,KAAK,EAAEH,KAAK,CAAC,CAAC;KACf;EACH,CAAC,CAAC;AACN;AAdAI,OAAA,CAAAZ,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}