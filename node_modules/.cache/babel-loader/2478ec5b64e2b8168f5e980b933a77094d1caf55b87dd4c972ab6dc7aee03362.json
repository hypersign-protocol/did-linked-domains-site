{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst web3_1 = __importDefault(require(\"web3\"));\nconst {\n  suites\n} = require('jsonld-signatures');\n//@ts-ignore\nconst jsonld_1 = __importDefault(require(\"jsonld\"));\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst nodeDocumentLoader = jsonld_1.default.documentLoader;\nconst ethers_1 = require(\"ethers\");\nconst bip39 = __importStar(require(\"bip39\"));\nconst utils_1 = require(\"../utils\");\nconst Eip712Types_1 = require(\"../TypedData/Eip712Types\");\nconst v1_1 = require(\"../Context/v1\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst docloader = (url, options) => __awaiter(void 0, void 0, void 0, function* () {\n  if (url in v1_1.CONTEXTS) {\n    return {\n      contextUrl: null,\n      document: v1_1.CONTEXTS[url],\n      documentUrl: url // this is the actual context URL after redirects\n    };\n  }\n  // call the default documentLoader\n  return nodeDocumentLoader(url);\n});\nconst {\n  JCS\n} = require('jcs');\n// @ts-ignore\nJSON.canonify = JCS.cannonicalize;\nclass EthereumEip712Signature2021 extends suites.LinkedDataSignature {\n  constructor(options, web3) {\n    // web3 send web3 wrapper arround webwallet\n    super({\n      type: \"EthereumEip712Signature2021\"\n    });\n    this.index = 0;\n    this.mnemonic = \"\";\n    if (web3) {\n      this.web3 = web3;\n    } else {\n      this.web3 = new web3_1.default();\n    }\n    const {\n      signer,\n      LDKeyClass\n    } = options;\n    this.proof = {\n      type: \"EthereumEip712Signature2021\"\n    };\n    this.LDKeyClass = LDKeyClass;\n    if (signer) {\n      this.signer = signer;\n    }\n    this.proofSignatureKey = \"proofValue\";\n  }\n  getMnemonic() {\n    if (this.mnemonic === \"\") {\n      throw new Error(\"Mnemonic is not set\");\n    }\n    return this.mnemonic;\n  }\n  generateKeyPair(seed) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (seed) {\n        this.mnemonic = seed;\n      } else {\n        // @ts-ignore\n        this.mnemonic = yield bip39.generateMnemonic(256, crypto_1.default.randomBytes);\n      }\n      const mnemonic = yield ethers_1.Mnemonic.fromPhrase(this.mnemonic);\n      const wallet = yield ethers_1.HDNodeWallet.fromMnemonic(mnemonic, `m/44'/60'/0'/0/${this.index}`);\n      this.wallet = wallet;\n      const account = yield this.web3.eth.accounts.privateKeyToAccount(wallet.privateKey);\n      this.account = account;\n      this.signer = wallet;\n      return {\n        publicKey: wallet.publicKey,\n        privateKey: wallet.privateKey,\n        address: account.address\n      };\n    });\n  }\n  fromPrivateKey(privateKey) {\n    const account = this.web3.eth.accounts.privateKeyToAccount(privateKey);\n    this.account = account;\n    this.signer = new ethers_1.BaseWallet(new ethers_1.SigningKey(privateKey));\n    this.wallet = this.signer;\n    return {\n      address: account.address,\n      privateKey: privateKey\n    };\n  }\n  switchAccount(index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const mnemonic = yield ethers_1.Mnemonic.fromPhrase(this.getMnemonic());\n      const wallet = yield ethers_1.HDNodeWallet.fromMnemonic(mnemonic, `m/44'/60'/0'/0/${index}`);\n      this.wallet = wallet;\n      const account = yield this.web3.eth.accounts.privateKeyToAccount(wallet.privateKey);\n      this.account = account;\n      return {\n        publicKey: wallet.publicKey,\n        privateKey: wallet.privateKey,\n        address: account.address\n      };\n    });\n  }\n  toJWK() {\n    return new Error(\"Not Implemented\");\n  }\n  canonicalizationHash(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const c14nDocument = yield jsonld_1.default.canonize(message, {\n        algorithm: \"URDNA2015\",\n        format: \"application/n-quads\",\n        useNative: false,\n        documentLoader: docloader\n      });\n      const sha256 = crypto_1.default.createHash('sha256');\n      let hash = sha256.update(c14nDocument);\n      return hash.digest('hex');\n    });\n  }\n  createProof(options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      let proof = {\n        type: this.type\n      };\n      let embed = options.embed ? options.embed : true;\n      if (options.verificationMethod !== undefined && typeof options.verificationMethod !== \"string\") {\n        throw TypeError(`\"verificationMethod\" must be a URI string`);\n      }\n      let date = options.date ? new Date(options.date).getTime() : undefined;\n      if (date === undefined) {\n        date = Date.now();\n      }\n      if (date !== undefined && typeof date !== \"string\") {\n        date = (0, utils_1.w3cDate)(date);\n      }\n      if (date !== undefined) {\n        proof.created = date;\n      }\n      proof.verificationMethod = options.verificationMethod;\n      proof = yield options.purpose.update(proof, {\n        document: options.document,\n        suite: this,\n        documentLoader: options.documentLoader,\n        expansionMap: options.expansionMap\n      });\n      let domain = options.domain ? options.domain : {};\n      const primaryType = (_a = options.primaryType) !== null && _a !== void 0 ? _a : \"Document\";\n      const eip712TypedData = new Eip712Types_1.EIP712TypedData();\n      let types = options.types ? options.types : eip712TypedData.generateTypes(options.document, primaryType);\n      const toBeSignedDocument = {\n        types,\n        domain,\n        primaryType,\n        message: options.document\n      };\n      proof.canonicalizationHash = yield this.canonicalizationHash(toBeSignedDocument.message);\n      const [canonizeProof, canonizeDocument] = yield this.createVerifyData({\n        document: toBeSignedDocument,\n        proof\n      });\n      let signOptions = {\n        proof: canonizeProof,\n        verifyData: canonizeDocument,\n        embed: embed\n      };\n      proof = yield this.sign(signOptions);\n      return proof;\n    });\n  }\n  verifyProof(options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        proof,\n        document\n      } = options;\n      let domain = options.domain ? options.domain : {};\n      const primaryType = (_a = options.primaryType) !== null && _a !== void 0 ? _a : \"Document\";\n      const eip712TypedData = new Eip712Types_1.EIP712TypedData();\n      let types = options.types ? options.types : eip712TypedData.generateTypes(options.document, primaryType);\n      if (typeof types === \"string\") {\n        if (options.documentLoader === undefined) {\n          throw new Error(\"documentLoader must be defined for remote types\");\n        }\n        types = yield options.documentLoader(types).document;\n      }\n      const toBeVerifiedDocument = {\n        types: types,\n        domain,\n        primaryType: \"Document\",\n        message: document\n      };\n      try {\n        const [canonizeProof, canonizeDocument] = yield this.createVerifyData({\n          proof,\n          document: toBeVerifiedDocument\n        });\n        const vm = this.getVerificationMethod(canonizeProof);\n        const canonicalizationHashVerified = proof.canonicalizationHash ? (yield this.canonicalizationHash(document)) === proof.canonicalizationHash : null;\n        const verified = this.verifySignature({\n          signature: proof[this.proofSignatureKey],\n          verificationMethod: vm,\n          domain: canonizeDocument.domain,\n          types: canonizeDocument.types,\n          message: canonizeDocument.message,\n          primaryType: canonizeDocument.primaryType\n        });\n        if (!verified) {\n          throw Error(`Invalid signature`);\n        }\n        const purposeResult = yield options.purpose.validate(canonizeProof, {\n          verificationMethod: {\n            id: vm\n          },\n          documentLoader: options.documentLoader\n        });\n        if (!purposeResult.valid) {\n          throw Error(purposeResult);\n        }\n        const returnObj = {\n          verified: true,\n          results: [{\n            proof,\n            verified,\n            verficationMethod: vm,\n            purposeResult: {\n              valid: purposeResult.valid\n            }\n          }],\n          statusResult: {\n            canonicalizationHashVerified,\n            signatureVerified: verified\n          }\n        };\n        if (proof.canonicalizationHash && canonicalizationHashVerified === false) {\n          throw Error(`Invalid canonicalizationHash`);\n        }\n        return returnObj;\n      } catch (error) {\n        return {\n          verified: false,\n          error: error\n        };\n      }\n    });\n  }\n  canonize(input) {\n    // @ts-ignore\n    return JSON.parse(JSON.canonify(input));\n  }\n  canonizeProof(proof) {\n    proof = Object.assign({}, proof);\n    delete proof[this.proofSignatureKey];\n    return this.canonize(proof);\n  }\n  createVerifyData(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        proof,\n        document\n      } = options;\n      // JCS   RFC 8785\n      const canonizeProof = this.canonizeProof(proof);\n      const canonizeDocument = this.canonize(document);\n      return [canonizeProof, canonizeDocument];\n    });\n  }\n  getVerificationMethod(proof) {\n    let verificationMethod = proof.verificationMethod;\n    if (typeof verificationMethod === \"object\") {\n      verificationMethod = verificationMethod.id;\n    }\n    if (!verificationMethod) {\n      throw new Error('No \"verificationMethod\" found in proof.');\n    }\n    // TODO: resolve DID to check if DID belongs to the controller of the proof or the status of the DID\n    return verificationMethod;\n  }\n  sign(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        verifyData,\n        proof\n      } = options;\n      let proofValue;\n      //@ts-ignore\n      if (this.web3._provider !== undefined && this.web3._provider !== null) {\n        //@ts-ignore\n        const from = yield this.web3._provider.selectedAddress;\n        const params = [from, JSON.stringify(verifyData)];\n        const method = 'eth_signTypedData_v4';\n        //@ts-ignore\n        proofValue = yield this.getSignFromMetamask(method, params, this.web3._provider);\n      } else if (!this.signer) {\n        throw new Error(\"A Web3 Signer API has not been specified\");\n      } else {\n        {\n          //@ts-ignore\n          proofValue = yield (0, eth_sig_util_1.signTypedData_v4)(Buffer.from(this.wallet.privateKey.replace('0x', ''), 'hex'), {\n            data: verifyData\n          });\n        }\n      }\n      proof[this.proofSignatureKey] = proofValue;\n      if (options.embed) {\n        proof[\"eip712\"] = {\n          domain: options.verifyData.domain,\n          types: options.verifyData.types,\n          primaryType: options.verifyData.primaryType\n        };\n      }\n      return proof;\n    });\n  }\n  verifySignature(options) {\n    const recoveredAddress = (0, eth_sig_util_1.recoverTypedSignature_v4)({\n      //@ts-ignore\n      data: {\n        domain: options.domain,\n        message: options.message,\n        types: options.types,\n        primaryType: options.primaryType\n      },\n      sig: options.signature\n    });\n    // TODO: add DID resolver (did-resolver)\n    if (recoveredAddress.toLowerCase() === this.extractAddressFromDID(options.verificationMethod).toLowerCase()) {\n      return true;\n    }\n    return false;\n  }\n  extractAddressFromDID(did) {\n    const didParts = did.split(\":\");\n    // last elem of array\n    let address = didParts[didParts.length - 1];\n    address = address.split(\"#\")[0];\n    return address.toLocaleLowerCase();\n  }\n  getSignFromMetamask(method, params, provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        provider.sendAsync({\n          method,\n          params,\n          from: provider.selectedAddress\n        }, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result.result);\n          }\n        });\n      });\n    });\n  }\n}\nexports.default = EthereumEip712Signature2021;\n//mesh short coral rescue height arrive bitter improve lift mystery point invite","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__importDefault","exports","web3_1","require","suites","jsonld_1","crypto_1","nodeDocumentLoader","default","documentLoader","ethers_1","bip39","utils_1","Eip712Types_1","v1_1","eth_sig_util_1","docloader","url","options","CONTEXTS","contextUrl","document","documentUrl","JCS","JSON","canonify","cannonicalize","EthereumEip712Signature2021","LinkedDataSignature","constructor","web3","type","index","mnemonic","signer","LDKeyClass","proof","proofSignatureKey","getMnemonic","Error","generateKeyPair","seed","generateMnemonic","randomBytes","Mnemonic","fromPhrase","wallet","HDNodeWallet","fromMnemonic","account","eth","accounts","privateKeyToAccount","privateKey","publicKey","address","fromPrivateKey","BaseWallet","SigningKey","switchAccount","toJWK","canonicalizationHash","message","c14nDocument","canonize","algorithm","format","useNative","sha256","createHash","hash","update","digest","createProof","_a","embed","verificationMethod","TypeError","date","Date","getTime","now","w3cDate","created","purpose","suite","expansionMap","domain","primaryType","eip712TypedData","EIP712TypedData","types","generateTypes","toBeSignedDocument","canonizeProof","canonizeDocument","createVerifyData","signOptions","verifyData","sign","verifyProof","toBeVerifiedDocument","vm","getVerificationMethod","canonicalizationHashVerified","verified","verifySignature","signature","purposeResult","validate","id","valid","returnObj","results","verficationMethod","statusResult","signatureVerified","error","input","parse","assign","proofValue","_provider","from","selectedAddress","params","stringify","method","getSignFromMetamask","signTypedData_v4","Buffer","replace","data","recoveredAddress","recoverTypedSignature_v4","sig","toLowerCase","extractAddressFromDID","did","didParts","split","length","toLocaleLowerCase","provider","sendAsync","err"],"sources":["/home/pratap/hid-ssi-js-sdk/node_modules/ethereumeip712signature2021suite/lib/src/EthereumEip712Signature2021/EthereumEip712Signature2021.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst web3_1 = __importDefault(require(\"web3\"));\nconst { suites } = require('jsonld-signatures');\n//@ts-ignore\nconst jsonld_1 = __importDefault(require(\"jsonld\"));\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst nodeDocumentLoader = jsonld_1.default.documentLoader;\nconst ethers_1 = require(\"ethers\");\nconst bip39 = __importStar(require(\"bip39\"));\nconst utils_1 = require(\"../utils\");\nconst Eip712Types_1 = require(\"../TypedData/Eip712Types\");\nconst v1_1 = require(\"../Context/v1\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst docloader = (url, options) => __awaiter(void 0, void 0, void 0, function* () {\n    if (url in v1_1.CONTEXTS) {\n        return {\n            contextUrl: null,\n            document: v1_1.CONTEXTS[url],\n            documentUrl: url // this is the actual context URL after redirects\n        };\n    }\n    // call the default documentLoader\n    return nodeDocumentLoader(url);\n});\nconst { JCS } = require('jcs');\n// @ts-ignore\nJSON.canonify = JCS.cannonicalize;\nclass EthereumEip712Signature2021 extends suites.LinkedDataSignature {\n    constructor(options, web3) {\n        // web3 send web3 wrapper arround webwallet\n        super({ type: \"EthereumEip712Signature2021\" });\n        this.index = 0;\n        this.mnemonic = \"\";\n        if (web3) {\n            this.web3 = web3;\n        }\n        else {\n            this.web3 = new web3_1.default();\n        }\n        const { signer, LDKeyClass } = options;\n        this.proof = {\n            type: \"EthereumEip712Signature2021\",\n        };\n        this.LDKeyClass = LDKeyClass;\n        if (signer) {\n            this.signer = signer;\n        }\n        this.proofSignatureKey = \"proofValue\";\n    }\n    getMnemonic() {\n        if (this.mnemonic === \"\") {\n            throw new Error(\"Mnemonic is not set\");\n        }\n        return this.mnemonic;\n    }\n    generateKeyPair(seed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (seed) {\n                this.mnemonic = seed;\n            }\n            else {\n                // @ts-ignore\n                this.mnemonic = yield bip39.generateMnemonic(256, crypto_1.default.randomBytes);\n            }\n            const mnemonic = yield ethers_1.Mnemonic.fromPhrase(this.mnemonic);\n            const wallet = yield ethers_1.HDNodeWallet.fromMnemonic(mnemonic, `m/44'/60'/0'/0/${this.index}`);\n            this.wallet = wallet;\n            const account = yield this.web3.eth.accounts.privateKeyToAccount(wallet.privateKey);\n            this.account = account;\n            this.signer = wallet;\n            return {\n                publicKey: wallet.publicKey,\n                privateKey: wallet.privateKey,\n                address: account.address\n            };\n        });\n    }\n    fromPrivateKey(privateKey) {\n        const account = this.web3.eth.accounts.privateKeyToAccount(privateKey);\n        this.account = account;\n        this.signer = new ethers_1.BaseWallet(new ethers_1.SigningKey(privateKey));\n        this.wallet = this.signer;\n        return {\n            address: account.address,\n            privateKey: privateKey,\n        };\n    }\n    switchAccount(index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mnemonic = yield ethers_1.Mnemonic.fromPhrase(this.getMnemonic());\n            const wallet = yield ethers_1.HDNodeWallet.fromMnemonic(mnemonic, `m/44'/60'/0'/0/${index}`);\n            this.wallet = wallet;\n            const account = yield this.web3.eth.accounts.privateKeyToAccount(wallet.privateKey);\n            this.account = account;\n            return {\n                publicKey: wallet.publicKey,\n                privateKey: wallet.privateKey,\n                address: account.address\n            };\n        });\n    }\n    toJWK() {\n        return new Error(\"Not Implemented\");\n    }\n    canonicalizationHash(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const c14nDocument = yield jsonld_1.default.canonize(message, {\n                algorithm: \"URDNA2015\",\n                format: \"application/n-quads\",\n                useNative: false,\n                documentLoader: docloader\n            });\n            const sha256 = crypto_1.default.createHash('sha256');\n            let hash = sha256.update(c14nDocument);\n            return hash.digest('hex');\n        });\n    }\n    createProof(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let proof = {\n                type: this.type,\n            };\n            let embed = options.embed ? options.embed : true;\n            if (options.verificationMethod !== undefined && typeof options.verificationMethod !== \"string\") {\n                throw TypeError(`\"verificationMethod\" must be a URI string`);\n            }\n            let date = options.date ? new Date(options.date).getTime() : undefined;\n            if (date === undefined) {\n                date = Date.now();\n            }\n            if (date !== undefined && typeof date !== \"string\") {\n                date = (0, utils_1.w3cDate)(date);\n            }\n            if (date !== undefined) {\n                proof.created = date;\n            }\n            proof.verificationMethod = options.verificationMethod;\n            proof = yield options.purpose.update(proof, {\n                document: options.document,\n                suite: this,\n                documentLoader: options.documentLoader,\n                expansionMap: options.expansionMap,\n            });\n            let domain = options.domain ? options.domain : {};\n            const primaryType = (_a = options.primaryType) !== null && _a !== void 0 ? _a : \"Document\";\n            const eip712TypedData = new Eip712Types_1.EIP712TypedData();\n            let types = options.types ? options.types : eip712TypedData.generateTypes(options.document, primaryType);\n            const toBeSignedDocument = {\n                types,\n                domain,\n                primaryType,\n                message: options.document,\n            };\n            proof.canonicalizationHash = yield this.canonicalizationHash(toBeSignedDocument.message);\n            const [canonizeProof, canonizeDocument] = yield this.createVerifyData({ document: toBeSignedDocument, proof });\n            let signOptions = {\n                proof: canonizeProof,\n                verifyData: canonizeDocument,\n                embed: embed,\n            };\n            proof = yield this.sign(signOptions);\n            return proof;\n        });\n    }\n    verifyProof(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { proof, document } = options;\n            let domain = options.domain ? options.domain : {};\n            const primaryType = (_a = options.primaryType) !== null && _a !== void 0 ? _a : \"Document\";\n            const eip712TypedData = new Eip712Types_1.EIP712TypedData();\n            let types = options.types ? options.types : eip712TypedData.generateTypes(options.document, primaryType);\n            if (typeof types === \"string\") {\n                if (options.documentLoader === undefined) {\n                    throw new Error(\"documentLoader must be defined for remote types\");\n                }\n                types = yield options.documentLoader(types).document;\n            }\n            const toBeVerifiedDocument = {\n                types: types,\n                domain,\n                primaryType: \"Document\",\n                message: document,\n            };\n            try {\n                const [canonizeProof, canonizeDocument] = yield this.createVerifyData({\n                    proof,\n                    document: toBeVerifiedDocument,\n                });\n                const vm = this.getVerificationMethod(canonizeProof);\n                const canonicalizationHashVerified = proof.canonicalizationHash ? (yield this.canonicalizationHash(document)) === proof.canonicalizationHash : null;\n                const verified = this.verifySignature({\n                    signature: proof[this.proofSignatureKey],\n                    verificationMethod: vm,\n                    domain: canonizeDocument.domain,\n                    types: canonizeDocument.types,\n                    message: canonizeDocument.message,\n                    primaryType: canonizeDocument.primaryType,\n                });\n                if (!verified) {\n                    throw Error(`Invalid signature`);\n                }\n                const purposeResult = (yield options.purpose.validate(canonizeProof, {\n                    verificationMethod: {\n                        id: vm,\n                    },\n                    documentLoader: options.documentLoader\n                }));\n                if (!purposeResult.valid) {\n                    throw Error(purposeResult);\n                }\n                const returnObj = {\n                    verified: true,\n                    results: [\n                        {\n                            proof,\n                            verified,\n                            verficationMethod: vm,\n                            purposeResult: { valid: purposeResult.valid },\n                        }\n                    ],\n                    statusResult: {\n                        canonicalizationHashVerified,\n                        signatureVerified: verified,\n                    }\n                };\n                if (proof.canonicalizationHash && canonicalizationHashVerified === false) {\n                    throw Error(`Invalid canonicalizationHash`);\n                }\n                return returnObj;\n            }\n            catch (error) {\n                return { verified: false,\n                    error: error };\n            }\n        });\n    }\n    canonize(input) {\n        // @ts-ignore\n        return JSON.parse(JSON.canonify(input));\n    }\n    canonizeProof(proof) {\n        proof = Object.assign({}, proof);\n        delete proof[this.proofSignatureKey];\n        return this.canonize(proof);\n    }\n    createVerifyData(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { proof, document } = options;\n            // JCS   RFC 8785\n            const canonizeProof = this.canonizeProof(proof);\n            const canonizeDocument = this.canonize(document);\n            return [canonizeProof, canonizeDocument];\n        });\n    }\n    getVerificationMethod(proof) {\n        let verificationMethod = proof.verificationMethod;\n        if (typeof verificationMethod === \"object\") {\n            verificationMethod = verificationMethod.id;\n        }\n        if (!verificationMethod) {\n            throw new Error('No \"verificationMethod\" found in proof.');\n        }\n        // TODO: resolve DID to check if DID belongs to the controller of the proof or the status of the DID\n        return verificationMethod;\n    }\n    sign(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { verifyData, proof } = options;\n            let proofValue;\n            //@ts-ignore\n            if (this.web3._provider !== undefined && this.web3._provider !== null) {\n                //@ts-ignore\n                const from = yield this.web3._provider.selectedAddress;\n                const params = [from, JSON.stringify(verifyData)];\n                const method = 'eth_signTypedData_v4';\n                //@ts-ignore\n                proofValue = yield this.getSignFromMetamask(method, params, this.web3._provider);\n            }\n            else if (!this.signer) {\n                throw new Error(\"A Web3 Signer API has not been specified\");\n            }\n            else {\n                {\n                    //@ts-ignore\n                    proofValue = yield (0, eth_sig_util_1.signTypedData_v4)(Buffer.from(this.wallet.privateKey.replace('0x', ''), 'hex'), { data: verifyData });\n                }\n            }\n            proof[this.proofSignatureKey] = proofValue;\n            if (options.embed) {\n                proof[\"eip712\"] = {\n                    domain: options.verifyData.domain,\n                    types: options.verifyData.types,\n                    primaryType: options.verifyData.primaryType,\n                };\n            }\n            return proof;\n        });\n    }\n    verifySignature(options) {\n        const recoveredAddress = (0, eth_sig_util_1.recoverTypedSignature_v4)({\n            //@ts-ignore\n            data: {\n                domain: options.domain,\n                message: options.message,\n                types: options.types,\n                primaryType: options.primaryType,\n            }, sig: options.signature\n        });\n        // TODO: add DID resolver (did-resolver)\n        if (recoveredAddress.toLowerCase() ===\n            this.extractAddressFromDID(options.verificationMethod).toLowerCase()) {\n            return true;\n        }\n        return false;\n    }\n    extractAddressFromDID(did) {\n        const didParts = did.split(\":\");\n        // last elem of array\n        let address = didParts[didParts.length - 1];\n        address = address.split(\"#\")[0];\n        return address.toLocaleLowerCase();\n    }\n    getSignFromMetamask(method, params, provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                provider.sendAsync({\n                    method,\n                    params,\n                    from: provider.selectedAddress,\n                }, (err, result) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(result.result);\n                    }\n                });\n            });\n        });\n    }\n}\nexports.default = EthereumEip712Signature2021;\n//mesh short coral rescue height arrive bitter improve lift mystery point invite\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}