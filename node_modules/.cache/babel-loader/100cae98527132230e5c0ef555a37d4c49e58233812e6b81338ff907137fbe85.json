{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AminoTypes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst amino_1 = require(\"@cosmjs/amino\");\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst utils_1 = require(\"@cosmjs/utils\");\nconst gov_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/gov\");\nconst any_1 = require(\"cosmjs-types/google/protobuf/any\");\nconst long_1 = __importDefault(require(\"long\"));\nfunction omitDefault(input) {\n  if (typeof input === \"string\") {\n    return input === \"\" ? undefined : input;\n  }\n  if (typeof input === \"number\") {\n    return input === 0 ? undefined : input;\n  }\n  if (long_1.default.isLong(input)) {\n    return input.isZero() ? undefined : input;\n  }\n  throw new Error(`Got unsupported type '${typeof input}'`);\n}\nfunction createDefaultTypes(prefix) {\n  return {\n    // bank\n    \"/cosmos.bank.v1beta1.MsgSend\": {\n      aminoType: \"cosmos-sdk/MsgSend\",\n      toAmino: ({\n        fromAddress,\n        toAddress,\n        amount\n      }) => ({\n        from_address: fromAddress,\n        to_address: toAddress,\n        amount: [...amount]\n      }),\n      fromAmino: ({\n        from_address,\n        to_address,\n        amount\n      }) => ({\n        fromAddress: from_address,\n        toAddress: to_address,\n        amount: [...amount]\n      })\n    },\n    \"/cosmos.bank.v1beta1.MsgMultiSend\": {\n      aminoType: \"cosmos-sdk/MsgMultiSend\",\n      toAmino: ({\n        inputs,\n        outputs\n      }) => ({\n        inputs: inputs.map(input => ({\n          address: input.address,\n          coins: [...input.coins]\n        })),\n        outputs: outputs.map(output => ({\n          address: output.address,\n          coins: [...output.coins]\n        }))\n      }),\n      fromAmino: ({\n        inputs,\n        outputs\n      }) => ({\n        inputs: inputs.map(input => ({\n          address: input.address,\n          coins: [...input.coins]\n        })),\n        outputs: outputs.map(output => ({\n          address: output.address,\n          coins: [...output.coins]\n        }))\n      })\n    },\n    // distribution\n    \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\": {\n      aminoType: \"cosmos-sdk/MsgFundCommunityPool\",\n      toAmino: ({\n        amount,\n        depositor\n      }) => ({\n        amount: [...amount],\n        depositor: depositor\n      }),\n      fromAmino: ({\n        amount,\n        depositor\n      }) => ({\n        amount: [...amount],\n        depositor: depositor\n      })\n    },\n    \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\": {\n      aminoType: \"cosmos-sdk/MsgModifyWithdrawAddress\",\n      toAmino: ({\n        delegatorAddress,\n        withdrawAddress\n      }) => ({\n        delegator_address: delegatorAddress,\n        withdraw_address: withdrawAddress\n      }),\n      fromAmino: ({\n        delegator_address,\n        withdraw_address\n      }) => ({\n        delegatorAddress: delegator_address,\n        withdrawAddress: withdraw_address\n      })\n    },\n    \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\": {\n      aminoType: \"cosmos-sdk/MsgWithdrawDelegationReward\",\n      toAmino: ({\n        delegatorAddress,\n        validatorAddress\n      }) => ({\n        delegator_address: delegatorAddress,\n        validator_address: validatorAddress\n      }),\n      fromAmino: ({\n        delegator_address,\n        validator_address\n      }) => ({\n        delegatorAddress: delegator_address,\n        validatorAddress: validator_address\n      })\n    },\n    \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\": {\n      aminoType: \"cosmos-sdk/MsgWithdrawValidatorCommission\",\n      toAmino: ({\n        validatorAddress\n      }) => ({\n        validator_address: validatorAddress\n      }),\n      fromAmino: ({\n        validator_address\n      }) => ({\n        validatorAddress: validator_address\n      })\n    },\n    // gov\n    \"/cosmos.gov.v1beta1.MsgDeposit\": {\n      aminoType: \"cosmos-sdk/MsgDeposit\",\n      toAmino: ({\n        amount,\n        depositor,\n        proposalId\n      }) => {\n        return {\n          amount,\n          depositor,\n          proposal_id: proposalId.toString()\n        };\n      },\n      fromAmino: ({\n        amount,\n        depositor,\n        proposal_id\n      }) => {\n        return {\n          amount: Array.from(amount),\n          depositor,\n          proposalId: long_1.default.fromString(proposal_id)\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgVote\": {\n      aminoType: \"cosmos-sdk/MsgVote\",\n      toAmino: ({\n        option,\n        proposalId,\n        voter\n      }) => {\n        return {\n          option: option,\n          proposal_id: proposalId.toString(),\n          voter: voter\n        };\n      },\n      fromAmino: ({\n        option,\n        proposal_id,\n        voter\n      }) => {\n        return {\n          option: (0, gov_1.voteOptionFromJSON)(option),\n          proposalId: long_1.default.fromString(proposal_id),\n          voter: voter\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n      aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n      toAmino: ({\n        initialDeposit,\n        proposer,\n        content\n      }) => {\n        (0, utils_1.assertDefinedAndNotNull)(content);\n        let proposal;\n        switch (content.typeUrl) {\n          case \"/cosmos.gov.v1beta1.TextProposal\":\n            {\n              const textProposal = gov_1.TextProposal.decode(content.value);\n              proposal = {\n                type: \"cosmos-sdk/TextProposal\",\n                value: {\n                  description: textProposal.description,\n                  title: textProposal.title\n                }\n              };\n              break;\n            }\n          default:\n            throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);\n        }\n        return {\n          initial_deposit: initialDeposit,\n          proposer: proposer,\n          content: proposal\n        };\n      },\n      fromAmino: ({\n        initial_deposit,\n        proposer,\n        content\n      }) => {\n        let any_content;\n        switch (content.type) {\n          case \"cosmos-sdk/TextProposal\":\n            {\n              const {\n                value\n              } = content;\n              (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));\n              const {\n                title,\n                description\n              } = value;\n              (0, utils_1.assert)(typeof title === \"string\");\n              (0, utils_1.assert)(typeof description === \"string\");\n              any_content = any_1.Any.fromPartial({\n                typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                  title: title,\n                  description: description\n                })).finish()\n              });\n              break;\n            }\n          default:\n            throw new Error(`Unsupported proposal type: '${content.type}'`);\n        }\n        return {\n          initialDeposit: Array.from(initial_deposit),\n          proposer: proposer,\n          content: any_content\n        };\n      }\n    },\n    // staking\n    \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n      aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n      toAmino: ({\n        delegatorAddress,\n        validatorSrcAddress,\n        validatorDstAddress,\n        amount\n      }) => {\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_src_address: validatorSrcAddress,\n          validator_dst_address: validatorDstAddress,\n          amount: amount\n        };\n      },\n      fromAmino: ({\n        delegator_address,\n        validator_src_address,\n        validator_dst_address,\n        amount\n      }) => ({\n        delegatorAddress: delegator_address,\n        validatorSrcAddress: validator_src_address,\n        validatorDstAddress: validator_dst_address,\n        amount: amount\n      })\n    },\n    \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n      aminoType: \"cosmos-sdk/MsgCreateValidator\",\n      toAmino: ({\n        description,\n        commission,\n        minSelfDelegation,\n        delegatorAddress,\n        validatorAddress,\n        pubkey,\n        value\n      }) => {\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        (0, utils_1.assertDefinedAndNotNull)(commission, \"missing commission\");\n        (0, utils_1.assertDefinedAndNotNull)(pubkey, \"missing pubkey\");\n        (0, utils_1.assertDefinedAndNotNull)(value, \"missing value\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            max_rate: commission.maxRate,\n            max_change_rate: commission.maxChangeRate\n          },\n          min_self_delegation: minSelfDelegation,\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          pubkey: (0, amino_1.encodeBech32Pubkey)({\n            type: \"tendermint/PubKeySecp256k1\",\n            value: (0, encoding_1.toBase64)(pubkey.value)\n          }, prefix),\n          value: value\n        };\n      },\n      fromAmino: ({\n        description,\n        commission,\n        min_self_delegation,\n        delegator_address,\n        validator_address,\n        pubkey,\n        value\n      }) => {\n        const decodedPubkey = (0, amino_1.decodeBech32Pubkey)(pubkey);\n        if (decodedPubkey.type !== \"tendermint/PubKeySecp256k1\") {\n          throw new Error(\"Only Secp256k1 public keys are supported\");\n        }\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            maxRate: commission.max_rate,\n            maxChangeRate: commission.max_change_rate\n          },\n          minSelfDelegation: min_self_delegation,\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          pubkey: {\n            typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n            value: (0, encoding_1.fromBase64)(decodedPubkey.value)\n          },\n          value: value\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgDelegate\": {\n      aminoType: \"cosmos-sdk/MsgDelegate\",\n      toAmino: ({\n        delegatorAddress,\n        validatorAddress,\n        amount\n      }) => {\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: ({\n        delegator_address,\n        validator_address,\n        amount\n      }) => ({\n        delegatorAddress: delegator_address,\n        validatorAddress: validator_address,\n        amount: amount\n      })\n    },\n    \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n      aminoType: \"cosmos-sdk/MsgEditValidator\",\n      toAmino: ({\n        description,\n        commissionRate,\n        minSelfDelegation,\n        validatorAddress\n      }) => {\n        (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission_rate: commissionRate,\n          min_self_delegation: minSelfDelegation,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: ({\n        description,\n        commission_rate,\n        min_self_delegation,\n        validator_address\n      }) => ({\n        description: {\n          moniker: description.moniker,\n          identity: description.identity,\n          website: description.website,\n          securityContact: description.security_contact,\n          details: description.details\n        },\n        commissionRate: commission_rate,\n        minSelfDelegation: min_self_delegation,\n        validatorAddress: validator_address\n      })\n    },\n    \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n      aminoType: \"cosmos-sdk/MsgUndelegate\",\n      toAmino: ({\n        delegatorAddress,\n        validatorAddress,\n        amount\n      }) => {\n        (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: ({\n        delegator_address,\n        validator_address,\n        amount\n      }) => ({\n        delegatorAddress: delegator_address,\n        validatorAddress: validator_address,\n        amount: amount\n      })\n    },\n    // ibc\n    \"/ibc.applications.transfer.v1.MsgTransfer\": {\n      aminoType: \"cosmos-sdk/MsgTransfer\",\n      toAmino: ({\n        sourcePort,\n        sourceChannel,\n        token,\n        sender,\n        receiver,\n        timeoutHeight,\n        timeoutTimestamp\n      }) => {\n        var _a, _b, _c;\n        return {\n          source_port: sourcePort,\n          source_channel: sourceChannel,\n          token: token,\n          sender: sender,\n          receiver: receiver,\n          timeout_height: timeoutHeight ? {\n            revision_height: (_a = omitDefault(timeoutHeight.revisionHeight)) === null || _a === void 0 ? void 0 : _a.toString(),\n            revision_number: (_b = omitDefault(timeoutHeight.revisionNumber)) === null || _b === void 0 ? void 0 : _b.toString()\n          } : {},\n          timeout_timestamp: (_c = omitDefault(timeoutTimestamp)) === null || _c === void 0 ? void 0 : _c.toString()\n        };\n      },\n      fromAmino: ({\n        source_port,\n        source_channel,\n        token,\n        sender,\n        receiver,\n        timeout_height,\n        timeout_timestamp\n      }) => ({\n        sourcePort: source_port,\n        sourceChannel: source_channel,\n        token: token,\n        sender: sender,\n        receiver: receiver,\n        timeoutHeight: timeout_height ? {\n          revisionHeight: long_1.default.fromString(timeout_height.revision_height || \"0\", true),\n          revisionNumber: long_1.default.fromString(timeout_height.revision_number || \"0\", true)\n        } : undefined,\n        timeoutTimestamp: long_1.default.fromString(timeout_timestamp || \"0\", true)\n      })\n    }\n  };\n}\n/**\n * A map from Stargate message types as used in the messages's `Any` type\n * to Amino types.\n */\nclass AminoTypes {\n  constructor({\n    additions = {},\n    prefix = \"cosmos\"\n  } = {}) {\n    const additionalAminoTypes = Object.values(additions);\n    const filteredDefaultTypes = Object.entries(createDefaultTypes(prefix)).reduce((acc, [key, value]) => additionalAminoTypes.find(({\n      aminoType\n    }) => value.aminoType === aminoType) ? acc : Object.assign(Object.assign({}, acc), {\n      [key]: value\n    }), {});\n    this.register = Object.assign(Object.assign({}, filteredDefaultTypes), additions);\n  }\n  toAmino({\n    typeUrl,\n    value\n  }) {\n    const converter = this.register[typeUrl];\n    if (!converter) {\n      throw new Error(`Type URL '${typeUrl}' does not exist in the Amino message type register. ` + \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" + \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n    }\n    return {\n      type: converter.aminoType,\n      value: converter.toAmino(value)\n    };\n  }\n  fromAmino({\n    type,\n    value\n  }) {\n    const result = Object.entries(this.register).find(([_typeUrl, {\n      aminoType\n    }]) => aminoType === type);\n    if (!result) {\n      throw new Error(`Amino type identifier '${type}' does not exist in the Amino message type register. ` + \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" + \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n    }\n    const [typeUrl, converter] = result;\n    return {\n      typeUrl: typeUrl,\n      value: converter.fromAmino(value)\n    };\n  }\n}\nexports.AminoTypes = AminoTypes;","map":{"version":3,"names":["amino_1","require","encoding_1","utils_1","gov_1","any_1","long_1","__importDefault","omitDefault","input","undefined","default","isLong","isZero","Error","createDefaultTypes","prefix","aminoType","toAmino","fromAddress","toAddress","amount","from_address","to_address","fromAmino","inputs","outputs","map","address","coins","output","depositor","delegatorAddress","withdrawAddress","delegator_address","withdraw_address","validatorAddress","validator_address","proposalId","proposal_id","toString","Array","from","fromString","option","voter","voteOptionFromJSON","initialDeposit","proposer","content","assertDefinedAndNotNull","proposal","typeUrl","textProposal","TextProposal","decode","value","type","description","title","initial_deposit","any_content","assert","isNonNullObject","Any","fromPartial","encode","finish","validatorSrcAddress","validatorDstAddress","validator_src_address","validator_dst_address","commission","minSelfDelegation","pubkey","moniker","identity","website","security_contact","securityContact","details","rate","max_rate","maxRate","max_change_rate","maxChangeRate","min_self_delegation","encodeBech32Pubkey","toBase64","decodedPubkey","decodeBech32Pubkey","fromBase64","commissionRate","commission_rate","sourcePort","sourceChannel","token","sender","receiver","timeoutHeight","timeoutTimestamp","source_port","source_channel","timeout_height","revision_height","_a","revisionHeight","revision_number","_b","revisionNumber","timeout_timestamp","_c","AminoTypes","constructor","additions","additionalAminoTypes","Object","values","filteredDefaultTypes","entries","reduce","acc","key","find","assign","register","converter","result","_typeUrl","exports"],"sources":["../src/aminotypes.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}