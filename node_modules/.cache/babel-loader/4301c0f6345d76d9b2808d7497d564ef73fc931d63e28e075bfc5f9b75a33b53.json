{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"cosmos.crypto.secp256k1\";\nconst basePubKey = {};\nexports.PubKey = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePubKey);\n    message.key = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePubKey);\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, basePubKey);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n};\nconst basePrivKey = {};\nexports.PrivKey = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePrivKey);\n    message.key = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePrivKey);\n    message.key = object.key !== undefined && object.key !== null ? bytesFromBase64(object.key) : new Uint8Array();\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, basePrivKey);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","exports","protobufPackage","basePubKey","PubKey","encode","message","writer","default","Writer","create","key","length","uint32","bytes","decode","input","reader","Reader","end","undefined","len","pos","Object","assign","Uint8Array","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","_a","basePrivKey","PrivKey","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","push","String","fromCharCode","join","util","Long","configure"],"sources":["../../../../src/cosmos/crypto/secp256k1/keys.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}