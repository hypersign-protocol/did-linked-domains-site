{"ast":null,"code":"import translations from \"./Translations.js\";\nexport default {\n  filters: {\n    translate: function (value, locale) {\n      return translations[locale][value];\n    }\n  },\n  props: {\n    locale: {\n      type: String,\n      default: \"en\"\n    },\n    topButtons: {\n      type: Boolean,\n      default: false\n    },\n    steps: {\n      type: Array,\n      default: function () {\n        return [{\n          icon: \"mail\",\n          name: \"first\",\n          title: \"Sample title 1\",\n          subtitle: \"Subtitle sample\"\n        }, {\n          icon: \"report_problem\",\n          name: \"second\",\n          title: \"Sample title 2\",\n          subtitle: \"Subtitle sample\"\n        }];\n      }\n    },\n    keepAlive: {\n      type: Boolean,\n      default: true\n    },\n    reset: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      currentStep: {},\n      previousStep: {},\n      nextButton: {},\n      canContinue: false,\n      finalStep: false,\n      keepAliveData: this.keepAlive\n    };\n  },\n  computed: {\n    enterAnimation() {\n      if (this.currentStep.index < this.previousStep.index) {\n        return \"animated quick fadeInLeft\";\n      } else {\n        return \"animated quick fadeInRight\";\n      }\n    },\n    leaveAnimation() {\n      if (this.currentStep.index > this.previousStep.index) {\n        return \"animated quick fadeOutLeft\";\n      } else {\n        return \"animated quick fadeOutRight\";\n      }\n    }\n  },\n  methods: {\n    isStepActive(index, step) {\n      if (this.currentStep.index === index) {\n        return \"activated\";\n      } else {\n        return \"deactivated\";\n      }\n    },\n    activateStep(index, back = false) {\n      if (this.steps[index]) {\n        this.previousStep = this.currentStep;\n        this.currentStep = {\n          name: this.steps[index].name,\n          index: index\n        };\n        if (index + 1 === this.steps.length) {\n          this.finalStep = true;\n        } else {\n          this.finalStep = false;\n        }\n        if (!back) {\n          this.$emit(\"completed-step\", this.previousStep);\n        }\n      }\n      this.$emit(\"active-step\", this.currentStep);\n    },\n    nextStepAction() {\n      this.nextButton[this.currentStep.name] = true;\n      if (this.canContinue) {\n        if (this.finalStep) {\n          this.$emit(\"stepper-finished\", this.currentStep);\n        }\n        let currentIndex = this.currentStep.index + 1;\n        this.activateStep(currentIndex);\n      }\n      this.canContinue = false;\n      this.$forceUpdate();\n    },\n    nextStep() {\n      if (!this.$listeners || !this.$listeners['before-next-step']) {\n        this.nextStepAction();\n      }\n      this.canContinue = false;\n      this.$emit(\"before-next-step\", {\n        currentStep: this.currentStep\n      }, (next = true) => {\n        this.canContinue = true;\n        if (next) {\n          this.nextStepAction();\n        }\n      });\n    },\n    backStep() {\n      this.$emit(\"clicking-back\");\n      let currentIndex = this.currentStep.index - 1;\n      if (currentIndex >= 0) {\n        this.activateStep(currentIndex, true);\n      }\n    },\n    proceed(payload) {\n      this.canContinue = payload.value;\n    },\n    changeNextBtnValue(payload) {\n      this.nextButton[this.currentStep.name] = payload.nextBtnValue;\n      this.$forceUpdate();\n    },\n    init() {\n      // Initiate stepper\n      this.activateStep(0);\n      this.steps.forEach(step => {\n        this.nextButton[step.name] = false;\n      });\n    }\n  },\n  watch: {\n    reset(val) {\n      if (!val) {\n        return;\n      }\n      this.keepAliveData = false;\n      this.init();\n      this.previousStep = {};\n      this.$nextTick(() => {\n        this.keepAliveData = this.keepAlive;\n        this.$emit('reset', true);\n      });\n    }\n  },\n  created() {\n    this.init();\n  }\n};","map":{"version":3,"names":["translations","filters","translate","value","locale","props","type","String","default","topButtons","Boolean","steps","Array","icon","name","title","subtitle","keepAlive","reset","data","currentStep","previousStep","nextButton","canContinue","finalStep","keepAliveData","computed","enterAnimation","index","leaveAnimation","methods","isStepActive","step","activateStep","back","length","$emit","nextStepAction","currentIndex","$forceUpdate","nextStep","$listeners","next","backStep","proceed","payload","changeNextBtnValue","nextBtnValue","init","forEach","watch","val","$nextTick","created"],"sources":["node_modules/vue-stepper/src/HorizontalStepper.vue"],"sourcesContent":["<template>\n    <div class=\"stepper-box\">\n        <div class=\"top\">\n            <div class=\"divider-line\" :style=\"{width: `${(100/(steps.length) * (steps.length - 1)) - 10}%`}\"></div>\n            <div class=\"steps-wrapper\">\n                <template v-if=\"topButtons\">\n                    <div v-if=\"currentStep.index > 0\" class=\"stepper-button-top previous\" @click=\"backStep()\">\n                        <i class=\"material-icons\">keyboard_arrow_left</i>\n                    </div>\n                </template>\n                <template v-for=\"(step, index) in steps\">\n                    <div :class=\"['step', isStepActive(index, step)]\" :key=\"index\" :style=\"{width: `${100 / steps.length}%`}\">\n                        <div class=\"circle\">\n                            <i class=\"material-icons md-18\">\n                                {{ (step.completed) ? 'done' : step.icon }}\n                            </i>\n                        </div>\n                        <div class=\"step-title\">\n                            <h4>{{step.title}}</h4>\n                            <h5 class=\"step-subtitle\">{{step.subtitle}}</h5>\n                        </div>\n                    </div>\n                </template>\n                <div v-if=\"topButtons\" :class=\"['stepper-button-top next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n                    <i class=\"material-icons\">keyboard_arrow_right</i>\n                </div>\n            </div>\n        </div>\n        <div class=\"content\">\n            <transition :enter-active-class=\"enterAnimation\" :leave-active-class=\"leaveAnimation\" mode=\"out-in\">\n                <!--If keep alive-->\n                <keep-alive v-if=\"keepAliveData\">\n                    <component :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n                </keep-alive>\n                <!--If not show component and destroy it in each step change-->\n                <component v-else :is=\"steps[currentStep.index].component\" :clickedNext=\"nextButton[currentStep.name]\" @can-continue=\"proceed\" @change-next=\"changeNextBtnValue\" :current-step=\"currentStep\"></component>\n            </transition>\n        </div>\n        <div :class=\"['bottom', (currentStep.index > 0) ? '' : 'only-next']\">\n            <div v-if=\"currentStep.index > 0\" class=\"stepper-button previous\" @click=\"backStep()\">\n                <i class=\"material-icons\">keyboard_arrow_left</i>\n                <span>{{ 'back' | translate(locale) }}</span>\n            </div>\n            <div :class=\"['stepper-button next', !canContinue ? 'deactivated' : '']\" @click=\"nextStep()\">\n                <span>{{ (finalStep) ? 'finish' : 'next' | translate(locale) }}</span>\n                <i class=\"material-icons\">keyboard_arrow_right</i>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport translations from \"./Translations.js\";\n\nexport default {\n  filters: {\n    translate: function(value, locale) {\n      return translations[locale][value];\n    }\n  },\n\n  props: {\n    locale: {\n      type: String,\n      default: \"en\"\n    },\n    topButtons: {\n      type: Boolean,\n      default: false\n    },\n    steps: {\n      type: Array,\n      default: function() {\n        return [\n          {\n            icon: \"mail\",\n            name: \"first\",\n            title: \"Sample title 1\",\n            subtitle: \"Subtitle sample\"\n          },\n          {\n            icon: \"report_problem\",\n            name: \"second\",\n            title: \"Sample title 2\",\n            subtitle: \"Subtitle sample\"\n          }\n        ];\n      }\n    },\n    keepAlive: {\n      type: Boolean,\n      default: true\n    },\n    reset: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      currentStep: {},\n      previousStep: {},\n      nextButton: {},\n      canContinue: false,\n      finalStep: false,\n      keepAliveData: this.keepAlive\n    };\n  },\n\n  computed: {\n    enterAnimation() {\n      if (this.currentStep.index < this.previousStep.index) {\n        return \"animated quick fadeInLeft\";\n      } else {\n        return \"animated quick fadeInRight\";\n      }\n    },\n    leaveAnimation() {\n      if (this.currentStep.index > this.previousStep.index) {\n        return \"animated quick fadeOutLeft\";\n      } else {\n        return \"animated quick fadeOutRight\";\n      }\n    }\n  },\n\n  methods: {\n    isStepActive(index, step) {\n      if (this.currentStep.index === index) {\n        return \"activated\";\n      } else {\n        return \"deactivated\";\n      }\n    },\n\n    activateStep(index, back = false) {\n      if (this.steps[index]) {\n        this.previousStep = this.currentStep;\n        this.currentStep = {\n          name: this.steps[index].name,\n          index: index\n        };\n\n        if (index + 1 === this.steps.length) {\n          this.finalStep = true;\n        } else {\n          this.finalStep = false;\n        }\n\n        if (!back) {\n          this.$emit(\"completed-step\", this.previousStep);\n        }\n      }\n      this.$emit(\"active-step\", this.currentStep);\n    },\n\n    nextStepAction() {\n      this.nextButton[this.currentStep.name] = true;\n      if (this.canContinue) {\n        if (this.finalStep) {\n          this.$emit(\"stepper-finished\", this.currentStep);\n        }\n        let currentIndex = this.currentStep.index + 1;\n\n        this.activateStep(currentIndex);\n      }\n      this.canContinue = false;\n      this.$forceUpdate();\n    },\n\n    nextStep () {\n\n      if (!this.$listeners || !this.$listeners['before-next-step']) {\n        this.nextStepAction()\n      }\n\n      this.canContinue = false;\n\n      this.$emit(\"before-next-step\", { currentStep: this.currentStep }, (next = true) => {\n        this.canContinue = true;\n        if (next) {\n          this.nextStepAction()\n        }\n      });\n    },\n    backStep() {\n      this.$emit(\"clicking-back\");\n      let currentIndex = this.currentStep.index - 1;\n      if (currentIndex >= 0) {\n        this.activateStep(currentIndex, true);\n      }\n    },\n\n    proceed(payload) {\n      this.canContinue = payload.value;\n    },\n\n    changeNextBtnValue(payload) {\n      this.nextButton[this.currentStep.name] = payload.nextBtnValue;\n      this.$forceUpdate();\n    },\n\n    init() {\n      // Initiate stepper\n      this.activateStep(0);\n      this.steps.forEach(step => {\n        this.nextButton[step.name] = false;\n      });\n    }\n  },\n\n  watch: {\n    reset(val) {\n      if(!val) {\n        return;\n      }\n\n      this.keepAliveData = false;\n\n      this.init();\n      this.previousStep = {};\n\n      this.$nextTick(() => {\n        this.keepAliveData = this.keepAlive;\n        this.$emit('reset', true);\n      });\n\n    }\n  },\n\n  created() {\n    this.init();\n  }\n};\n</script>\n\n<style src=\"./HorizontalStepper.scss\" scoped lang=\"scss\">\n\n</style>\n<style scoped>\n/* fallback */\n@font-face {\n  font-family: \"Material Icons\";\n  font-style: normal;\n  font-weight: 400;\n  src: local(\"Material Icons\"), local(\"MaterialIcons-Regular\"),\n    url(https://fonts.gstatic.com/s/materialicons/v17/2fcrYFNaTjcS6g4U3t-Y5ZjZjT5FdEJ140U2DJYC3mY.woff2)\n      format(\"woff2\");\n}\n\n.material-icons {\n  font-family: \"Material Icons\";\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: \"liga\";\n  -webkit-font-smoothing: antialiased;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}