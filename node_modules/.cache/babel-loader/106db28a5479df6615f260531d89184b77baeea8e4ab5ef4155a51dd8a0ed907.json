{"ast":null,"code":"const {\n  DirectSecp256k1HdWallet\n} = require(\"@cosmjs/proto-signing\");\nconst {\n  Bip39,\n  Slip10,\n  Slip10RawIndex,\n  Slip10Curve\n} = require('@cosmjs/crypto');\n\n// const mnemonic = \"retreat seek south invite fall eager engage endorse inquiry sample salad evidence express actor hidden fence anchor crowd two now convince convince park bag\"\n// const mnemonic = \"napkin delay purchase easily camp mimic share wait stereo reflect allow soccer believe exhibit laptop upset tired talent transfer talk surface solution omit crack\"\n\nfunction makeCosmoshubPath(a) {\n  return [Slip10RawIndex.hardened(44), Slip10RawIndex.hardened(118), Slip10RawIndex.hardened(0), Slip10RawIndex.normal(0), Slip10RawIndex.normal(a)];\n}\nconst createWallet = async (mnemonic, id = 0) => {\n  if (!mnemonic) {\n    return await DirectSecp256k1HdWallet.generate(24, {\n      prefix: \"hid\",\n      hdPaths: [makeCosmoshubPath(id)]\n    });\n  } else {\n    return await DirectSecp256k1HdWallet.fromMnemonic(mnemonic, {\n      prefix: \"hid\",\n      hdPaths: [makeCosmoshubPath(id)]\n    });\n  }\n};\nfunction makeSSIWalletPath(minHardIndex) {\n  return [Slip10RawIndex.hardened(118), Slip10RawIndex.hardened(128), Slip10RawIndex.hardened(0), Slip10RawIndex.hardened(minHardIndex)];\n}\nasync function generateMnemonicToHDSeed(mnemonic, minHardIndex = 0) {\n  minHardIndex = minHardIndex + 1;\n  const seed = Bip39.decode(mnemonic);\n  const slipPathKeys = Slip10.derivePath(Slip10Curve.Ed25519, seed, makeSSIWalletPath(minHardIndex));\n  const seedHD = slipPathKeys.privkey;\n  return seedHD;\n}\nmodule.exports = {\n  createWallet,\n  generateMnemonicToHDSeed\n};","map":{"version":3,"names":["DirectSecp256k1HdWallet","require","Bip39","Slip10","Slip10RawIndex","Slip10Curve","makeCosmoshubPath","a","hardened","normal","createWallet","mnemonic","id","generate","prefix","hdPaths","fromMnemonic","makeSSIWalletPath","minHardIndex","generateMnemonicToHDSeed","seed","decode","slipPathKeys","derivePath","Ed25519","seedHD","privkey","module","exports"],"sources":["/home/pratap/domain-linkege/src/scripts/wallet.js"],"sourcesContent":["const { DirectSecp256k1HdWallet } = require(\"@cosmjs/proto-signing\");\nconst {   Bip39, Slip10, Slip10RawIndex, Slip10Curve } = require('@cosmjs/crypto')\n\n// const mnemonic = \"retreat seek south invite fall eager engage endorse inquiry sample salad evidence express actor hidden fence anchor crowd two now convince convince park bag\"\n// const mnemonic = \"napkin delay purchase easily camp mimic share wait stereo reflect allow soccer believe exhibit laptop upset tired talent transfer talk surface solution omit crack\"\n\nfunction makeCosmoshubPath(a) {\n    return [\n        Slip10RawIndex.hardened(44),\n        Slip10RawIndex.hardened(118),\n        Slip10RawIndex.hardened(0),\n        Slip10RawIndex.normal(0),\n        Slip10RawIndex.normal(a),\n\n    ];\n}\nconst createWallet = async (mnemonic, id=0) => {\n    if (!mnemonic) {\n        return await DirectSecp256k1HdWallet.generate(24,  {\n            prefix: \"hid\",\n            hdPaths: [makeCosmoshubPath(id)],\n        });\n    } else {\n        return await DirectSecp256k1HdWallet.fromMnemonic(mnemonic,  {\n            prefix: \"hid\",\n            hdPaths: [makeCosmoshubPath(id)],\n        });\n    }\n}\nfunction makeSSIWalletPath(minHardIndex) {\n    return [\n       \n        Slip10RawIndex.hardened(118),\n        Slip10RawIndex.hardened(128),\n        Slip10RawIndex.hardened(0),\n        Slip10RawIndex.hardened(minHardIndex),\n\n    ];\n}\n\n async function generateMnemonicToHDSeed(mnemonic, minHardIndex = 0) {\n    minHardIndex=minHardIndex+1;\n    const seed = Bip39.decode(mnemonic)\n    const slipPathKeys = Slip10.derivePath(Slip10Curve.Ed25519, seed, makeSSIWalletPath(minHardIndex))\n    const seedHD = slipPathKeys.privkey\n    return seedHD;\n}\n\nmodule.exports = {\n    createWallet,\n    generateMnemonicToHDSeed\n}"],"mappings":"AAAA,MAAM;EAAEA;AAAwB,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACpE,MAAM;EAAIC,KAAK;EAAEC,MAAM;EAAEC,cAAc;EAAEC;AAAY,CAAC,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;;AAElF;AACA;;AAEA,SAASK,iBAAiBA,CAACC,CAAC,EAAE;EAC1B,OAAO,CACHH,cAAc,CAACI,QAAQ,CAAC,EAAE,CAAC,EAC3BJ,cAAc,CAACI,QAAQ,CAAC,GAAG,CAAC,EAC5BJ,cAAc,CAACI,QAAQ,CAAC,CAAC,CAAC,EAC1BJ,cAAc,CAACK,MAAM,CAAC,CAAC,CAAC,EACxBL,cAAc,CAACK,MAAM,CAACF,CAAC,CAAC,CAE3B;AACL;AACA,MAAMG,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,EAAE,GAAC,CAAC,KAAK;EAC3C,IAAI,CAACD,QAAQ,EAAE;IACX,OAAO,MAAMX,uBAAuB,CAACa,QAAQ,CAAC,EAAE,EAAG;MAC/CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE,CAACT,iBAAiB,CAACM,EAAE,CAAC;IACnC,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAO,MAAMZ,uBAAuB,CAACgB,YAAY,CAACL,QAAQ,EAAG;MACzDG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE,CAACT,iBAAiB,CAACM,EAAE,CAAC;IACnC,CAAC,CAAC;EACN;AACJ,CAAC;AACD,SAASK,iBAAiBA,CAACC,YAAY,EAAE;EACrC,OAAO,CAEHd,cAAc,CAACI,QAAQ,CAAC,GAAG,CAAC,EAC5BJ,cAAc,CAACI,QAAQ,CAAC,GAAG,CAAC,EAC5BJ,cAAc,CAACI,QAAQ,CAAC,CAAC,CAAC,EAC1BJ,cAAc,CAACI,QAAQ,CAACU,YAAY,CAAC,CAExC;AACL;AAEC,eAAeC,wBAAwBA,CAACR,QAAQ,EAAEO,YAAY,GAAG,CAAC,EAAE;EACjEA,YAAY,GAACA,YAAY,GAAC,CAAC;EAC3B,MAAME,IAAI,GAAGlB,KAAK,CAACmB,MAAM,CAACV,QAAQ,CAAC;EACnC,MAAMW,YAAY,GAAGnB,MAAM,CAACoB,UAAU,CAAClB,WAAW,CAACmB,OAAO,EAAEJ,IAAI,EAAEH,iBAAiB,CAACC,YAAY,CAAC,CAAC;EAClG,MAAMO,MAAM,GAAGH,YAAY,CAACI,OAAO;EACnC,OAAOD,MAAM;AACjB;AAEAE,MAAM,CAACC,OAAO,GAAG;EACblB,YAAY;EACZS;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}