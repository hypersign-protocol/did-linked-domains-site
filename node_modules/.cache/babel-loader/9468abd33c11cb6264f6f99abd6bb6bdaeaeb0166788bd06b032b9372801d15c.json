{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PublicKey = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nexports.protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexports.PublicKey = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.ed25519 !== undefined) {\n      writer.uint32(10).bytes(message.ed25519);\n    }\n    if (message.secp256k1 !== undefined) {\n      writer.uint32(18).bytes(message.secp256k1);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePublicKey);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.ed25519 = reader.bytes();\n          break;\n        case 2:\n          message.secp256k1 = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, basePublicKey);\n    message.ed25519 = object.ed25519 !== undefined && object.ed25519 !== null ? bytesFromBase64(object.ed25519) : undefined;\n    message.secp256k1 = object.secp256k1 !== undefined && object.secp256k1 !== null ? bytesFromBase64(object.secp256k1) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n    message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, basePublicKey);\n    message.ed25519 = (_a = object.ed25519) !== null && _a !== void 0 ? _a : undefined;\n    message.secp256k1 = (_b = object.secp256k1) !== null && _b !== void 0 ? _b : undefined;\n    return message;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","exports","protobufPackage","basePublicKey","PublicKey","encode","message","writer","default","Writer","create","ed25519","undefined","uint32","bytes","secp256k1","decode","input","length","reader","Reader","end","len","pos","Object","assign","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","_a","_b","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","Uint8Array","i","charCodeAt","btoa","byte","push","String","fromCharCode","join","util","Long","configure"],"sources":["../../../src/tendermint/crypto/keys.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}