{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateFieldInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldSet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\").default;\nvar _classPrivateFieldGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\").default;\nlet _Symbol$for;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Signature = void 0;\nconst index_js_1 = require(\"../constants/index.js\");\nconst index_js_2 = require(\"../utils/index.js\");\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\nconst _guard = {};\nfunction toUint256(value) {\n  return (0, index_js_2.zeroPadValue)((0, index_js_2.toBeArray)(value), 32);\n}\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nvar _r2 = /*#__PURE__*/new WeakMap();\nvar _s = /*#__PURE__*/new WeakMap();\nvar _v2 = /*#__PURE__*/new WeakMap();\nvar _networkV = /*#__PURE__*/new WeakMap();\n_Symbol$for = Symbol.for('nodejs.util.inspect.custom');\nclass Signature {\n  /**\n   *  The ``r`` value for a signautre.\n   *\n   *  This represents the ``x`` coordinate of a \"reference\" or\n   *  challenge point, from which the ``y`` can be computed.\n   */\n  get r() {\n    return _classPrivateFieldGet(this, _r2);\n  }\n  set r(value) {\n    (0, index_js_2.assertArgument)((0, index_js_2.dataLength)(value) === 32, \"invalid r\", \"value\", value);\n    _classPrivateFieldSet(this, _r2, (0, index_js_2.hexlify)(value));\n  }\n  /**\n   *  The ``s`` value for a signature.\n   */\n  get s() {\n    return _classPrivateFieldGet(this, _s);\n  }\n  set s(_value) {\n    (0, index_js_2.assertArgument)((0, index_js_2.dataLength)(_value) === 32, \"invalid s\", \"value\", _value);\n    const value = (0, index_js_2.hexlify)(_value);\n    (0, index_js_2.assertArgument)(parseInt(value.substring(0, 3)) < 8, \"non-canonical s\", \"value\", value);\n    _classPrivateFieldSet(this, _s, value);\n  }\n  /**\n   *  The ``v`` value for a signature.\n   *\n   *  Since a given ``x`` value for ``r`` has two possible values for\n   *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n   *  values to use.\n   *\n   *  It is normalized to the values ``27`` or ``28`` for legacy\n   *  purposes.\n   */\n  get v() {\n    return _classPrivateFieldGet(this, _v2);\n  }\n  set v(value) {\n    const v = (0, index_js_2.getNumber)(value, \"value\");\n    (0, index_js_2.assertArgument)(v === 27 || v === 28, \"invalid v\", \"v\", value);\n    _classPrivateFieldSet(this, _v2, v);\n  }\n  /**\n   *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n   *  transactions, this value is ``null``.\n   */\n  get networkV() {\n    return _classPrivateFieldGet(this, _networkV);\n  }\n  /**\n   *  The chain ID for EIP-155 legacy transactions. For non-legacy\n   *  transactions, this value is ``null``.\n   */\n  get legacyChainId() {\n    const v = this.networkV;\n    if (v == null) {\n      return null;\n    }\n    return Signature.getChainId(v);\n  }\n  /**\n   *  The ``yParity`` for the signature.\n   *\n   *  See ``v`` for more details on how this value is used.\n   */\n  get yParity() {\n    return this.v === 27 ? 0 : 1;\n  }\n  /**\n   *  The [[link-eip-2098]] compact representation of the ``yParity``\n   *  and ``s`` compacted into a single ``bytes32``.\n   */\n  get yParityAndS() {\n    // The EIP-2098 compact representation\n    const yParityAndS = (0, index_js_2.getBytes)(this.s);\n    if (this.yParity) {\n      yParityAndS[0] |= 0x80;\n    }\n    return (0, index_js_2.hexlify)(yParityAndS);\n  }\n  /**\n   *  The [[link-eip-2098]] compact representation.\n   */\n  get compactSerialized() {\n    return (0, index_js_2.concat)([this.r, this.yParityAndS]);\n  }\n  /**\n   *  The serialized representation.\n   */\n  get serialized() {\n    return (0, index_js_2.concat)([this.r, this.s, this.yParity ? \"0x1c\" : \"0x1b\"]);\n  }\n  /**\n   *  @private\n   */\n  constructor(guard, r, s, v) {\n    _classPrivateFieldInitSpec(this, _r2, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _s, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _v2, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _networkV, {\n      writable: true,\n      value: void 0\n    });\n    (0, index_js_2.assertPrivate)(guard, _guard, \"Signature\");\n    _classPrivateFieldSet(this, _r2, r);\n    _classPrivateFieldSet(this, _s, s);\n    _classPrivateFieldSet(this, _v2, v);\n    _classPrivateFieldSet(this, _networkV, null);\n  }\n  [_Symbol$for]() {\n    return `Signature { r: \"${this.r}\", s: \"${this.s}\", yParity: ${this.yParity}, networkV: ${this.networkV} }`;\n  }\n  /**\n   *  Returns a new identical [[Signature]].\n   */\n  clone() {\n    const clone = new Signature(_guard, this.r, this.s, this.v);\n    if (this.networkV) {\n      _classPrivateFieldSet(clone, _networkV, this.networkV);\n    }\n    return clone;\n  }\n  /**\n   *  Returns a representation that is compatible with ``JSON.stringify``.\n   */\n  toJSON() {\n    const networkV = this.networkV;\n    return {\n      _type: \"signature\",\n      networkV: networkV != null ? networkV.toString() : null,\n      r: this.r,\n      s: this.s,\n      v: this.v\n    };\n  }\n  /**\n   *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n   *\n   *  @example:\n   *    Signature.getChainId(45)\n   *    //_result:\n   *\n   *    Signature.getChainId(46)\n   *    //_result:\n   */\n  static getChainId(v) {\n    const bv = (0, index_js_2.getBigInt)(v, \"v\");\n    // The v is not an EIP-155 v, so it is the unspecified chain ID\n    if (bv == BN_27 || bv == BN_28) {\n      return BN_0;\n    }\n    // Bad value for an EIP-155 v\n    (0, index_js_2.assertArgument)(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n    return (bv - BN_35) / BN_2;\n  }\n  /**\n   *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n   *\n   *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n   *  property to include the chain ID.\n   *\n   *  @example:\n   *    Signature.getChainIdV(5, 27)\n   *    //_result:\n   *\n   *    Signature.getChainIdV(5, 28)\n   *    //_result:\n   *\n   */\n  static getChainIdV(chainId, v) {\n    return (0, index_js_2.getBigInt)(chainId) * BN_2 + BigInt(35 + v - 27);\n  }\n  /**\n   *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n   *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n   *\n   *  @example:\n   *    // The values 0 and 1 imply v is actually yParity\n   *    Signature.getNormalizedV(0)\n   *    //_result:\n   *\n   *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n   *    Signature.getNormalizedV(27)\n   *    //_result:\n   *\n   *    // Legacy EIP-155 transaction (i.e. >= 35)\n   *    Signature.getNormalizedV(46)\n   *    //_result:\n   *\n   *    // Invalid values throw\n   *    Signature.getNormalizedV(5)\n   *    //_error:\n   */\n  static getNormalizedV(v) {\n    const bv = (0, index_js_2.getBigInt)(v);\n    if (bv === BN_0 || bv === BN_27) {\n      return 27;\n    }\n    if (bv === BN_1 || bv === BN_28) {\n      return 28;\n    }\n    (0, index_js_2.assertArgument)(bv >= BN_35, \"invalid v\", \"v\", v);\n    // Otherwise, EIP-155 v means odd is 27 and even is 28\n    return bv & BN_1 ? 27 : 28;\n  }\n  /**\n   *  Creates a new [[Signature]].\n   *\n   *  If no %%sig%% is provided, a new [[Signature]] is created\n   *  with default values.\n   *\n   *  If %%sig%% is a string, it is parsed.\n   */\n  static from(sig) {\n    function assertError(check, message) {\n      (0, index_js_2.assertArgument)(check, message, \"signature\", sig);\n    }\n    ;\n    if (sig == null) {\n      return new Signature(_guard, index_js_1.ZeroHash, index_js_1.ZeroHash, 27);\n    }\n    if (typeof sig === \"string\") {\n      const bytes = (0, index_js_2.getBytes)(sig, \"signature\");\n      if (bytes.length === 64) {\n        const r = (0, index_js_2.hexlify)(bytes.slice(0, 32));\n        const s = bytes.slice(32, 64);\n        const v = s[0] & 0x80 ? 28 : 27;\n        s[0] &= 0x7f;\n        return new Signature(_guard, r, (0, index_js_2.hexlify)(s), v);\n      }\n      if (bytes.length === 65) {\n        const r = (0, index_js_2.hexlify)(bytes.slice(0, 32));\n        const s = bytes.slice(32, 64);\n        assertError((s[0] & 0x80) === 0, \"non-canonical s\");\n        const v = Signature.getNormalizedV(bytes[64]);\n        return new Signature(_guard, r, (0, index_js_2.hexlify)(s), v);\n      }\n      assertError(false, \"invalid raw signature length\");\n    }\n    if (sig instanceof Signature) {\n      return sig.clone();\n    }\n    // Get r\n    const _r = sig.r;\n    assertError(_r != null, \"missing r\");\n    const r = toUint256(_r);\n    // Get s; by any means necessary (we check consistency below)\n    const s = function (s, yParityAndS) {\n      if (s != null) {\n        return toUint256(s);\n      }\n      if (yParityAndS != null) {\n        assertError((0, index_js_2.isHexString)(yParityAndS, 32), \"invalid yParityAndS\");\n        const bytes = (0, index_js_2.getBytes)(yParityAndS);\n        bytes[0] &= 0x7f;\n        return (0, index_js_2.hexlify)(bytes);\n      }\n      assertError(false, \"missing s\");\n    }(sig.s, sig.yParityAndS);\n    assertError(((0, index_js_2.getBytes)(s)[0] & 0x80) == 0, \"non-canonical s\");\n    // Get v; by any means necessary (we check consistency below)\n    const {\n      networkV,\n      v\n    } = function (_v, yParityAndS, yParity) {\n      if (_v != null) {\n        const v = (0, index_js_2.getBigInt)(_v);\n        return {\n          networkV: v >= BN_35 ? v : undefined,\n          v: Signature.getNormalizedV(v)\n        };\n      }\n      if (yParityAndS != null) {\n        assertError((0, index_js_2.isHexString)(yParityAndS, 32), \"invalid yParityAndS\");\n        return {\n          v: (0, index_js_2.getBytes)(yParityAndS)[0] & 0x80 ? 28 : 27\n        };\n      }\n      if (yParity != null) {\n        switch ((0, index_js_2.getNumber)(yParity, \"sig.yParity\")) {\n          case 0:\n            return {\n              v: 27\n            };\n          case 1:\n            return {\n              v: 28\n            };\n        }\n        assertError(false, \"invalid yParity\");\n      }\n      assertError(false, \"missing v\");\n    }(sig.v, sig.yParityAndS, sig.yParity);\n    const result = new Signature(_guard, r, s, v);\n    if (networkV) {\n      _classPrivateFieldSet(result, _networkV, networkV);\n    }\n    // If multiple of v, yParity, yParityAndS we given, check they match\n    assertError(sig.yParity == null || (0, index_js_2.getNumber)(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n    assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n    return result;\n  }\n}\nexports.Signature = Signature;","map":{"version":3,"names":["index_js_1","require","index_js_2","BN_0","BigInt","BN_1","BN_2","BN_27","BN_28","BN_35","_guard","toUint256","value","zeroPadValue","toBeArray","_r2","WeakMap","_s","_v2","_networkV","_Symbol$for","Symbol","for","Signature","r","_classPrivateFieldGet","assertArgument","dataLength","_classPrivateFieldSet","hexlify","s","_value","parseInt","substring","v","getNumber","networkV","legacyChainId","getChainId","yParity","yParityAndS","getBytes","compactSerialized","concat","serialized","constructor","guard","_classPrivateFieldInitSpec","writable","assertPrivate","clone","toJSON","_type","toString","bv","getBigInt","getChainIdV","chainId","getNormalizedV","from","sig","assertError","check","message","ZeroHash","bytes","length","slice","_r","isHexString","_v","undefined","result","exports"],"sources":["../../src.ts/crypto/signature.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AACA,MAAAA,UAAA,GAAAC,OAAA;AACA,MAAAC,UAAA,GAAAD,OAAA;AAWA;AACA,MAAME,IAAI,GAAGC,MAAM,CAAC,CAAC,CAAC;AACtB,MAAMC,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;AACtB,MAAME,IAAI,GAAGF,MAAM,CAAC,CAAC,CAAC;AACtB,MAAMG,KAAK,GAAGH,MAAM,CAAC,EAAE,CAAC;AACxB,MAAMI,KAAK,GAAGJ,MAAM,CAAC,EAAE,CAAC;AACxB,MAAMK,KAAK,GAAGL,MAAM,CAAC,EAAE,CAAC;AAGxB,MAAMM,MAAM,GAAG,EAAG;AA6BlB,SAASC,SAASA,CAACC,KAAmB;EAClC,OAAO,IAAAV,UAAA,CAAAW,YAAY,EAAC,IAAAX,UAAA,CAAAY,SAAS,EAACF,KAAK,CAAC,EAAE,EAAE,CAAC;AAC7C;AAEA;;;;;;AAAA,IAAAG,GAAA,oBAAAC,OAAA;AAAA,IAAAC,EAAA,oBAAAD,OAAA;AAAA,IAAAE,GAAA,oBAAAF,OAAA;AAAA,IAAAG,SAAA,oBAAAH,OAAA;AAAAI,WAAA,GAiHKC,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAC;AA3G7C,MAAaC,SAAS;EAMlB;;;;;;EAMA,IAAIC,CAACA,CAAA;IAAa,OAAAC,qBAAA,CAAO,IAAI,EAAAV,GAAA;EAAK;EAClC,IAAIS,CAACA,CAACZ,KAAgB;IAClB,IAAAV,UAAA,CAAAwB,cAAc,EAAC,IAAAxB,UAAA,CAAAyB,UAAU,EAACf,KAAK,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,OAAO,EAAEA,KAAK,CAAC;IACrEgB,qBAAA,KAAI,EAAAb,GAAA,EAAM,IAAAb,UAAA,CAAA2B,OAAO,EAACjB,KAAK,CAAC;EAC5B;EAEA;;;EAGA,IAAIkB,CAACA,CAAA;IAAa,OAAAL,qBAAA,CAAO,IAAI,EAAAR,EAAA;EAAK;EAClC,IAAIa,CAACA,CAACC,MAAiB;IACnB,IAAA7B,UAAA,CAAAwB,cAAc,EAAC,IAAAxB,UAAA,CAAAyB,UAAU,EAACI,MAAM,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,OAAO,EAAEA,MAAM,CAAC;IACvE,MAAMnB,KAAK,GAAG,IAAAV,UAAA,CAAA2B,OAAO,EAACE,MAAM,CAAC;IAC7B,IAAA7B,UAAA,CAAAwB,cAAc,EAACM,QAAQ,CAACpB,KAAK,CAACqB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,iBAAiB,EAAE,OAAO,EAAErB,KAAK,CAAC;IACtFgB,qBAAA,KAAI,EAAAX,EAAA,EAAML,KAAK;EACnB;EAEA;;;;;;;;;;EAUA,IAAIsB,CAACA,CAAA;IAAc,OAAAT,qBAAA,CAAO,IAAI,EAAAP,GAAA;EAAK;EACnC,IAAIgB,CAACA,CAACtB,KAAmB;IACrB,MAAMsB,CAAC,GAAG,IAAAhC,UAAA,CAAAiC,SAAS,EAACvB,KAAK,EAAE,OAAO,CAAC;IACnC,IAAAV,UAAA,CAAAwB,cAAc,EAACQ,CAAC,KAAK,EAAE,IAAIA,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,GAAG,EAAEtB,KAAK,CAAC;IAC7DgB,qBAAA,KAAI,EAAAV,GAAA,EAAMgB,CAAC;EACf;EAEA;;;;EAIA,IAAIE,QAAQA,CAAA;IAAoB,OAAAX,qBAAA,CAAO,IAAI,EAAAN,SAAA;EAAY;EAEvD;;;;EAIA,IAAIkB,aAAaA,CAAA;IACb,MAAMH,CAAC,GAAG,IAAI,CAACE,QAAQ;IACvB,IAAIF,CAAC,IAAI,IAAI,EAAE;MAAE,OAAO,IAAI;;IAC5B,OAAOX,SAAS,CAACe,UAAU,CAACJ,CAAC,CAAC;EAClC;EAEA;;;;;EAKA,IAAIK,OAAOA,CAAA;IACP,OAAQ,IAAI,CAACL,CAAC,KAAK,EAAE,GAAI,CAAC,GAAE,CAAC;EACjC;EAEA;;;;EAIA,IAAIM,WAAWA,CAAA;IACX;IACA,MAAMA,WAAW,GAAG,IAAAtC,UAAA,CAAAuC,QAAQ,EAAC,IAAI,CAACX,CAAC,CAAC;IACpC,IAAI,IAAI,CAACS,OAAO,EAAE;MAAEC,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI;;IAC1C,OAAO,IAAAtC,UAAA,CAAA2B,OAAO,EAACW,WAAW,CAAC;EAC/B;EAEA;;;EAGA,IAAIE,iBAAiBA,CAAA;IACjB,OAAO,IAAAxC,UAAA,CAAAyC,MAAM,EAAC,CAAE,IAAI,CAACnB,CAAC,EAAE,IAAI,CAACgB,WAAW,CAAE,CAAC;EAC/C;EAEA;;;EAGA,IAAII,UAAUA,CAAA;IACV,OAAO,IAAA1C,UAAA,CAAAyC,MAAM,EAAC,CAAE,IAAI,CAACnB,CAAC,EAAE,IAAI,CAACM,CAAC,EAAG,IAAI,CAACS,OAAO,GAAG,MAAM,GAAE,MAAM,CAAG,CAAC;EACtE;EAEA;;;EAGAM,YAAYC,KAAU,EAAEtB,CAAS,EAAEM,CAAS,EAAEI,CAAU;IAAAa,0BAAA,OAAAhC,GAAA;MAAAiC,QAAA;MAAApC,KAAA;IAAA;IAAAmC,0BAAA,OAAA9B,EAAA;MAAA+B,QAAA;MAAApC,KAAA;IAAA;IAAAmC,0BAAA,OAAA7B,GAAA;MAAA8B,QAAA;MAAApC,KAAA;IAAA;IAAAmC,0BAAA,OAAA5B,SAAA;MAAA6B,QAAA;MAAApC,KAAA;IAAA;IACpD,IAAAV,UAAA,CAAA+C,aAAa,EAACH,KAAK,EAAEpC,MAAM,EAAE,WAAW,CAAC;IACzCkB,qBAAA,KAAI,EAAAb,GAAA,EAAMS,CAAC;IACXI,qBAAA,KAAI,EAAAX,EAAA,EAAMa,CAAC;IACXF,qBAAA,KAAI,EAAAV,GAAA,EAAMgB,CAAC;IACXN,qBAAA,KAAI,EAAAT,SAAA,EAAa,IAAI;EACzB;EAEA,CAAAC,WAAA,IAA0C;IACtC,OAAO,mBAAoB,IAAI,CAACI,CAAE,UAAW,IAAI,CAACM,CAAE,eAAgB,IAAI,CAACS,OAAQ,eAAgB,IAAI,CAACH,QAAS,IAAI;EACvH;EAEA;;;EAGAc,KAAKA,CAAA;IACD,MAAMA,KAAK,GAAG,IAAI3B,SAAS,CAACb,MAAM,EAAE,IAAI,CAACc,CAAC,EAAE,IAAI,CAACM,CAAC,EAAE,IAAI,CAACI,CAAC,CAAC;IAC3D,IAAI,IAAI,CAACE,QAAQ,EAAE;MAAER,qBAAA,CAAAsB,KAAK,EAAA/B,SAAA,EAAa,IAAI,CAACiB,QAAQ;;IACpD,OAAOc,KAAK;EAChB;EAEA;;;EAGAC,MAAMA,CAAA;IACF,MAAMf,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,OAAO;MACHgB,KAAK,EAAE,WAAW;MAClBhB,QAAQ,EAAIA,QAAQ,IAAI,IAAI,GAAIA,QAAQ,CAACiB,QAAQ,EAAE,GAAE,IAAK;MAC1D7B,CAAC,EAAE,IAAI,CAACA,CAAC;MAAEM,CAAC,EAAE,IAAI,CAACA,CAAC;MAAEI,CAAC,EAAE,IAAI,CAACA;KACjC;EACL;EAEA;;;;;;;;;;EAUA,OAAOI,UAAUA,CAACJ,CAAe;IAC7B,MAAMoB,EAAE,GAAG,IAAApD,UAAA,CAAAqD,SAAS,EAACrB,CAAC,EAAE,GAAG,CAAC;IAE5B;IACA,IAAKoB,EAAE,IAAI/C,KAAK,IAAM+C,EAAE,IAAI9C,KAAM,EAAE;MAAE,OAAOL,IAAI;;IAEjD;IACA,IAAAD,UAAA,CAAAwB,cAAc,EAAC4B,EAAE,IAAI7C,KAAK,EAAE,mBAAmB,EAAE,GAAG,EAAEyB,CAAC,CAAC;IAExD,OAAO,CAACoB,EAAE,GAAG7C,KAAK,IAAIH,IAAI;EAC9B;EAEA;;;;;;;;;;;;;;EAcA,OAAOkD,WAAWA,CAACC,OAAqB,EAAEvB,CAAU;IAChD,OAAQ,IAAAhC,UAAA,CAAAqD,SAAS,EAACE,OAAO,CAAC,GAAGnD,IAAI,GAAIF,MAAM,CAAC,EAAE,GAAG8B,CAAC,GAAG,EAAE,CAAC;EAC5D;EAEA;;;;;;;;;;;;;;;;;;;;;EAqBA,OAAOwB,cAAcA,CAACxB,CAAe;IACjC,MAAMoB,EAAE,GAAG,IAAApD,UAAA,CAAAqD,SAAS,EAACrB,CAAC,CAAC;IAEvB,IAAIoB,EAAE,KAAKnD,IAAI,IAAImD,EAAE,KAAK/C,KAAK,EAAE;MAAE,OAAO,EAAE;;IAC5C,IAAI+C,EAAE,KAAKjD,IAAI,IAAIiD,EAAE,KAAK9C,KAAK,EAAE;MAAE,OAAO,EAAE;;IAE5C,IAAAN,UAAA,CAAAwB,cAAc,EAAC4B,EAAE,IAAI7C,KAAK,EAAE,WAAW,EAAE,GAAG,EAAEyB,CAAC,CAAC;IAEhD;IACA,OAAQoB,EAAE,GAAGjD,IAAI,GAAI,EAAE,GAAE,EAAE;EAC/B;EAEA;;;;;;;;EAQA,OAAOsD,IAAIA,CAACC,GAAmB;IAC3B,SAASC,WAAWA,CAACC,KAAc,EAAEC,OAAe;MAChD,IAAA7D,UAAA,CAAAwB,cAAc,EAACoC,KAAK,EAAEC,OAAO,EAAE,WAAW,EAAEH,GAAG,CAAC;IACpD;IAAC;IAED,IAAIA,GAAG,IAAI,IAAI,EAAE;MACb,OAAO,IAAIrC,SAAS,CAACb,MAAM,EAAEV,UAAA,CAAAgE,QAAQ,EAAEhE,UAAA,CAAAgE,QAAQ,EAAE,EAAE,CAAC;;IAGxD,IAAI,OAAOJ,GAAI,KAAK,QAAQ,EAAE;MAC1B,MAAMK,KAAK,GAAG,IAAA/D,UAAA,CAAAuC,QAAQ,EAACmB,GAAG,EAAE,WAAW,CAAC;MACxC,IAAIK,KAAK,CAACC,MAAM,KAAK,EAAE,EAAE;QACrB,MAAM1C,CAAC,GAAG,IAAAtB,UAAA,CAAA2B,OAAO,EAACoC,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,MAAMrC,CAAC,GAAGmC,KAAK,CAACE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;QAC7B,MAAMjC,CAAC,GAAIJ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,EAAE,GAAE,EAAE;QAChCA,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;QACZ,OAAO,IAAIP,SAAS,CAACb,MAAM,EAAEc,CAAC,EAAE,IAAAtB,UAAA,CAAA2B,OAAO,EAACC,CAAC,CAAC,EAAEI,CAAC,CAAC;;MAGlD,IAAI+B,KAAK,CAACC,MAAM,KAAK,EAAE,EAAE;QACrB,MAAM1C,CAAC,GAAG,IAAAtB,UAAA,CAAA2B,OAAO,EAACoC,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACrC,MAAMrC,CAAC,GAAGmC,KAAK,CAACE,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;QAC7BN,WAAW,CAAC,CAAC/B,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE,iBAAiB,CAAC;QACnD,MAAMI,CAAC,GAAGX,SAAS,CAACmC,cAAc,CAACO,KAAK,CAAC,EAAE,CAAC,CAAC;QAC7C,OAAO,IAAI1C,SAAS,CAACb,MAAM,EAAEc,CAAC,EAAE,IAAAtB,UAAA,CAAA2B,OAAO,EAACC,CAAC,CAAC,EAAEI,CAAC,CAAC;;MAGlD2B,WAAW,CAAC,KAAK,EAAE,8BAA8B,CAAC;;IAGtD,IAAID,GAAG,YAAYrC,SAAS,EAAE;MAAE,OAAOqC,GAAG,CAACV,KAAK,EAAE;;IAElD;IACA,MAAMkB,EAAE,GAAGR,GAAG,CAACpC,CAAC;IAChBqC,WAAW,CAACO,EAAE,IAAI,IAAI,EAAE,WAAW,CAAC;IACpC,MAAM5C,CAAC,GAAGb,SAAS,CAACyD,EAAE,CAAC;IAEvB;IACA,MAAMtC,CAAC,GAAI,UAASA,CAAU,EAAEU,WAAoB;MAChD,IAAIV,CAAC,IAAI,IAAI,EAAE;QAAE,OAAOnB,SAAS,CAACmB,CAAC,CAAC;;MAEpC,IAAIU,WAAW,IAAI,IAAI,EAAE;QACrBqB,WAAW,CAAC,IAAA3D,UAAA,CAAAmE,WAAW,EAAC7B,WAAW,EAAE,EAAE,CAAC,EAAE,qBAAqB,CAAC;QAChE,MAAMyB,KAAK,GAAG,IAAA/D,UAAA,CAAAuC,QAAQ,EAACD,WAAW,CAAC;QACnCyB,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI;QAChB,OAAO,IAAA/D,UAAA,CAAA2B,OAAO,EAACoC,KAAK,CAAC;;MAGzBJ,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC;IACnC,CAAC,CAAED,GAAG,CAAC9B,CAAC,EAAE8B,GAAG,CAACpB,WAAW,CAAC;IAC1BqB,WAAW,CAAC,CAAC,IAAA3D,UAAA,CAAAuC,QAAQ,EAACX,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,iBAAiB,CAAC;IAE5D;IACA,MAAM;MAAEM,QAAQ;MAAEF;IAAC,CAAE,GAAI,UAASoC,EAAiB,EAAE9B,WAAoB,EAAED,OAAiB;MACxF,IAAI+B,EAAE,IAAI,IAAI,EAAE;QACZ,MAAMpC,CAAC,GAAG,IAAAhC,UAAA,CAAAqD,SAAS,EAACe,EAAE,CAAC;QACvB,OAAO;UACHlC,QAAQ,EAAIF,CAAC,IAAIzB,KAAK,GAAIyB,CAAC,GAAEqC,SAAU;UACvCrC,CAAC,EAAEX,SAAS,CAACmC,cAAc,CAACxB,CAAC;SAChC;;MAGL,IAAIM,WAAW,IAAI,IAAI,EAAE;QACrBqB,WAAW,CAAC,IAAA3D,UAAA,CAAAmE,WAAW,EAAC7B,WAAW,EAAE,EAAE,CAAC,EAAE,qBAAqB,CAAC;QAChE,OAAO;UAAEN,CAAC,EAAI,IAAAhC,UAAA,CAAAuC,QAAQ,EAACD,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,EAAE,GAAE;QAAG,CAAE;;MAG9D,IAAID,OAAO,IAAI,IAAI,EAAE;QACjB,QAAQ,IAAArC,UAAA,CAAAiC,SAAS,EAACI,OAAO,EAAE,aAAa,CAAC;UACrC,KAAK,CAAC;YAAE,OAAO;cAAEL,CAAC,EAAE;YAAE,CAAE;UACxB,KAAK,CAAC;YAAE,OAAO;cAAEA,CAAC,EAAE;YAAE,CAAE;;QAE5B2B,WAAW,CAAC,KAAK,EAAE,iBAAiB,CAAC;;MAGzCA,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC;IACnC,CAAC,CAAED,GAAG,CAAC1B,CAAC,EAAE0B,GAAG,CAACpB,WAAW,EAAEoB,GAAG,CAACrB,OAAO,CAAC;IAEvC,MAAMiC,MAAM,GAAG,IAAIjD,SAAS,CAACb,MAAM,EAAEc,CAAC,EAAEM,CAAC,EAAEI,CAAC,CAAC;IAC7C,IAAIE,QAAQ,EAAE;MAAER,qBAAA,CAAA4C,MAAM,EAAArD,SAAA,EAAciB,QAAQ;;IAE5C;IACAyB,WAAW,CAACD,GAAG,CAACrB,OAAO,IAAI,IAAI,IAAI,IAAArC,UAAA,CAAAiC,SAAS,EAACyB,GAAG,CAACrB,OAAO,EAAE,aAAa,CAAC,KAAKiC,MAAM,CAACjC,OAAO,EAAE,kBAAkB,CAAC;IAChHsB,WAAW,CAACD,GAAG,CAACpB,WAAW,IAAI,IAAI,IAAIoB,GAAG,CAACpB,WAAW,KAAKgC,MAAM,CAAChC,WAAW,EAAE,sBAAsB,CAAC;IAEtG,OAAOgC,MAAM;EACjB;;AA3SJC,OAAA,CAAAlD,SAAA,GAAAA,SAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}