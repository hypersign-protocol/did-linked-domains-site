{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Credential = exports.CredentialProof = exports.CredentialStatus = exports.Claim = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseClaim = {\n  id: \"\",\n  currentStatus: \"\",\n  statusReason: \"\"\n};\nexports.Claim = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.currentStatus !== \"\") {\n      writer.uint32(18).string(message.currentStatus);\n    }\n    if (message.statusReason !== \"\") {\n      writer.uint32(26).string(message.statusReason);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseClaim);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string();\n          break;\n        case 2:\n          message.currentStatus = reader.string();\n          break;\n        case 3:\n          message.statusReason = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseClaim);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = String(object.id);\n    } else {\n      message.id = \"\";\n    }\n    if (object.currentStatus !== undefined && object.currentStatus !== null) {\n      message.currentStatus = String(object.currentStatus);\n    } else {\n      message.currentStatus = \"\";\n    }\n    if (object.statusReason !== undefined && object.statusReason !== null) {\n      message.statusReason = String(object.statusReason);\n    } else {\n      message.statusReason = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    message.currentStatus !== undefined && (obj.currentStatus = message.currentStatus);\n    message.statusReason !== undefined && (obj.statusReason = message.statusReason);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseClaim);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = \"\";\n    }\n    if (object.currentStatus !== undefined && object.currentStatus !== null) {\n      message.currentStatus = object.currentStatus;\n    } else {\n      message.currentStatus = \"\";\n    }\n    if (object.statusReason !== undefined && object.statusReason !== null) {\n      message.statusReason = object.statusReason;\n    } else {\n      message.statusReason = \"\";\n    }\n    return message;\n  }\n};\nconst baseCredentialStatus = {\n  issuer: \"\",\n  issuanceDate: \"\",\n  expirationDate: \"\",\n  credentialHash: \"\"\n};\nexports.CredentialStatus = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.claim !== undefined) {\n      exports.Claim.encode(message.claim, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.issuer !== \"\") {\n      writer.uint32(18).string(message.issuer);\n    }\n    if (message.issuanceDate !== \"\") {\n      writer.uint32(26).string(message.issuanceDate);\n    }\n    if (message.expirationDate !== \"\") {\n      writer.uint32(34).string(message.expirationDate);\n    }\n    if (message.credentialHash !== \"\") {\n      writer.uint32(42).string(message.credentialHash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCredentialStatus);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.claim = exports.Claim.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.issuer = reader.string();\n          break;\n        case 3:\n          message.issuanceDate = reader.string();\n          break;\n        case 4:\n          message.expirationDate = reader.string();\n          break;\n        case 5:\n          message.credentialHash = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseCredentialStatus);\n    if (object.claim !== undefined && object.claim !== null) {\n      message.claim = exports.Claim.fromJSON(object.claim);\n    } else {\n      message.claim = undefined;\n    }\n    if (object.issuer !== undefined && object.issuer !== null) {\n      message.issuer = String(object.issuer);\n    } else {\n      message.issuer = \"\";\n    }\n    if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n      message.issuanceDate = String(object.issuanceDate);\n    } else {\n      message.issuanceDate = \"\";\n    }\n    if (object.expirationDate !== undefined && object.expirationDate !== null) {\n      message.expirationDate = String(object.expirationDate);\n    } else {\n      message.expirationDate = \"\";\n    }\n    if (object.credentialHash !== undefined && object.credentialHash !== null) {\n      message.credentialHash = String(object.credentialHash);\n    } else {\n      message.credentialHash = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.claim !== undefined && (obj.claim = message.claim ? exports.Claim.toJSON(message.claim) : undefined);\n    message.issuer !== undefined && (obj.issuer = message.issuer);\n    message.issuanceDate !== undefined && (obj.issuanceDate = message.issuanceDate);\n    message.expirationDate !== undefined && (obj.expirationDate = message.expirationDate);\n    message.credentialHash !== undefined && (obj.credentialHash = message.credentialHash);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseCredentialStatus);\n    if (object.claim !== undefined && object.claim !== null) {\n      message.claim = exports.Claim.fromPartial(object.claim);\n    } else {\n      message.claim = undefined;\n    }\n    if (object.issuer !== undefined && object.issuer !== null) {\n      message.issuer = object.issuer;\n    } else {\n      message.issuer = \"\";\n    }\n    if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n      message.issuanceDate = object.issuanceDate;\n    } else {\n      message.issuanceDate = \"\";\n    }\n    if (object.expirationDate !== undefined && object.expirationDate !== null) {\n      message.expirationDate = object.expirationDate;\n    } else {\n      message.expirationDate = \"\";\n    }\n    if (object.credentialHash !== undefined && object.credentialHash !== null) {\n      message.credentialHash = object.credentialHash;\n    } else {\n      message.credentialHash = \"\";\n    }\n    return message;\n  }\n};\nconst baseCredentialProof = {\n  type: \"\",\n  created: \"\",\n  updated: \"\",\n  verificationMethod: \"\",\n  proofPurpose: \"\",\n  proofValue: \"\"\n};\nexports.CredentialProof = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n    if (message.created !== \"\") {\n      writer.uint32(18).string(message.created);\n    }\n    if (message.updated !== \"\") {\n      writer.uint32(26).string(message.updated);\n    }\n    if (message.verificationMethod !== \"\") {\n      writer.uint32(34).string(message.verificationMethod);\n    }\n    if (message.proofPurpose !== \"\") {\n      writer.uint32(42).string(message.proofPurpose);\n    }\n    if (message.proofValue !== \"\") {\n      writer.uint32(50).string(message.proofValue);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCredentialProof);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n        case 2:\n          message.created = reader.string();\n          break;\n        case 3:\n          message.updated = reader.string();\n          break;\n        case 4:\n          message.verificationMethod = reader.string();\n          break;\n        case 5:\n          message.proofPurpose = reader.string();\n          break;\n        case 6:\n          message.proofValue = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseCredentialProof);\n    if (object.type !== undefined && object.type !== null) {\n      message.type = String(object.type);\n    } else {\n      message.type = \"\";\n    }\n    if (object.created !== undefined && object.created !== null) {\n      message.created = String(object.created);\n    } else {\n      message.created = \"\";\n    }\n    if (object.updated !== undefined && object.updated !== null) {\n      message.updated = String(object.updated);\n    } else {\n      message.updated = \"\";\n    }\n    if (object.verificationMethod !== undefined && object.verificationMethod !== null) {\n      message.verificationMethod = String(object.verificationMethod);\n    } else {\n      message.verificationMethod = \"\";\n    }\n    if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n      message.proofPurpose = String(object.proofPurpose);\n    } else {\n      message.proofPurpose = \"\";\n    }\n    if (object.proofValue !== undefined && object.proofValue !== null) {\n      message.proofValue = String(object.proofValue);\n    } else {\n      message.proofValue = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    message.created !== undefined && (obj.created = message.created);\n    message.updated !== undefined && (obj.updated = message.updated);\n    message.verificationMethod !== undefined && (obj.verificationMethod = message.verificationMethod);\n    message.proofPurpose !== undefined && (obj.proofPurpose = message.proofPurpose);\n    message.proofValue !== undefined && (obj.proofValue = message.proofValue);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseCredentialProof);\n    if (object.type !== undefined && object.type !== null) {\n      message.type = object.type;\n    } else {\n      message.type = \"\";\n    }\n    if (object.created !== undefined && object.created !== null) {\n      message.created = object.created;\n    } else {\n      message.created = \"\";\n    }\n    if (object.updated !== undefined && object.updated !== null) {\n      message.updated = object.updated;\n    } else {\n      message.updated = \"\";\n    }\n    if (object.verificationMethod !== undefined && object.verificationMethod !== null) {\n      message.verificationMethod = object.verificationMethod;\n    } else {\n      message.verificationMethod = \"\";\n    }\n    if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n      message.proofPurpose = object.proofPurpose;\n    } else {\n      message.proofPurpose = \"\";\n    }\n    if (object.proofValue !== undefined && object.proofValue !== null) {\n      message.proofValue = object.proofValue;\n    } else {\n      message.proofValue = \"\";\n    }\n    return message;\n  }\n};\nconst baseCredential = {\n  issuer: \"\",\n  issuanceDate: \"\",\n  expirationDate: \"\",\n  credentialHash: \"\"\n};\nexports.Credential = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.claim !== undefined) {\n      exports.Claim.encode(message.claim, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.issuer !== \"\") {\n      writer.uint32(18).string(message.issuer);\n    }\n    if (message.issuanceDate !== \"\") {\n      writer.uint32(26).string(message.issuanceDate);\n    }\n    if (message.expirationDate !== \"\") {\n      writer.uint32(34).string(message.expirationDate);\n    }\n    if (message.credentialHash !== \"\") {\n      writer.uint32(42).string(message.credentialHash);\n    }\n    if (message.proof !== undefined) {\n      exports.CredentialProof.encode(message.proof, writer.uint32(50).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCredential);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.claim = exports.Claim.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.issuer = reader.string();\n          break;\n        case 3:\n          message.issuanceDate = reader.string();\n          break;\n        case 4:\n          message.expirationDate = reader.string();\n          break;\n        case 5:\n          message.credentialHash = reader.string();\n          break;\n        case 6:\n          message.proof = exports.CredentialProof.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseCredential);\n    if (object.claim !== undefined && object.claim !== null) {\n      message.claim = exports.Claim.fromJSON(object.claim);\n    } else {\n      message.claim = undefined;\n    }\n    if (object.issuer !== undefined && object.issuer !== null) {\n      message.issuer = String(object.issuer);\n    } else {\n      message.issuer = \"\";\n    }\n    if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n      message.issuanceDate = String(object.issuanceDate);\n    } else {\n      message.issuanceDate = \"\";\n    }\n    if (object.expirationDate !== undefined && object.expirationDate !== null) {\n      message.expirationDate = String(object.expirationDate);\n    } else {\n      message.expirationDate = \"\";\n    }\n    if (object.credentialHash !== undefined && object.credentialHash !== null) {\n      message.credentialHash = String(object.credentialHash);\n    } else {\n      message.credentialHash = \"\";\n    }\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.CredentialProof.fromJSON(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.claim !== undefined && (obj.claim = message.claim ? exports.Claim.toJSON(message.claim) : undefined);\n    message.issuer !== undefined && (obj.issuer = message.issuer);\n    message.issuanceDate !== undefined && (obj.issuanceDate = message.issuanceDate);\n    message.expirationDate !== undefined && (obj.expirationDate = message.expirationDate);\n    message.credentialHash !== undefined && (obj.credentialHash = message.credentialHash);\n    message.proof !== undefined && (obj.proof = message.proof ? exports.CredentialProof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseCredential);\n    if (object.claim !== undefined && object.claim !== null) {\n      message.claim = exports.Claim.fromPartial(object.claim);\n    } else {\n      message.claim = undefined;\n    }\n    if (object.issuer !== undefined && object.issuer !== null) {\n      message.issuer = object.issuer;\n    } else {\n      message.issuer = \"\";\n    }\n    if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n      message.issuanceDate = object.issuanceDate;\n    } else {\n      message.issuanceDate = \"\";\n    }\n    if (object.expirationDate !== undefined && object.expirationDate !== null) {\n      message.expirationDate = object.expirationDate;\n    } else {\n      message.expirationDate = \"\";\n    }\n    if (object.credentialHash !== undefined && object.credentialHash !== null) {\n      message.credentialHash = object.credentialHash;\n    } else {\n      message.credentialHash = \"\";\n    }\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.CredentialProof.fromPartial(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n    return message;\n  }\n};","map":{"version":3,"names":["require","Object","defineProperty","exports","value","Credential","CredentialProof","CredentialStatus","Claim","protobufPackage","minimal_1","baseClaim","id","currentStatus","statusReason","encode","message","writer","Writer","create","uint32","string","decode","input","length","reader","Uint8Array","Reader","end","undefined","len","pos","assign","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","baseCredentialStatus","issuer","issuanceDate","expirationDate","credentialHash","claim","fork","ldelim","baseCredentialProof","type","created","updated","verificationMethod","proofPurpose","proofValue","baseCredential","proof"],"sources":["/home/pratap/hid-ssi-js-sdk/build/libs/generated/ssi/credential.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Credential = exports.CredentialProof = exports.CredentialStatus = exports.Claim = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseClaim = { id: \"\", currentStatus: \"\", statusReason: \"\" };\nexports.Claim = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.currentStatus !== \"\") {\n            writer.uint32(18).string(message.currentStatus);\n        }\n        if (message.statusReason !== \"\") {\n            writer.uint32(26).string(message.statusReason);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseClaim);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.currentStatus = reader.string();\n                    break;\n                case 3:\n                    message.statusReason = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseClaim);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.currentStatus !== undefined && object.currentStatus !== null) {\n            message.currentStatus = String(object.currentStatus);\n        }\n        else {\n            message.currentStatus = \"\";\n        }\n        if (object.statusReason !== undefined && object.statusReason !== null) {\n            message.statusReason = String(object.statusReason);\n        }\n        else {\n            message.statusReason = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.currentStatus !== undefined &&\n            (obj.currentStatus = message.currentStatus);\n        message.statusReason !== undefined &&\n            (obj.statusReason = message.statusReason);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseClaim);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.currentStatus !== undefined && object.currentStatus !== null) {\n            message.currentStatus = object.currentStatus;\n        }\n        else {\n            message.currentStatus = \"\";\n        }\n        if (object.statusReason !== undefined && object.statusReason !== null) {\n            message.statusReason = object.statusReason;\n        }\n        else {\n            message.statusReason = \"\";\n        }\n        return message;\n    },\n};\nconst baseCredentialStatus = {\n    issuer: \"\",\n    issuanceDate: \"\",\n    expirationDate: \"\",\n    credentialHash: \"\",\n};\nexports.CredentialStatus = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.claim !== undefined) {\n            exports.Claim.encode(message.claim, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.issuer !== \"\") {\n            writer.uint32(18).string(message.issuer);\n        }\n        if (message.issuanceDate !== \"\") {\n            writer.uint32(26).string(message.issuanceDate);\n        }\n        if (message.expirationDate !== \"\") {\n            writer.uint32(34).string(message.expirationDate);\n        }\n        if (message.credentialHash !== \"\") {\n            writer.uint32(42).string(message.credentialHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCredentialStatus);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.claim = exports.Claim.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.issuer = reader.string();\n                    break;\n                case 3:\n                    message.issuanceDate = reader.string();\n                    break;\n                case 4:\n                    message.expirationDate = reader.string();\n                    break;\n                case 5:\n                    message.credentialHash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCredentialStatus);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromJSON(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = String(object.issuer);\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = String(object.issuanceDate);\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = String(object.expirationDate);\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = String(object.credentialHash);\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.claim !== undefined &&\n            (obj.claim = message.claim ? exports.Claim.toJSON(message.claim) : undefined);\n        message.issuer !== undefined && (obj.issuer = message.issuer);\n        message.issuanceDate !== undefined &&\n            (obj.issuanceDate = message.issuanceDate);\n        message.expirationDate !== undefined &&\n            (obj.expirationDate = message.expirationDate);\n        message.credentialHash !== undefined &&\n            (obj.credentialHash = message.credentialHash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCredentialStatus);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromPartial(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = object.issuer;\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = object.issuanceDate;\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = object.expirationDate;\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = object.credentialHash;\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        return message;\n    },\n};\nconst baseCredentialProof = {\n    type: \"\",\n    created: \"\",\n    updated: \"\",\n    verificationMethod: \"\",\n    proofPurpose: \"\",\n    proofValue: \"\",\n};\nexports.CredentialProof = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.created !== \"\") {\n            writer.uint32(18).string(message.created);\n        }\n        if (message.updated !== \"\") {\n            writer.uint32(26).string(message.updated);\n        }\n        if (message.verificationMethod !== \"\") {\n            writer.uint32(34).string(message.verificationMethod);\n        }\n        if (message.proofPurpose !== \"\") {\n            writer.uint32(42).string(message.proofPurpose);\n        }\n        if (message.proofValue !== \"\") {\n            writer.uint32(50).string(message.proofValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCredentialProof);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.created = reader.string();\n                    break;\n                case 3:\n                    message.updated = reader.string();\n                    break;\n                case 4:\n                    message.verificationMethod = reader.string();\n                    break;\n                case 5:\n                    message.proofPurpose = reader.string();\n                    break;\n                case 6:\n                    message.proofValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCredentialProof);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.created !== undefined && object.created !== null) {\n            message.created = String(object.created);\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = String(object.updated);\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            message.verificationMethod = String(object.verificationMethod);\n        }\n        else {\n            message.verificationMethod = \"\";\n        }\n        if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n            message.proofPurpose = String(object.proofPurpose);\n        }\n        else {\n            message.proofPurpose = \"\";\n        }\n        if (object.proofValue !== undefined && object.proofValue !== null) {\n            message.proofValue = String(object.proofValue);\n        }\n        else {\n            message.proofValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.created !== undefined && (obj.created = message.created);\n        message.updated !== undefined && (obj.updated = message.updated);\n        message.verificationMethod !== undefined &&\n            (obj.verificationMethod = message.verificationMethod);\n        message.proofPurpose !== undefined &&\n            (obj.proofPurpose = message.proofPurpose);\n        message.proofValue !== undefined && (obj.proofValue = message.proofValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCredentialProof);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.created !== undefined && object.created !== null) {\n            message.created = object.created;\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = object.updated;\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            message.verificationMethod = object.verificationMethod;\n        }\n        else {\n            message.verificationMethod = \"\";\n        }\n        if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n            message.proofPurpose = object.proofPurpose;\n        }\n        else {\n            message.proofPurpose = \"\";\n        }\n        if (object.proofValue !== undefined && object.proofValue !== null) {\n            message.proofValue = object.proofValue;\n        }\n        else {\n            message.proofValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseCredential = {\n    issuer: \"\",\n    issuanceDate: \"\",\n    expirationDate: \"\",\n    credentialHash: \"\",\n};\nexports.Credential = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.claim !== undefined) {\n            exports.Claim.encode(message.claim, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.issuer !== \"\") {\n            writer.uint32(18).string(message.issuer);\n        }\n        if (message.issuanceDate !== \"\") {\n            writer.uint32(26).string(message.issuanceDate);\n        }\n        if (message.expirationDate !== \"\") {\n            writer.uint32(34).string(message.expirationDate);\n        }\n        if (message.credentialHash !== \"\") {\n            writer.uint32(42).string(message.credentialHash);\n        }\n        if (message.proof !== undefined) {\n            exports.CredentialProof.encode(message.proof, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCredential);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.claim = exports.Claim.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.issuer = reader.string();\n                    break;\n                case 3:\n                    message.issuanceDate = reader.string();\n                    break;\n                case 4:\n                    message.expirationDate = reader.string();\n                    break;\n                case 5:\n                    message.credentialHash = reader.string();\n                    break;\n                case 6:\n                    message.proof = exports.CredentialProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCredential);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromJSON(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = String(object.issuer);\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = String(object.issuanceDate);\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = String(object.expirationDate);\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = String(object.credentialHash);\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = exports.CredentialProof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.claim !== undefined &&\n            (obj.claim = message.claim ? exports.Claim.toJSON(message.claim) : undefined);\n        message.issuer !== undefined && (obj.issuer = message.issuer);\n        message.issuanceDate !== undefined &&\n            (obj.issuanceDate = message.issuanceDate);\n        message.expirationDate !== undefined &&\n            (obj.expirationDate = message.expirationDate);\n        message.credentialHash !== undefined &&\n            (obj.credentialHash = message.credentialHash);\n        message.proof !== undefined &&\n            (obj.proof = message.proof\n                ? exports.CredentialProof.toJSON(message.proof)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCredential);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromPartial(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = object.issuer;\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = object.issuanceDate;\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = object.expirationDate;\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = object.credentialHash;\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = exports.CredentialProof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}