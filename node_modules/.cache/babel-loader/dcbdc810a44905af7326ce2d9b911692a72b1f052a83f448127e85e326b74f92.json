{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PocketProvider = void 0;\n/**\n *  [[link-pocket]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Polygon (``matic``)\n *  - Arbitrum (``arbitrum``)\n *\n *  @_subsection: api/providers/thirdparty:Pocket  [providers-pocket]\n */\nconst index_js_1 = require(\"../utils/index.js\");\nconst community_js_1 = require(\"./community.js\");\nconst network_js_1 = require(\"./network.js\");\nconst provider_jsonrpc_js_1 = require(\"./provider-jsonrpc.js\");\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nfunction getHost(name) {\n  switch (name) {\n    case \"mainnet\":\n      return \"eth-mainnet.gateway.pokt.network\";\n    case \"goerli\":\n      return \"eth-goerli.gateway.pokt.network\";\n    case \"matic\":\n      return \"poly-mainnet.gateway.pokt.network\";\n    case \"matic-mumbai\":\n      return \"polygon-mumbai-rpc.gateway.pokt.network\";\n  }\n  (0, index_js_1.assertArgument)(false, \"unsupported network\", \"network\", name);\n}\n/**\n *  The **PocketProvider** connects to the [[link-pocket]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-pocket-signup).\n */\nclass PocketProvider extends provider_jsonrpc_js_1.JsonRpcProvider {\n  /**\n   *  Create a new **PocketProvider**.\n   *\n   *  By default connecting to ``mainnet`` with a highly throttled\n   *  API key.\n   */\n  constructor(_network, applicationId, applicationSecret) {\n    if (_network == null) {\n      _network = \"mainnet\";\n    }\n    const network = network_js_1.Network.from(_network);\n    if (applicationId == null) {\n      applicationId = defaultApplicationId;\n    }\n    if (applicationSecret == null) {\n      applicationSecret = null;\n    }\n    const options = {\n      staticNetwork: network\n    };\n    const request = PocketProvider.getRequest(network, applicationId, applicationSecret);\n    super(request, network, options);\n    /**\n     *  The Application ID for the Pocket connection.\n     */\n    _defineProperty(this, \"applicationId\", void 0);\n    /**\n     *  The Application Secret for making authenticated requests\n     *  to the Pocket connection.\n     */\n    _defineProperty(this, \"applicationSecret\", void 0);\n    (0, index_js_1.defineProperties)(this, {\n      applicationId,\n      applicationSecret\n    });\n  }\n  _getProvider(chainId) {\n    try {\n      return new PocketProvider(chainId, this.applicationId, this.applicationSecret);\n    } catch (error) {}\n    return super._getProvider(chainId);\n  }\n  /**\n   *  Returns a prepared request for connecting to %%network%% with\n   *  %%applicationId%%.\n   */\n  static getRequest(network, applicationId, applicationSecret) {\n    if (applicationId == null) {\n      applicationId = defaultApplicationId;\n    }\n    const request = new index_js_1.FetchRequest(`https:/\\/${getHost(network.name)}/v1/lb/${applicationId}`);\n    request.allowGzip = true;\n    if (applicationSecret) {\n      request.setCredentials(\"\", applicationSecret);\n    }\n    if (applicationId === defaultApplicationId) {\n      request.retryFunc = async (request, response, attempt) => {\n        (0, community_js_1.showThrottleMessage)(\"PocketProvider\");\n        return true;\n      };\n    }\n    return request;\n  }\n  isCommunityResource() {\n    return this.applicationId === defaultApplicationId;\n  }\n}\nexports.PocketProvider = PocketProvider;","map":{"version":3,"names":["index_js_1","require","community_js_1","network_js_1","provider_jsonrpc_js_1","defaultApplicationId","getHost","name","assertArgument","PocketProvider","JsonRpcProvider","constructor","_network","applicationId","applicationSecret","network","Network","from","options","staticNetwork","request","getRequest","_defineProperty","defineProperties","_getProvider","chainId","error","FetchRequest","allowGzip","setCredentials","retryFunc","response","attempt","showThrottleMessage","isCommunityResource","exports"],"sources":["../../src.ts/providers/provider-pocket.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;AAaA,MAAAA,UAAA,GAAAC,OAAA;AAKA,MAAAC,cAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAF,OAAA;AACA,MAAAG,qBAAA,GAAAH,OAAA;AAKA,MAAMI,oBAAoB,GAAG,0BAA0B;AAEvD,SAASC,OAAOA,CAACC,IAAY;EACzB,QAAQA,IAAI;IACR,KAAK,SAAS;MACV,OAAQ,kCAAkC;IAC9C,KAAK,QAAQ;MACT,OAAO,iCAAiC;IAE5C,KAAK,OAAO;MACR,OAAO,mCAAmC;IAC9C,KAAK,cAAc;MACf,OAAO,yCAAyC;;EAGxD,IAAAP,UAAA,CAAAQ,cAAc,EAAC,KAAK,EAAE,qBAAqB,EAAE,SAAS,EAAED,IAAI,CAAC;AACjE;AAGA;;;;;;;;;AASA,MAAaE,cAAe,SAAQL,qBAAA,CAAAM,eAAe;EAa/C;;;;;;EAMAC,YAAYC,QAAqB,EAAEC,aAA6B,EAAEC,iBAAiC;IAC/F,IAAIF,QAAQ,IAAI,IAAI,EAAE;MAAEA,QAAQ,GAAG,SAAS;;IAC5C,MAAMG,OAAO,GAAGZ,YAAA,CAAAa,OAAO,CAACC,IAAI,CAACL,QAAQ,CAAC;IACtC,IAAIC,aAAa,IAAI,IAAI,EAAE;MAAEA,aAAa,GAAGR,oBAAoB;;IACjE,IAAIS,iBAAiB,IAAI,IAAI,EAAE;MAAEA,iBAAiB,GAAG,IAAI;;IAEzD,MAAMI,OAAO,GAAG;MAAEC,aAAa,EAAEJ;IAAO,CAAE;IAE1C,MAAMK,OAAO,GAAGX,cAAc,CAACY,UAAU,CAACN,OAAO,EAAEF,aAAa,EAAEC,iBAAiB,CAAC;IACpF,KAAK,CAACM,OAAO,EAAEL,OAAO,EAAEG,OAAO,CAAC;IA1BpC;;;IAAAI,eAAA;IAKA;;;;IAAAA,eAAA;IAuBI,IAAAtB,UAAA,CAAAuB,gBAAgB,EAAiB,IAAI,EAAE;MAAEV,aAAa;MAAEC;IAAiB,CAAE,CAAC;EAChF;EAEAU,YAAYA,CAACC,OAAe;IACxB,IAAI;MACA,OAAO,IAAIhB,cAAc,CAACgB,OAAO,EAAE,IAAI,CAACZ,aAAa,EAAE,IAAI,CAACC,iBAAiB,CAAC;KACjF,CAAC,OAAOY,KAAK,EAAE;IAChB,OAAO,KAAK,CAACF,YAAY,CAACC,OAAO,CAAC;EACtC;EAEA;;;;EAIA,OAAOJ,UAAUA,CAACN,OAAgB,EAAEF,aAA6B,EAAEC,iBAAiC;IAChG,IAAID,aAAa,IAAI,IAAI,EAAE;MAAEA,aAAa,GAAGR,oBAAoB;;IAEjE,MAAMe,OAAO,GAAG,IAAIpB,UAAA,CAAA2B,YAAY,CAAC,YAAarB,OAAO,CAACS,OAAO,CAACR,IAAI,CAAE,UAAWM,aAAc,EAAE,CAAC;IAChGO,OAAO,CAACQ,SAAS,GAAG,IAAI;IAExB,IAAId,iBAAiB,EAAE;MACnBM,OAAO,CAACS,cAAc,CAAC,EAAE,EAAEf,iBAAiB,CAAC;;IAGjD,IAAID,aAAa,KAAKR,oBAAoB,EAAE;MACxCe,OAAO,CAACU,SAAS,GAAG,OAAOV,OAAO,EAAEW,QAAQ,EAAEC,OAAO,KAAI;QACrD,IAAA9B,cAAA,CAAA+B,mBAAmB,EAAC,gBAAgB,CAAC;QACrC,OAAO,IAAI;MACf,CAAC;;IAGL,OAAOb,OAAO;EAClB;EAEAc,mBAAmBA,CAAA;IACf,OAAQ,IAAI,CAACrB,aAAa,KAAKR,oBAAoB;EACvD;;AAlEJ8B,OAAA,CAAA1B,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}