{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verifyDNS01 = void 0;\nconst api_1 = require(\"../utils/api\");\nfunction verifyDNS01(domain, txt) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const resolveDNSURL = `https://dns.google/resolve?name=${new URL(domain).host}&type=TXT`;\n    const actuaTxt = txt;\n    console.log(resolveDNSURL);\n    const res = yield (0, api_1.makeCall)(resolveDNSURL, 'GET');\n    const data = res.data;\n    const txtRecords = data.Answer.filter(record => record.type === 16);\n    const txtRecord = txtRecords.find(record => record.data.includes(txt));\n    if (!txtRecord) {\n      return {\n        verified: false,\n        error: new Error('DNS TXT record not found')\n      };\n    }\n    if (txtRecord.data !== actuaTxt) {\n      return {\n        verified: false,\n        error: new Error('DNS TXT record not found')\n      };\n    }\n    return {\n      TXT: txtRecord,\n      verified: true\n    };\n  });\n}\nexports.verifyDNS01 = verifyDNS01;","map":{"version":3,"names":["api_1","require","verifyDNS01","domain","txt","resolveDNSURL","URL","host","actuaTxt","console","log","res","makeCall","data","txtRecords","Answer","filter","record","type","txtRecord","find","includes","verified","error","Error","TXT","exports"],"sources":["../../src/DNS01/dns01.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,KAAA,GAAAC,OAAA;AAEC,SAAeC,WAAWA,CAACC,MAAU,EAACC,GAAU;;IAC7C,MAAMC,aAAa,GAAG,mCAAmC,IAAIC,GAAG,CAACH,MAAM,CAAC,CAACI,IAAI,WAAW;IACxF,MAAMC,QAAQ,GAAGJ,GAAG;IAEpBK,OAAO,CAACC,GAAG,CAACL,aAAa,CAAC;IAE1B,MAAMM,GAAG,GAAG,MAAM,IAAAX,KAAA,CAAAY,QAAQ,EAACP,aAAa,EAAE,KAAK,CAAC;IAChD,MAAMQ,IAAI,GAAGF,GAAG,CAACE,IAAI;IACrB,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAM,CAACC,MAAM,CAAEC,MAAW,IAAKA,MAAM,CAACC,IAAI,KAAK,EAAE,CAAC;IAC1E,MAAMC,SAAS,GAAGL,UAAU,CAACM,IAAI,CAAEH,MAAW,IAAKA,MAAM,CAACJ,IAAI,CAACQ,QAAQ,CAACjB,GAAG,CAAC,CAAC;IAC7E,IAAI,CAACe,SAAS,EAAE;MACZ,OAAO;QACHG,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,IAAIC,KAAK,CAAC,0BAA0B;OAE9C;;IAEL,IAAIL,SAAS,CAACN,IAAI,KAAKL,QAAQ,EAAE;MAC7B,OAAO;QACHc,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,IAAIC,KAAK,CAAC,0BAA0B;OAE9C;;IAGL,OAAO;MACHC,GAAG,EAAEN,SAAS;MACdG,QAAQ,EAAE;KACb;EAKL,CAAC;;AAGGI,OAAA,CAAAxB,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}