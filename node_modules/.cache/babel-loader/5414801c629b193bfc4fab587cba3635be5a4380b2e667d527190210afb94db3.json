{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgRegisterCredentialStatusResponse = exports.MsgRegisterCredentialStatus = exports.MsgDeactivateDIDResponse = exports.MsgDeactivateDID = exports.MsgCreateSchemaResponse = exports.MsgCreateSchema = exports.MsgUpdateDIDResponse = exports.MsgUpdateDID = exports.MsgCreateDIDResponse = exports.MsgCreateDID = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nconst did_1 = require(\"./did\");\nconst schema_1 = require(\"./schema\");\nconst clientSpec_1 = require(\"./clientSpec\");\nconst credential_1 = require(\"./credential\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseMsgCreateDID = {\n  creator: \"\"\n};\nexports.MsgCreateDID = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.didDocString !== undefined) {\n      did_1.Did.encode(message.didDocString, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      did_1.SignInfo.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.creator !== \"\") {\n      writer.uint32(26).string(message.creator);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgCreateDID);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.didDocString = did_1.Did.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n          break;\n        case 3:\n          message.creator = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgCreateDID);\n    message.signatures = [];\n    if (object.didDocString !== undefined && object.didDocString !== null) {\n      message.didDocString = did_1.Did.fromJSON(object.didDocString);\n    } else {\n      message.didDocString = undefined;\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(did_1.SignInfo.fromJSON(e));\n      }\n    }\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.didDocString !== undefined && (obj.didDocString = message.didDocString ? did_1.Did.toJSON(message.didDocString) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? did_1.SignInfo.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    message.creator !== undefined && (obj.creator = message.creator);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgCreateDID);\n    message.signatures = [];\n    if (object.didDocString !== undefined && object.didDocString !== null) {\n      message.didDocString = did_1.Did.fromPartial(object.didDocString);\n    } else {\n      message.didDocString = undefined;\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(did_1.SignInfo.fromPartial(e));\n      }\n    }\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgCreateDIDResponse = {\n  id: 0\n};\nexports.MsgCreateDIDResponse = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.id !== 0) {\n      writer.uint32(8).uint64(message.id);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgCreateDIDResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = longToNumber(reader.uint64());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgCreateDIDResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Number(object.id);\n    } else {\n      message.id = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgCreateDIDResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = 0;\n    }\n    return message;\n  }\n};\nconst baseMsgUpdateDID = {\n  version_id: \"\",\n  creator: \"\"\n};\nexports.MsgUpdateDID = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.didDocString !== undefined) {\n      did_1.Did.encode(message.didDocString, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.version_id !== \"\") {\n      writer.uint32(18).string(message.version_id);\n    }\n    for (const v of message.signatures) {\n      did_1.SignInfo.encode(v, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.creator !== \"\") {\n      writer.uint32(34).string(message.creator);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgUpdateDID);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.didDocString = did_1.Did.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.version_id = reader.string();\n          break;\n        case 3:\n          message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n          break;\n        case 4:\n          message.creator = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgUpdateDID);\n    message.signatures = [];\n    if (object.didDocString !== undefined && object.didDocString !== null) {\n      message.didDocString = did_1.Did.fromJSON(object.didDocString);\n    } else {\n      message.didDocString = undefined;\n    }\n    if (object.version_id !== undefined && object.version_id !== null) {\n      message.version_id = String(object.version_id);\n    } else {\n      message.version_id = \"\";\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(did_1.SignInfo.fromJSON(e));\n      }\n    }\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.didDocString !== undefined && (obj.didDocString = message.didDocString ? did_1.Did.toJSON(message.didDocString) : undefined);\n    message.version_id !== undefined && (obj.version_id = message.version_id);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? did_1.SignInfo.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    message.creator !== undefined && (obj.creator = message.creator);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgUpdateDID);\n    message.signatures = [];\n    if (object.didDocString !== undefined && object.didDocString !== null) {\n      message.didDocString = did_1.Did.fromPartial(object.didDocString);\n    } else {\n      message.didDocString = undefined;\n    }\n    if (object.version_id !== undefined && object.version_id !== null) {\n      message.version_id = object.version_id;\n    } else {\n      message.version_id = \"\";\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(did_1.SignInfo.fromPartial(e));\n      }\n    }\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgUpdateDIDResponse = {\n  updateId: \"\"\n};\nexports.MsgUpdateDIDResponse = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.updateId !== \"\") {\n      writer.uint32(10).string(message.updateId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgUpdateDIDResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.updateId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgUpdateDIDResponse);\n    if (object.updateId !== undefined && object.updateId !== null) {\n      message.updateId = String(object.updateId);\n    } else {\n      message.updateId = \"\";\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.updateId !== undefined && (obj.updateId = message.updateId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgUpdateDIDResponse);\n    if (object.updateId !== undefined && object.updateId !== null) {\n      message.updateId = object.updateId;\n    } else {\n      message.updateId = \"\";\n    }\n    return message;\n  }\n};\nconst baseMsgCreateSchema = {\n  creator: \"\"\n};\nexports.MsgCreateSchema = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.schemaDoc !== undefined) {\n      schema_1.SchemaDocument.encode(message.schemaDoc, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.schemaProof !== undefined) {\n      schema_1.SchemaProof.encode(message.schemaProof, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientSpec !== undefined) {\n      clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgCreateSchema);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.schemaDoc = schema_1.SchemaDocument.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.schemaProof = schema_1.SchemaProof.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgCreateSchema);\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n    if (object.schemaDoc !== undefined && object.schemaDoc !== null) {\n      message.schemaDoc = schema_1.SchemaDocument.fromJSON(object.schemaDoc);\n    } else {\n      message.schemaDoc = undefined;\n    }\n    if (object.schemaProof !== undefined && object.schemaProof !== null) {\n      message.schemaProof = schema_1.SchemaProof.fromJSON(object.schemaProof);\n    } else {\n      message.schemaProof = undefined;\n    }\n    if (object.clientSpec !== undefined && object.clientSpec !== null) {\n      message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n    } else {\n      message.clientSpec = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.schemaDoc !== undefined && (obj.schemaDoc = message.schemaDoc ? schema_1.SchemaDocument.toJSON(message.schemaDoc) : undefined);\n    message.schemaProof !== undefined && (obj.schemaProof = message.schemaProof ? schema_1.SchemaProof.toJSON(message.schemaProof) : undefined);\n    message.clientSpec !== undefined && (obj.clientSpec = message.clientSpec ? clientSpec_1.ClientSpec.toJSON(message.clientSpec) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgCreateSchema);\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n    if (object.schemaDoc !== undefined && object.schemaDoc !== null) {\n      message.schemaDoc = schema_1.SchemaDocument.fromPartial(object.schemaDoc);\n    } else {\n      message.schemaDoc = undefined;\n    }\n    if (object.schemaProof !== undefined && object.schemaProof !== null) {\n      message.schemaProof = schema_1.SchemaProof.fromPartial(object.schemaProof);\n    } else {\n      message.schemaProof = undefined;\n    }\n    if (object.clientSpec !== undefined && object.clientSpec !== null) {\n      message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n    } else {\n      message.clientSpec = undefined;\n    }\n    return message;\n  }\n};\nconst baseMsgCreateSchemaResponse = {\n  id: 0\n};\nexports.MsgCreateSchemaResponse = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.id !== 0) {\n      writer.uint32(8).uint64(message.id);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgCreateSchemaResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = longToNumber(reader.uint64());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgCreateSchemaResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Number(object.id);\n    } else {\n      message.id = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgCreateSchemaResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = 0;\n    }\n    return message;\n  }\n};\nconst baseMsgDeactivateDID = {\n  creator: \"\",\n  didId: \"\",\n  version_id: \"\"\n};\nexports.MsgDeactivateDID = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.didId !== \"\") {\n      writer.uint32(18).string(message.didId);\n    }\n    if (message.version_id !== \"\") {\n      writer.uint32(26).string(message.version_id);\n    }\n    for (const v of message.signatures) {\n      did_1.SignInfo.encode(v, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgDeactivateDID);\n    message.signatures = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.didId = reader.string();\n          break;\n        case 3:\n          message.version_id = reader.string();\n          break;\n        case 4:\n          message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgDeactivateDID);\n    message.signatures = [];\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n    if (object.didId !== undefined && object.didId !== null) {\n      message.didId = String(object.didId);\n    } else {\n      message.didId = \"\";\n    }\n    if (object.version_id !== undefined && object.version_id !== null) {\n      message.version_id = String(object.version_id);\n    } else {\n      message.version_id = \"\";\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(did_1.SignInfo.fromJSON(e));\n      }\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.didId !== undefined && (obj.didId = message.didId);\n    message.version_id !== undefined && (obj.version_id = message.version_id);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? did_1.SignInfo.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgDeactivateDID);\n    message.signatures = [];\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n    if (object.didId !== undefined && object.didId !== null) {\n      message.didId = object.didId;\n    } else {\n      message.didId = \"\";\n    }\n    if (object.version_id !== undefined && object.version_id !== null) {\n      message.version_id = object.version_id;\n    } else {\n      message.version_id = \"\";\n    }\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(did_1.SignInfo.fromPartial(e));\n      }\n    }\n    return message;\n  }\n};\nconst baseMsgDeactivateDIDResponse = {\n  id: 0\n};\nexports.MsgDeactivateDIDResponse = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.id !== 0) {\n      writer.uint32(8).uint64(message.id);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = longToNumber(reader.uint64());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Number(object.id);\n    } else {\n      message.id = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = 0;\n    }\n    return message;\n  }\n};\nconst baseMsgRegisterCredentialStatus = {\n  creator: \"\"\n};\nexports.MsgRegisterCredentialStatus = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.credentialStatus !== undefined) {\n      credential_1.CredentialStatus.encode(message.credentialStatus, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.proof !== undefined) {\n      credential_1.CredentialProof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientSpec !== undefined) {\n      clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.credentialStatus = credential_1.CredentialStatus.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.proof = credential_1.CredentialProof.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = String(object.creator);\n    } else {\n      message.creator = \"\";\n    }\n    if (object.credentialStatus !== undefined && object.credentialStatus !== null) {\n      message.credentialStatus = credential_1.CredentialStatus.fromJSON(object.credentialStatus);\n    } else {\n      message.credentialStatus = undefined;\n    }\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = credential_1.CredentialProof.fromJSON(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n    if (object.clientSpec !== undefined && object.clientSpec !== null) {\n      message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n    } else {\n      message.clientSpec = undefined;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.credentialStatus !== undefined && (obj.credentialStatus = message.credentialStatus ? credential_1.CredentialStatus.toJSON(message.credentialStatus) : undefined);\n    message.proof !== undefined && (obj.proof = message.proof ? credential_1.CredentialProof.toJSON(message.proof) : undefined);\n    message.clientSpec !== undefined && (obj.clientSpec = message.clientSpec ? clientSpec_1.ClientSpec.toJSON(message.clientSpec) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n    if (object.creator !== undefined && object.creator !== null) {\n      message.creator = object.creator;\n    } else {\n      message.creator = \"\";\n    }\n    if (object.credentialStatus !== undefined && object.credentialStatus !== null) {\n      message.credentialStatus = credential_1.CredentialStatus.fromPartial(object.credentialStatus);\n    } else {\n      message.credentialStatus = undefined;\n    }\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = credential_1.CredentialProof.fromPartial(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n    if (object.clientSpec !== undefined && object.clientSpec !== null) {\n      message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n    } else {\n      message.clientSpec = undefined;\n    }\n    return message;\n  }\n};\nconst baseMsgRegisterCredentialStatusResponse = {\n  id: 0\n};\nexports.MsgRegisterCredentialStatusResponse = {\n  encode(message, writer = minimal_1.Writer.create()) {\n    if (message.id !== 0) {\n      writer.uint32(8).uint64(message.id);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.id = longToNumber(reader.uint64());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = Number(object.id);\n    } else {\n      message.id = 0;\n    }\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.id !== undefined && (obj.id = message.id);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n    if (object.id !== undefined && object.id !== null) {\n      message.id = object.id;\n    } else {\n      message.id = 0;\n    }\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n  }\n  CreateDID(request) {\n    const data = exports.MsgCreateDID.encode(request).finish();\n    const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"CreateDID\", data);\n    return promise.then(data => exports.MsgCreateDIDResponse.decode(new minimal_1.Reader(data)));\n  }\n  UpdateDID(request) {\n    const data = exports.MsgUpdateDID.encode(request).finish();\n    const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"UpdateDID\", data);\n    return promise.then(data => exports.MsgUpdateDIDResponse.decode(new minimal_1.Reader(data)));\n  }\n  CreateSchema(request) {\n    const data = exports.MsgCreateSchema.encode(request).finish();\n    const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"CreateSchema\", data);\n    return promise.then(data => exports.MsgCreateSchemaResponse.decode(new minimal_1.Reader(data)));\n  }\n  DeactivateDID(request) {\n    const data = exports.MsgDeactivateDID.encode(request).finish();\n    const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"DeactivateDID\", data);\n    return promise.then(data => exports.MsgDeactivateDIDResponse.decode(new minimal_1.Reader(data)));\n  }\n  RegisterCredentialStatus(request) {\n    const data = exports.MsgRegisterCredentialStatus.encode(request).finish();\n    const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"RegisterCredentialStatus\", data);\n    return promise.then(data => exports.MsgRegisterCredentialStatusResponse.decode(new minimal_1.Reader(data)));\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n// if (util.Long !== Long) {\n//   util.Long = Long as any;\n//   configure();\n// }","map":{"version":3,"names":["require","Object","defineProperty","exports","value","MsgClientImpl","MsgRegisterCredentialStatusResponse","MsgRegisterCredentialStatus","MsgDeactivateDIDResponse","MsgDeactivateDID","MsgCreateSchemaResponse","MsgCreateSchema","MsgUpdateDIDResponse","MsgUpdateDID","MsgCreateDIDResponse","MsgCreateDID","protobufPackage","minimal_1","did_1","schema_1","clientSpec_1","credential_1","baseMsgCreateDID","creator","encode","message","writer","Writer","create","didDocString","undefined","Did","uint32","fork","ldelim","v","signatures","SignInfo","string","decode","input","length","reader","Uint8Array","Reader","end","len","pos","assign","tag","push","skipType","fromJSON","object","e","String","toJSON","obj","map","fromPartial","baseMsgCreateDIDResponse","id","uint64","longToNumber","Number","baseMsgUpdateDID","version_id","baseMsgUpdateDIDResponse","updateId","baseMsgCreateSchema","schemaDoc","SchemaDocument","schemaProof","SchemaProof","clientSpec","ClientSpec","baseMsgCreateSchemaResponse","baseMsgDeactivateDID","didId","baseMsgDeactivateDIDResponse","baseMsgRegisterCredentialStatus","credentialStatus","CredentialStatus","proof","CredentialProof","baseMsgRegisterCredentialStatusResponse","constructor","rpc","CreateDID","request","data","finish","promise","then","UpdateDID","CreateSchema","DeactivateDID","RegisterCredentialStatus","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber"],"sources":["/home/pratap/hid-ssi-js-sdk/build/libs/generated/ssi/tx.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgRegisterCredentialStatusResponse = exports.MsgRegisterCredentialStatus = exports.MsgDeactivateDIDResponse = exports.MsgDeactivateDID = exports.MsgCreateSchemaResponse = exports.MsgCreateSchema = exports.MsgUpdateDIDResponse = exports.MsgUpdateDID = exports.MsgCreateDIDResponse = exports.MsgCreateDID = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nconst did_1 = require(\"./did\");\nconst schema_1 = require(\"./schema\");\nconst clientSpec_1 = require(\"./clientSpec\");\nconst credential_1 = require(\"./credential\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseMsgCreateDID = { creator: \"\" };\nexports.MsgCreateDID = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.didDocString !== undefined) {\n            did_1.Did.encode(message.didDocString, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            did_1.SignInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.creator !== \"\") {\n            writer.uint32(26).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateDID);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.didDocString = did_1.Did.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromJSON(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromJSON(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.didDocString !== undefined &&\n            (obj.didDocString = message.didDocString\n                ? did_1.Did.toJSON(message.didDocString)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? did_1.SignInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromPartial(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromPartial(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateDIDResponse = { id: 0 };\nexports.MsgCreateDIDResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateDIDResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateDID = { version_id: \"\", creator: \"\" };\nexports.MsgUpdateDID = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.didDocString !== undefined) {\n            did_1.Did.encode(message.didDocString, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.version_id !== \"\") {\n            writer.uint32(18).string(message.version_id);\n        }\n        for (const v of message.signatures) {\n            did_1.SignInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.creator !== \"\") {\n            writer.uint32(34).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgUpdateDID);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.didDocString = did_1.Did.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.version_id = reader.string();\n                    break;\n                case 3:\n                    message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgUpdateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromJSON(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = String(object.version_id);\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromJSON(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.didDocString !== undefined &&\n            (obj.didDocString = message.didDocString\n                ? did_1.Did.toJSON(message.didDocString)\n                : undefined);\n        message.version_id !== undefined && (obj.version_id = message.version_id);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? did_1.SignInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgUpdateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromPartial(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = object.version_id;\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromPartial(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateDIDResponse = { updateId: \"\" };\nexports.MsgUpdateDIDResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.updateId !== \"\") {\n            writer.uint32(10).string(message.updateId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgUpdateDIDResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgUpdateDIDResponse);\n        if (object.updateId !== undefined && object.updateId !== null) {\n            message.updateId = String(object.updateId);\n        }\n        else {\n            message.updateId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateId !== undefined && (obj.updateId = message.updateId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgUpdateDIDResponse);\n        if (object.updateId !== undefined && object.updateId !== null) {\n            message.updateId = object.updateId;\n        }\n        else {\n            message.updateId = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateSchema = { creator: \"\" };\nexports.MsgCreateSchema = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.schemaDoc !== undefined) {\n            schema_1.SchemaDocument.encode(message.schemaDoc, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.schemaProof !== undefined) {\n            schema_1.SchemaProof.encode(message.schemaProof, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientSpec !== undefined) {\n            clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateSchema);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.schemaDoc = schema_1.SchemaDocument.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.schemaProof = schema_1.SchemaProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateSchema);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.schemaDoc !== undefined && object.schemaDoc !== null) {\n            message.schemaDoc = schema_1.SchemaDocument.fromJSON(object.schemaDoc);\n        }\n        else {\n            message.schemaDoc = undefined;\n        }\n        if (object.schemaProof !== undefined && object.schemaProof !== null) {\n            message.schemaProof = schema_1.SchemaProof.fromJSON(object.schemaProof);\n        }\n        else {\n            message.schemaProof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.schemaDoc !== undefined &&\n            (obj.schemaDoc = message.schemaDoc\n                ? schema_1.SchemaDocument.toJSON(message.schemaDoc)\n                : undefined);\n        message.schemaProof !== undefined &&\n            (obj.schemaProof = message.schemaProof\n                ? schema_1.SchemaProof.toJSON(message.schemaProof)\n                : undefined);\n        message.clientSpec !== undefined &&\n            (obj.clientSpec = message.clientSpec\n                ? clientSpec_1.ClientSpec.toJSON(message.clientSpec)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateSchema);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.schemaDoc !== undefined && object.schemaDoc !== null) {\n            message.schemaDoc = schema_1.SchemaDocument.fromPartial(object.schemaDoc);\n        }\n        else {\n            message.schemaDoc = undefined;\n        }\n        if (object.schemaProof !== undefined && object.schemaProof !== null) {\n            message.schemaProof = schema_1.SchemaProof.fromPartial(object.schemaProof);\n        }\n        else {\n            message.schemaProof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateSchemaResponse = { id: 0 };\nexports.MsgCreateSchemaResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateSchemaResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateSchemaResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateSchemaResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeactivateDID = { creator: \"\", didId: \"\", version_id: \"\" };\nexports.MsgDeactivateDID = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.didId !== \"\") {\n            writer.uint32(18).string(message.didId);\n        }\n        if (message.version_id !== \"\") {\n            writer.uint32(26).string(message.version_id);\n        }\n        for (const v of message.signatures) {\n            did_1.SignInfo.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgDeactivateDID);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.didId = reader.string();\n                    break;\n                case 3:\n                    message.version_id = reader.string();\n                    break;\n                case 4:\n                    message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgDeactivateDID);\n        message.signatures = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.didId !== undefined && object.didId !== null) {\n            message.didId = String(object.didId);\n        }\n        else {\n            message.didId = \"\";\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = String(object.version_id);\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.didId !== undefined && (obj.didId = message.didId);\n        message.version_id !== undefined && (obj.version_id = message.version_id);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? did_1.SignInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgDeactivateDID);\n        message.signatures = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.didId !== undefined && object.didId !== null) {\n            message.didId = object.didId;\n        }\n        else {\n            message.didId = \"\";\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = object.version_id;\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDeactivateDIDResponse = { id: 0 };\nexports.MsgDeactivateDIDResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgRegisterCredentialStatus = { creator: \"\" };\nexports.MsgRegisterCredentialStatus = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.credentialStatus !== undefined) {\n            credential_1.CredentialStatus.encode(message.credentialStatus, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proof !== undefined) {\n            credential_1.CredentialProof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientSpec !== undefined) {\n            clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.credentialStatus = credential_1.CredentialStatus.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.proof = credential_1.CredentialProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.credentialStatus !== undefined &&\n            object.credentialStatus !== null) {\n            message.credentialStatus = credential_1.CredentialStatus.fromJSON(object.credentialStatus);\n        }\n        else {\n            message.credentialStatus = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = credential_1.CredentialProof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.credentialStatus !== undefined &&\n            (obj.credentialStatus = message.credentialStatus\n                ? credential_1.CredentialStatus.toJSON(message.credentialStatus)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = message.proof\n                ? credential_1.CredentialProof.toJSON(message.proof)\n                : undefined);\n        message.clientSpec !== undefined &&\n            (obj.clientSpec = message.clientSpec\n                ? clientSpec_1.ClientSpec.toJSON(message.clientSpec)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.credentialStatus !== undefined &&\n            object.credentialStatus !== null) {\n            message.credentialStatus = credential_1.CredentialStatus.fromPartial(object.credentialStatus);\n        }\n        else {\n            message.credentialStatus = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = credential_1.CredentialProof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgRegisterCredentialStatusResponse = { id: 0 };\nexports.MsgRegisterCredentialStatusResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDID(request) {\n        const data = exports.MsgCreateDID.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"CreateDID\", data);\n        return promise.then((data) => exports.MsgCreateDIDResponse.decode(new minimal_1.Reader(data)));\n    }\n    UpdateDID(request) {\n        const data = exports.MsgUpdateDID.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"UpdateDID\", data);\n        return promise.then((data) => exports.MsgUpdateDIDResponse.decode(new minimal_1.Reader(data)));\n    }\n    CreateSchema(request) {\n        const data = exports.MsgCreateSchema.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"CreateSchema\", data);\n        return promise.then((data) => exports.MsgCreateSchemaResponse.decode(new minimal_1.Reader(data)));\n    }\n    DeactivateDID(request) {\n        const data = exports.MsgDeactivateDID.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"DeactivateDID\", data);\n        return promise.then((data) => exports.MsgDeactivateDIDResponse.decode(new minimal_1.Reader(data)));\n    }\n    RegisterCredentialStatus(request) {\n        const data = exports.MsgRegisterCredentialStatus.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"RegisterCredentialStatus\", data);\n        return promise.then((data) => exports.MsgRegisterCredentialStatusResponse.decode(new minimal_1.Reader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\n// if (util.Long !== Long) {\n//   util.Long = Long as any;\n//   configure();\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}