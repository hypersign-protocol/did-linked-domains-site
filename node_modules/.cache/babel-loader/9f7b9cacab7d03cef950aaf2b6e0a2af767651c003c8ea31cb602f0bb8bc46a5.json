{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CredentialRPC = void 0;\nconst constants_1 = require(\"../constants\");\nconst generatedProto = __importStar(require(\"../../libs/generated/ssi/tx\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst client_1 = require(\"../hid/client\");\nclass CredentialRPC {\n  constructor({\n    offlineSigner,\n    nodeRpcEndpoint,\n    nodeRestEndpoint\n  }) {\n    if (offlineSigner) {\n      this.hidClient = new client_1.HIDClient(offlineSigner, nodeRpcEndpoint, nodeRestEndpoint);\n    } else {\n      this.hidClient = null;\n    }\n    this.credentialRestEP = (client_1.HIDClient.hidNodeRestEndpoint ? client_1.HIDClient.hidNodeRestEndpoint : nodeRestEndpoint) + constants_1.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH;\n  }\n  init() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.hidClient) {\n        throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n      }\n      yield this.hidClient.init();\n    });\n  }\n  registerCredentialStatus(credentialStatus, proof) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!credentialStatus) {\n        throw new Error('CredentialStatus must be passed as a param while registerting credential status');\n      }\n      if (!proof) {\n        throw new Error('Proof must be passed as a param while registering crdential status');\n      }\n      if (!this.hidClient) {\n        throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n      }\n      const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgRegisterCredentialStatus}`;\n      const txMessage = {\n        typeUrl,\n        value: generatedProto[constants_1.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({\n          credentialStatus,\n          proof,\n          creator: client_1.HIDClient.getHidWalletAddress()\n        })\n      };\n      const fee = 'auto';\n      const hidClient = client_1.HIDClient.getHidClient();\n      const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), [txMessage], fee);\n      return txResult;\n    });\n  }\n  generateCredentialStatusTxnMessage(credentialStatus, proof) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!credentialStatus) {\n        throw new Error('CredentialStatus must be passed as a param while registerting credential status');\n      }\n      if (!proof) {\n        throw new Error('Proof must be passed as a param while registering crdential status');\n      }\n      const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgRegisterCredentialStatus}`;\n      const txMessage = {\n        typeUrl,\n        value: generatedProto[constants_1.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({\n          credentialStatus,\n          proof,\n          creator: client_1.HIDClient.getHidWalletAddress()\n        })\n      };\n      return txMessage;\n    });\n  }\n  registerCredentialStatusBulk(txMessages) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.hidClient) {\n        throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n      }\n      const fee = 'auto';\n      const hidClient = client_1.HIDClient.getHidClient();\n      const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), txMessages, fee);\n      return txResult;\n    });\n  }\n  resolveCredentialStatus(credentialId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      credentialId = credentialId + ':'; // TODO:  we need to sort this out ... need to remove later\n      const get_didUrl = `${this.credentialRestEP}/${credentialId}`;\n      let response;\n      try {\n        response = yield axios_1.default.get(get_didUrl);\n        if (!response.data) {\n          throw new Error('Could not resolve credential status of credentialId ' + credentialId);\n        }\n        const credStatus = response.data.credStatus;\n        if (!credStatus || !credStatus.claim || !credStatus.proof) {\n          throw new Error('No credential status found. Probably invalid credentialId');\n        }\n        return credStatus;\n      } catch (err) {\n        const credStatus = {\n          claim: null,\n          issuer: '',\n          issuanceDate: '',\n          expirationDate: '',\n          credentialHash: '',\n          proof: null\n        };\n        if (!credStatus || !credStatus.claim || !credStatus.proof) {\n          throw new Error('No credential status found. Probably invalid credentialId');\n        }\n        return credStatus;\n      }\n    });\n  }\n}\nexports.CredentialRPC = CredentialRPC;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__importDefault","exports","CredentialRPC","constants_1","require","generatedProto","axios_1","client_1","constructor","offlineSigner","nodeRpcEndpoint","nodeRestEndpoint","hidClient","HIDClient","credentialRestEP","hidNodeRestEndpoint","HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH","init","Error","registerCredentialStatus","credentialStatus","proof","typeUrl","HID_COSMOS_MODULE","HIDRpcEnums","MsgRegisterCredentialStatus","txMessage","fromPartial","creator","getHidWalletAddress","fee","getHidClient","txResult","signAndBroadcast","generateCredentialStatusTxnMessage","registerCredentialStatusBulk","txMessages","resolveCredentialStatus","credentialId","get_didUrl","response","default","data","credStatus","claim","err","issuer","issuanceDate","expirationDate","credentialHash"],"sources":["/home/pratap/hid-ssi-js-sdk/build/src/credential/credRPC.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialRPC = void 0;\nconst constants_1 = require(\"../constants\");\nconst generatedProto = __importStar(require(\"../../libs/generated/ssi/tx\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst client_1 = require(\"../hid/client\");\nclass CredentialRPC {\n    constructor({ offlineSigner, nodeRpcEndpoint, nodeRestEndpoint, }) {\n        if (offlineSigner) {\n            this.hidClient = new client_1.HIDClient(offlineSigner, nodeRpcEndpoint, nodeRestEndpoint);\n        }\n        else {\n            this.hidClient = null;\n        }\n        this.credentialRestEP =\n            (client_1.HIDClient.hidNodeRestEndpoint ? client_1.HIDClient.hidNodeRestEndpoint : nodeRestEndpoint) +\n                constants_1.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n            }\n            yield this.hidClient.init();\n        });\n    }\n    registerCredentialStatus(credentialStatus, proof) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!credentialStatus) {\n                throw new Error('CredentialStatus must be passed as a param while registerting credential status');\n            }\n            if (!proof) {\n                throw new Error('Proof must be passed as a param while registering crdential status');\n            }\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgRegisterCredentialStatus}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({\n                    credentialStatus,\n                    proof,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                }),\n            };\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), [txMessage], fee);\n            return txResult;\n        });\n    }\n    generateCredentialStatusTxnMessage(credentialStatus, proof) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!credentialStatus) {\n                throw new Error('CredentialStatus must be passed as a param while registerting credential status');\n            }\n            if (!proof) {\n                throw new Error('Proof must be passed as a param while registering crdential status');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgRegisterCredentialStatus}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({\n                    credentialStatus,\n                    proof,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                }),\n            };\n            return txMessage;\n        });\n    }\n    registerCredentialStatusBulk(txMessages) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n            }\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), txMessages, fee);\n            return txResult;\n        });\n    }\n    resolveCredentialStatus(credentialId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            credentialId = credentialId + ':'; // TODO:  we need to sort this out ... need to remove later\n            const get_didUrl = `${this.credentialRestEP}/${credentialId}`;\n            let response;\n            try {\n                response = yield axios_1.default.get(get_didUrl);\n                if (!response.data) {\n                    throw new Error('Could not resolve credential status of credentialId ' + credentialId);\n                }\n                const credStatus = response.data.credStatus;\n                if (!credStatus || !credStatus.claim || !credStatus.proof) {\n                    throw new Error('No credential status found. Probably invalid credentialId');\n                }\n                return credStatus;\n            }\n            catch (err) {\n                const credStatus = {\n                    claim: null,\n                    issuer: '',\n                    issuanceDate: '',\n                    expirationDate: '',\n                    credentialHash: '',\n                    proof: null,\n                };\n                if (!credStatus || !credStatus.claim || !credStatus.proof) {\n                    throw new Error('No credential status found. Probably invalid credentialId');\n                }\n                return credStatus;\n            }\n        });\n    }\n}\nexports.CredentialRPC = CredentialRPC;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}