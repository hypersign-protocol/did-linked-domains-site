{"ast":null,"code":"\"use strict\";\n\n/* @ts-ignore */\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Verify = void 0;\nconst vc_1 = require(\"@digitalbazaar/vc\");\n/* @ts-ignore */\nconst jsonld_signatures_1 = require(\"jsonld-signatures\");\n/* @ts-ignore */\nconst jsonld_1 = __importDefault(require(\"jsonld\"));\n/* @ts-ignore */\nconst ed25519_signature_2020_1 = require(\"@digitalbazaar/ed25519-signature-2020\");\n/* @ts-ignore */\nconst ed25519_verification_key_2020_1 = require(\"@digitalbazaar/ed25519-verification-key-2020\");\nconst api_1 = require(\"../utils/api\");\nconst utils_1 = require(\"../utils\");\nclass Verify {\n  constructor(did, domain) {\n    this.suite = new ed25519_signature_2020_1.Ed25519Signature2020();\n    this.domain = new URL(domain);\n    Verify.validateDID(did);\n    this.did = did;\n  }\n  static validateDID(did) {\n    if (!did.startsWith('did:hid:')) {\n      throw new Error('DID is invalid');\n    }\n    return true;\n  }\n  verify() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.finalResult = {\n        verified: true,\n        results: []\n      };\n      const resp1 = yield this.resolveDid();\n      const did = resp1.data;\n      const resp2 = yield this.resolveDidConfig();\n      const didConfig = resp2.data;\n      //4 The implementer MUST perform DID resolution on the DID specified in the Issuer of the Domain Linkage Credential to obtain the associated DID document.\n      const credential = didConfig.linked_dids[0];\n      if (this.did !== did.id || this.did !== credential.issuer) {\n        this.finalResult.verified = false;\n        this.finalResult.results.push({\n          error: new Error('Resource DID and Issuer DID are not same'),\n          proof: undefined,\n          purposeResult: undefined,\n          verificationMethod: undefined,\n          verified: false\n        });\n      }\n      // https://identity.foundation/.well-known/resources/did-configuration/#did-configuration-resource-verification\n      if (did.id !== credential.issuer) {\n        this.finalResult.results.push({\n          error: new Error('Passed DID and Issuer DID are not same'),\n          proof: undefined,\n          purposeResult: undefined,\n          verificationMethod: undefined,\n          verified: false\n        });\n      }\n      //1 The credentialSubject.id MUST be a DID, and the value MUST be equal to both the Subject and Issuer of the Domain Linkage Credential.\n      if (credential.credentialSubject.id !== credential.issuer) {\n        this.finalResult.results.push({\n          error: new Error('Credential Subject ID and Issuer DID are not same'),\n          proof: undefined,\n          purposeResult: undefined,\n          verificationMethod: undefined,\n          verified: false\n        });\n      }\n      //3 The credentialSubject.origin property MUST be present, and its value MUST match the origin the resource was requested from.\n      if (credential.credentialSubject.origin !== this.domain.host) {\n        this.finalResult.results.push({\n          error: new Error('Resource DID and Issuer DID are not same'),\n          proof: undefined,\n          purposeResult: undefined,\n          verificationMethod: undefined,\n          verified: false\n        });\n      }\n      const verificationMethodId = credential.proof.verificationMethod;\n      const verificationMethod = did.verificationMethod.find(method => method.id === verificationMethodId);\n      this.suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n        key: yield new ed25519_verification_key_2020_1.Ed25519VerificationKey2020({\n          id: verificationMethod.id,\n          controller: verificationMethod.controller,\n          publicKeyMultibase: (0, utils_1.convertPublickeyToMultibaseEd25519VerificationKey)(verificationMethod.publicKeyMultibase)\n        })\n      });\n      const result = yield this._verifyCredential({\n        credential: credential,\n        suite: this.suite,\n        purpose: new jsonld_signatures_1.purposes.AssertionProofPurpose({\n          controller: {\n            '@context': 'https://w3id.org/security/v2',\n            id: this.did,\n            assertionMethod: [verificationMethodId]\n          }\n        }),\n        documentLoader: url => __awaiter(this, void 0, void 0, function* () {\n          return yield jsonld_1.default.documentLoader(url);\n        })\n      });\n      this.finalResult.results.push(result.results[0]);\n      for (const result of this.finalResult.results) {\n        if (!result.verified) {\n          this.finalResult.verified = false;\n          break;\n        }\n      }\n      return this.finalResult;\n    });\n  }\n  _verifyCredential({\n    credential,\n    suite,\n    purpose,\n    documentLoader\n  }) {\n    return __awaiter(this, void 0, void 0, function* () {\n      //6 The Domain Linkage Credential must be in either a Linked Data Proof Format or JSON Web Token Proof Format\n      return yield (0, vc_1.verifyCredential)({\n        credential: credential,\n        suite: suite,\n        purpose: purpose,\n        documentLoader: documentLoader\n      });\n    });\n  }\n  resolveDid() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverURL = this.domain + '.well-known/did.json';\n      return yield (0, api_1.makeCall)(resolverURL, 'GET');\n    });\n  }\n  resolveDidConfig() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverURL = this.domain + '.well-known/did-configuration.json';\n      return yield (0, api_1.makeCall)(resolverURL, 'GET');\n    });\n  }\n}\nexports.Verify = Verify;","map":{"version":3,"names":["require","vc_1","jsonld_signatures_1","jsonld_1","__importDefault","ed25519_signature_2020_1","ed25519_verification_key_2020_1","api_1","utils_1","Verify","constructor","did","domain","suite","Ed25519Signature2020","URL","validateDID","startsWith","Error","verify","finalResult","verified","results","resp1","resolveDid","data","resp2","resolveDidConfig","didConfig","credential","linked_dids","id","issuer","push","error","proof","undefined","purposeResult","verificationMethod","credentialSubject","origin","host","verificationMethodId","find","method","key","Ed25519VerificationKey2020","controller","publicKeyMultibase","convertPublickeyToMultibaseEd25519VerificationKey","result","_verifyCredential","purpose","purposes","AssertionProofPurpose","assertionMethod","documentLoader","url","__awaiter","default","verifyCredential","resolverURL","makeCall","exports"],"sources":["../../src/verification/verify.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}