{"ast":null,"code":"\"use strict\";\n\nvar _classPrivateMethodInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodInitSpec.js\").default;\nvar _classPrivateFieldInitSpec = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldInitSpec.js\").default;\nvar _classPrivateFieldGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\").default;\nvar _classPrivateMethodGet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateMethodGet.js\").default;\nvar _classPrivateFieldSet = require(\"/home/pratap/domain-linkege/node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilterIdPendingSubscriber = exports.FilterIdEventSubscriber = exports.FilterIdSubscriber = void 0;\nconst index_js_1 = require(\"../utils/index.js\");\nconst subscriber_polling_js_1 = require(\"./subscriber-polling.js\");\nfunction copy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n/**\n *  Some backends support subscribing to events using a Filter ID.\n *\n *  When subscribing with this technique, the node issues a unique\n *  //Filter ID//. At this point the node dedicates resources to\n *  the filter, so that periodic calls to follow up on the //Filter ID//\n *  will receive any events since the last call.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _filterIdPromise = /*#__PURE__*/new WeakMap();\nvar _poller = /*#__PURE__*/new WeakMap();\nvar _running = /*#__PURE__*/new WeakMap();\nvar _network = /*#__PURE__*/new WeakMap();\nvar _hault = /*#__PURE__*/new WeakMap();\nvar _poll = /*#__PURE__*/new WeakSet();\nvar _teardown = /*#__PURE__*/new WeakSet();\nclass FilterIdSubscriber {\n  /**\n   *  Creates a new **FilterIdSubscriber** which will used [[_subscribe]]\n   *  and [[_emitResults]] to setup the subscription and provide the event\n   *  to the %%provider%%.\n   */\n  constructor(provider) {\n    _classPrivateMethodInitSpec(this, _teardown);\n    _classPrivateMethodInitSpec(this, _poll);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _filterIdPromise, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _poller, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _running, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _network, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _hault, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _provider, provider);\n    _classPrivateFieldSet(this, _filterIdPromise, null);\n    _classPrivateFieldSet(this, _poller, _classPrivateMethodGet(this, _poll, _poll2).bind(this));\n    _classPrivateFieldSet(this, _running, false);\n    _classPrivateFieldSet(this, _network, null);\n    _classPrivateFieldSet(this, _hault, false);\n  }\n  /**\n   *  Sub-classes **must** override this to begin the subscription.\n   */\n  _subscribe(provider) {\n    throw new Error(\"subclasses must override this\");\n  }\n  /**\n   *  Sub-classes **must** override this handle the events.\n   */\n  _emitResults(provider, result) {\n    throw new Error(\"subclasses must override this\");\n  }\n  /**\n   *  Sub-classes **must** override this handle recovery on errors.\n   */\n  _recover(provider) {\n    throw new Error(\"subclasses must override this\");\n  }\n  start() {\n    if (_classPrivateFieldGet(this, _running)) {\n      return;\n    }\n    _classPrivateFieldSet(this, _running, true);\n    _classPrivateMethodGet(this, _poll, _poll2).call(this, -2);\n  }\n  stop() {\n    if (!_classPrivateFieldGet(this, _running)) {\n      return;\n    }\n    _classPrivateFieldSet(this, _running, false);\n    _classPrivateFieldSet(this, _hault, true);\n    _classPrivateMethodGet(this, _teardown, _teardown2).call(this);\n    _classPrivateFieldGet(this, _provider).off(\"block\", _classPrivateFieldGet(this, _poller));\n  }\n  pause(dropWhilePaused) {\n    if (dropWhilePaused) {\n      _classPrivateMethodGet(this, _teardown, _teardown2).call(this);\n    }\n    _classPrivateFieldGet(this, _provider).off(\"block\", _classPrivateFieldGet(this, _poller));\n  }\n  resume() {\n    this.start();\n  }\n}\nasync function _poll2(blockNumber) {\n  try {\n    // Subscribe if necessary\n    if (_classPrivateFieldGet(this, _filterIdPromise) == null) {\n      _classPrivateFieldSet(this, _filterIdPromise, this._subscribe(_classPrivateFieldGet(this, _provider)));\n    }\n    // Get the Filter ID\n    let filterId = null;\n    try {\n      filterId = await _classPrivateFieldGet(this, _filterIdPromise);\n    } catch (error) {\n      if (!(0, index_js_1.isError)(error, \"UNSUPPORTED_OPERATION\") || error.operation !== \"eth_newFilter\") {\n        throw error;\n      }\n    }\n    // The backend does not support Filter ID; downgrade to\n    // polling\n    if (filterId == null) {\n      _classPrivateFieldSet(this, _filterIdPromise, null);\n      _classPrivateFieldGet(this, _provider)._recoverSubscriber(this, this._recover(_classPrivateFieldGet(this, _provider)));\n      return;\n    }\n    const network = await _classPrivateFieldGet(this, _provider).getNetwork();\n    if (!_classPrivateFieldGet(this, _network)) {\n      _classPrivateFieldSet(this, _network, network);\n    }\n    if (_classPrivateFieldGet(this, _network).chainId !== network.chainId) {\n      throw new Error(\"chaid changed\");\n    }\n    if (_classPrivateFieldGet(this, _hault)) {\n      return;\n    }\n    const result = await _classPrivateFieldGet(this, _provider).send(\"eth_getFilterChanges\", [filterId]);\n    await this._emitResults(_classPrivateFieldGet(this, _provider), result);\n  } catch (error) {\n    console.log(\"@TODO\", error);\n  }\n  _classPrivateFieldGet(this, _provider).once(\"block\", _classPrivateFieldGet(this, _poller));\n}\nfunction _teardown2() {\n  const filterIdPromise = _classPrivateFieldGet(this, _filterIdPromise);\n  if (filterIdPromise) {\n    _classPrivateFieldSet(this, _filterIdPromise, null);\n    filterIdPromise.then(filterId => {\n      _classPrivateFieldGet(this, _provider).send(\"eth_uninstallFilter\", [filterId]);\n    });\n  }\n}\nexports.FilterIdSubscriber = FilterIdSubscriber;\n/**\n *  A **FilterIdSubscriber** for receiving contract events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nvar _event = /*#__PURE__*/new WeakMap();\nclass FilterIdEventSubscriber extends FilterIdSubscriber {\n  /**\n   *  Creates a new **FilterIdEventSubscriber** attached to %%provider%%\n   *  listening for %%filter%%.\n   */\n  constructor(provider, filter) {\n    super(provider);\n    _classPrivateFieldInitSpec(this, _event, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _event, copy(filter));\n  }\n  _recover(provider) {\n    return new subscriber_polling_js_1.PollingEventSubscriber(provider, _classPrivateFieldGet(this, _event));\n  }\n  async _subscribe(provider) {\n    const filterId = await provider.send(\"eth_newFilter\", [_classPrivateFieldGet(this, _event)]);\n    return filterId;\n  }\n  async _emitResults(provider, results) {\n    for (const result of results) {\n      provider.emit(_classPrivateFieldGet(this, _event), provider._wrapLog(result, provider._network));\n    }\n  }\n}\nexports.FilterIdEventSubscriber = FilterIdEventSubscriber;\n/**\n *  A **FilterIdSubscriber** for receiving pending transactions events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nclass FilterIdPendingSubscriber extends FilterIdSubscriber {\n  async _subscribe(provider) {\n    return await provider.send(\"eth_newPendingTransactionFilter\", []);\n  }\n  async _emitResults(provider, results) {\n    for (const result of results) {\n      provider.emit(\"pending\", result);\n    }\n  }\n}\nexports.FilterIdPendingSubscriber = FilterIdPendingSubscriber;","map":{"version":3,"names":["index_js_1","require","subscriber_polling_js_1","copy","obj","JSON","parse","stringify","_provider","WeakMap","_filterIdPromise","_poller","_running","_network","_hault","_poll","WeakSet","_teardown","FilterIdSubscriber","constructor","provider","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","value","_classPrivateFieldSet","_classPrivateMethodGet","_poll2","bind","_subscribe","Error","_emitResults","result","_recover","start","_classPrivateFieldGet","call","stop","_teardown2","off","pause","dropWhilePaused","resume","blockNumber","filterId","error","isError","operation","_recoverSubscriber","network","getNetwork","chainId","send","console","log","once","filterIdPromise","then","exports","_event","FilterIdEventSubscriber","filter","PollingEventSubscriber","results","emit","_wrapLog","FilterIdPendingSubscriber"],"sources":["../../src.ts/providers/subscriber-filterid.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,MAAAA,UAAA,GAAAC,OAAA;AAEA,MAAAC,uBAAA,GAAAD,OAAA;AAOA,SAASE,IAAIA,CAACC,GAAQ;EAClB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,GAAG,CAAC,CAAC;AAC1C;AAEA;;;;;;;;;;AAAA,IAAAI,SAAA,oBAAAC,OAAA;AAAA,IAAAC,gBAAA,oBAAAD,OAAA;AAAA,IAAAE,OAAA,oBAAAF,OAAA;AAAA,IAAAG,QAAA,oBAAAH,OAAA;AAAA,IAAAI,QAAA,oBAAAJ,OAAA;AAAA,IAAAK,MAAA,oBAAAL,OAAA;AAAA,IAAAM,KAAA,oBAAAC,OAAA;AAAA,IAAAC,SAAA,oBAAAD,OAAA;AAUA,MAAaE,kBAAkB;EAY3B;;;;;EAKAC,YAAYC,QAA4B;IAAAC,2BAAA,OAAAJ,SAAA;IAAAI,2BAAA,OAAAN,KAAA;IAAAO,0BAAA,OAAAd,SAAA;MAAAe,QAAA;MAAAC,KAAA;IAAA;IAAAF,0BAAA,OAAAZ,gBAAA;MAAAa,QAAA;MAAAC,KAAA;IAAA;IAAAF,0BAAA,OAAAX,OAAA;MAAAY,QAAA;MAAAC,KAAA;IAAA;IAAAF,0BAAA,OAAAV,QAAA;MAAAW,QAAA;MAAAC,KAAA;IAAA;IAAAF,0BAAA,OAAAT,QAAA;MAAAU,QAAA;MAAAC,KAAA;IAAA;IAAAF,0BAAA,OAAAR,MAAA;MAAAS,QAAA;MAAAC,KAAA;IAAA;IACpCC,qBAAA,KAAI,EAAAjB,SAAA,EAAaY,QAAQ;IAEzBK,qBAAA,KAAI,EAAAf,gBAAA,EAAoB,IAAI;IAC5Be,qBAAA,KAAI,EAAAd,OAAA,EAAWe,sBAAA,KAAI,EAAAX,KAAA,EAAAY,MAAA,EAAOC,IAAI,CAAC,IAAI,CAAC;IAEpCH,qBAAA,KAAI,EAAAb,QAAA,EAAY,KAAK;IAErBa,qBAAA,KAAI,EAAAZ,QAAA,EAAY,IAAI;IAEpBY,qBAAA,KAAI,EAAAX,MAAA,EAAU,KAAK;EACvB;EAEA;;;EAGAe,UAAUA,CAACT,QAA4B;IACnC,MAAM,IAAIU,KAAK,CAAC,+BAA+B,CAAC;EACpD;EAEA;;;EAGAC,YAAYA,CAACX,QAA0B,EAAEY,MAAkB;IACvD,MAAM,IAAIF,KAAK,CAAC,+BAA+B,CAAC;EACpD;EAEA;;;EAGAG,QAAQA,CAACb,QAA0B;IAC/B,MAAM,IAAIU,KAAK,CAAC,+BAA+B,CAAC;EACpD;EAqDAI,KAAKA,CAAA;IACD,IAAAC,qBAAA,CAAI,IAAI,EAAAvB,QAAA,GAAW;MAAE;;IACrBa,qBAAA,KAAI,EAAAb,QAAA,EAAY,IAAI;IAEpBc,sBAAA,KAAI,EAAAX,KAAA,EAAAY,MAAA,EAAAS,IAAA,CAAJ,IAAI,EAAO,CAAC,CAAC;EACjB;EAEAC,IAAIA,CAAA;IACA,IAAI,CAAAF,qBAAA,CAAC,IAAI,EAAAvB,QAAA,CAAS,EAAE;MAAE;;IACtBa,qBAAA,KAAI,EAAAb,QAAA,EAAY,KAAK;IAErBa,qBAAA,KAAI,EAAAX,MAAA,EAAU,IAAI;IAClBY,sBAAA,KAAI,EAAAT,SAAA,EAAAqB,UAAA,EAAAF,IAAA,CAAJ,IAAI;IACJD,qBAAA,KAAI,EAAA3B,SAAA,EAAW+B,GAAG,CAAC,OAAO,EAAAJ,qBAAA,CAAE,IAAI,EAAAxB,OAAA,CAAQ,CAAC;EAC7C;EAEA6B,KAAKA,CAACC,eAAyB;IAC3B,IAAIA,eAAe,EAAC;MAAEf,sBAAA,KAAI,EAAAT,SAAA,EAAAqB,UAAA,EAAAF,IAAA,CAAJ,IAAI;;IAC1BD,qBAAA,KAAI,EAAA3B,SAAA,EAAW+B,GAAG,CAAC,OAAO,EAAAJ,qBAAA,CAAE,IAAI,EAAAxB,OAAA,CAAQ,CAAC;EAC7C;EAEA+B,MAAMA,CAAA;IAAW,IAAI,CAACR,KAAK,EAAE;EAAE;;AAClC,eAAAP,OAzEegB,WAAmB;EAC3B,IAAI;IACA;IACA,IAAIR,qBAAA,KAAI,EAAAzB,gBAAA,KAAqB,IAAI,EAAE;MAC/Be,qBAAA,KAAI,EAAAf,gBAAA,EAAoB,IAAI,CAACmB,UAAU,CAAAM,qBAAA,CAAC,IAAI,EAAA3B,SAAA,CAAU,CAAC;;IAG3D;IACA,IAAIoC,QAAQ,GAAkB,IAAI;IAClC,IAAI;MACAA,QAAQ,GAAG,MAAAT,qBAAA,CAAM,IAAI,EAAAzB,gBAAA,CAAiB;KACzC,CAAC,OAAOmC,KAAK,EAAE;MACZ,IAAI,CAAC,IAAA7C,UAAA,CAAA8C,OAAO,EAACD,KAAK,EAAE,uBAAuB,CAAC,IAAIA,KAAK,CAACE,SAAS,KAAK,eAAe,EAAE;QACjF,MAAMF,KAAK;;;IAInB;IACA;IACA,IAAID,QAAQ,IAAI,IAAI,EAAE;MAClBnB,qBAAA,KAAI,EAAAf,gBAAA,EAAoB,IAAI;MAC5ByB,qBAAA,KAAI,EAAA3B,SAAA,EAAWwC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAACf,QAAQ,CAAAE,qBAAA,CAAC,IAAI,EAAA3B,SAAA,CAAU,CAAC,CAAC;MACtE;;IAGJ,MAAMyC,OAAO,GAAG,MAAMd,qBAAA,KAAI,EAAA3B,SAAA,EAAW0C,UAAU,EAAE;IACjD,IAAI,CAAAf,qBAAA,CAAC,IAAI,EAAAtB,QAAA,CAAS,EAAE;MAAEY,qBAAA,KAAI,EAAAZ,QAAA,EAAYoC,OAAO;;IAE7C,IAAKd,qBAAA,KAAI,EAAAtB,QAAA,EAAsBsC,OAAO,KAAKF,OAAO,CAACE,OAAO,EAAE;MACxD,MAAM,IAAIrB,KAAK,CAAC,eAAe,CAAC;;IAGpC,IAAAK,qBAAA,CAAI,IAAI,EAAArB,MAAA,GAAS;MAAE;;IAEnB,MAAMkB,MAAM,GAAG,MAAMG,qBAAA,KAAI,EAAA3B,SAAA,EAAW4C,IAAI,CAAC,sBAAsB,EAAE,CAAER,QAAQ,CAAE,CAAC;IAC9E,MAAM,IAAI,CAACb,YAAY,CAAAI,qBAAA,CAAC,IAAI,EAAA3B,SAAA,GAAYwB,MAAM,CAAC;GAClD,CAAC,OAAOa,KAAK,EAAE;IAAEQ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAET,KAAK,CAAC;;EAE7CV,qBAAA,KAAI,EAAA3B,SAAA,EAAW+C,IAAI,CAAC,OAAO,EAAApB,qBAAA,CAAE,IAAI,EAAAxB,OAAA,CAAQ,CAAC;AAC9C;AAAC,SAAA2B,WAAA,EAEQ;EACL,MAAMkB,eAAe,GAAArB,qBAAA,CAAG,IAAI,EAAAzB,gBAAA,CAAiB;EAC7C,IAAI8C,eAAe,EAAE;IACjB/B,qBAAA,KAAI,EAAAf,gBAAA,EAAoB,IAAI;IAC5B8C,eAAe,CAACC,IAAI,CAAEb,QAAQ,IAAI;MAC9BT,qBAAA,KAAI,EAAA3B,SAAA,EAAW4C,IAAI,CAAC,qBAAqB,EAAE,CAAER,QAAQ,CAAE,CAAC;IAC5D,CAAC,CAAC;;AAEV;AApGJc,OAAA,CAAAxC,kBAAA,GAAAA,kBAAA;AA8HA;;;;;AAAA,IAAAyC,MAAA,oBAAAlD,OAAA;AAKA,MAAamD,uBAAwB,SAAQ1C,kBAAkB;EAG3D;;;;EAIAC,YAAYC,QAA4B,EAAEyC,MAAmB;IACzD,KAAK,CAACzC,QAAQ,CAAC;IAACE,0BAAA,OAAAqC,MAAA;MAAApC,QAAA;MAAAC,KAAA;IAAA;IAChBC,qBAAA,KAAI,EAAAkC,MAAA,EAAUxD,IAAI,CAAC0D,MAAM,CAAC;EAC9B;EAEA5B,QAAQA,CAACb,QAA0B;IAC/B,OAAO,IAAIlB,uBAAA,CAAA4D,sBAAsB,CAAC1C,QAAQ,EAAAe,qBAAA,CAAE,IAAI,EAAAwB,MAAA,CAAO,CAAC;EAC5D;EAEA,MAAM9B,UAAUA,CAACT,QAA4B;IACzC,MAAMwB,QAAQ,GAAG,MAAMxB,QAAQ,CAACgC,IAAI,CAAC,eAAe,EAAE,CAAAjB,qBAAA,CAAE,IAAI,EAAAwB,MAAA,EAAS,CAAC;IACtE,OAAOf,QAAQ;EACnB;EAEA,MAAMb,YAAYA,CAACX,QAA4B,EAAE2C,OAAmB;IAChE,KAAK,MAAM/B,MAAM,IAAI+B,OAAO,EAAE;MAC1B3C,QAAQ,CAAC4C,IAAI,CAAA7B,qBAAA,CAAC,IAAI,EAAAwB,MAAA,GAASvC,QAAQ,CAAC6C,QAAQ,CAACjC,MAAM,EAAEZ,QAAQ,CAACP,QAAQ,CAAC,CAAC;;EAEhF;;AAzBJ6C,OAAA,CAAAE,uBAAA,GAAAA,uBAAA;AA4BA;;;;;AAKA,MAAaM,yBAA0B,SAAQhD,kBAAkB;EAC7D,MAAMW,UAAUA,CAACT,QAA4B;IACzC,OAAO,MAAMA,QAAQ,CAACgC,IAAI,CAAC,iCAAiC,EAAE,EAAG,CAAC;EACtE;EAEA,MAAMrB,YAAYA,CAACX,QAA4B,EAAE2C,OAAmB;IAChE,KAAK,MAAM/B,MAAM,IAAI+B,OAAO,EAAE;MAC1B3C,QAAQ,CAAC4C,IAAI,CAAC,SAAS,EAAEhC,MAAM,CAAC;;EAExC;;AATJ0B,OAAA,CAAAQ,yBAAA,GAAAA,yBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}