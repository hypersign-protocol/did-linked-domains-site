{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst long_1 = __importDefault(require(\"long\"));\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\nconst connection_1 = require(\"../../../../ibc/core/connection/v1/connection\");\nconst client_1 = require(\"../../../../ibc/core/client/v1/client\");\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nconst baseQueryConnectionRequest = {\n  connectionId: \"\"\n};\nexports.QueryConnectionRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionRequest);\n    message.connectionId = object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryConnectionRequest);\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nconst baseQueryConnectionResponse = {};\nexports.QueryConnectionResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connection !== undefined) {\n      connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionResponse);\n    message.proof = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionResponse);\n    message.connection = object.connection !== undefined && object.connection !== null ? connection_1.ConnectionEnd.fromJSON(object.connection) : undefined;\n    message.proof = object.proof !== undefined && object.proof !== null ? bytesFromBase64(object.proof) : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromJSON(object.proofHeight) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connection !== undefined && (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryConnectionResponse);\n    message.connection = object.connection !== undefined && object.connection !== null ? connection_1.ConnectionEnd.fromPartial(object.connection) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nconst baseQueryConnectionsRequest = {};\nexports.QueryConnectionsRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionsRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionsRequest);\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromJSON(object.pagination) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = Object.assign({}, baseQueryConnectionsRequest);\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageRequest.fromPartial(object.pagination) : undefined;\n    return message;\n  }\n};\nconst baseQueryConnectionsResponse = {};\nexports.QueryConnectionsResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.connections) {\n      connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionsResponse);\n    message.connections = [];\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryConnectionsResponse);\n    message.connections = ((_a = object.connections) !== null && _a !== void 0 ? _a : []).map(e => connection_1.IdentifiedConnection.fromJSON(e));\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromJSON(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? client_1.Height.fromJSON(object.height) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connections) {\n      obj.connections = message.connections.map(e => e ? connection_1.IdentifiedConnection.toJSON(e) : undefined);\n    } else {\n      obj.connections = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryConnectionsResponse);\n    message.connections = ((_a = object.connections) === null || _a === void 0 ? void 0 : _a.map(e => connection_1.IdentifiedConnection.fromPartial(e))) || [];\n    message.pagination = object.pagination !== undefined && object.pagination !== null ? pagination_1.PageResponse.fromPartial(object.pagination) : undefined;\n    message.height = object.height !== undefined && object.height !== null ? client_1.Height.fromPartial(object.height) : undefined;\n    return message;\n  }\n};\nconst baseQueryClientConnectionsRequest = {\n  clientId: \"\"\n};\nexports.QueryClientConnectionsRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientConnectionsRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryClientConnectionsRequest);\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryClientConnectionsRequest);\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nconst baseQueryClientConnectionsResponse = {\n  connectionPaths: \"\"\n};\nexports.QueryClientConnectionsResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    for (const v of message.connectionPaths) {\n      writer.uint32(10).string(v);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryClientConnectionsResponse);\n    message.connectionPaths = [];\n    message.proof = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionPaths.push(reader.string());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryClientConnectionsResponse);\n    message.connectionPaths = ((_a = object.connectionPaths) !== null && _a !== void 0 ? _a : []).map(e => String(e));\n    message.proof = object.proof !== undefined && object.proof !== null ? bytesFromBase64(object.proof) : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromJSON(object.proofHeight) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connectionPaths) {\n      obj.connectionPaths = message.connectionPaths.map(e => e);\n    } else {\n      obj.connectionPaths = [];\n    }\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, baseQueryClientConnectionsResponse);\n    message.connectionPaths = ((_a = object.connectionPaths) === null || _a === void 0 ? void 0 : _a.map(e => e)) || [];\n    message.proof = (_b = object.proof) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nconst baseQueryConnectionClientStateRequest = {\n  connectionId: \"\"\n};\nexports.QueryConnectionClientStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n    message.connectionId = object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryConnectionClientStateRequest);\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    return message;\n  }\n};\nconst baseQueryConnectionClientStateResponse = {};\nexports.QueryConnectionClientStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.identifiedClientState !== undefined) {\n      client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n    message.proof = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromJSON(object.identifiedClientState) : undefined;\n    message.proof = object.proof !== undefined && object.proof !== null ? bytesFromBase64(object.proof) : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromJSON(object.proofHeight) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.identifiedClientState !== undefined && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : undefined);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryConnectionClientStateResponse);\n    message.identifiedClientState = object.identifiedClientState !== undefined && object.identifiedClientState !== null ? client_1.IdentifiedClientState.fromPartial(object.identifiedClientState) : undefined;\n    message.proof = (_a = object.proof) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nconst baseQueryConnectionConsensusStateRequest = {\n  connectionId: \"\",\n  revisionNumber: long_1.default.UZERO,\n  revisionHeight: long_1.default.UZERO\n};\nexports.QueryConnectionConsensusStateRequest = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (!message.revisionNumber.isZero()) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (!message.revisionHeight.isZero()) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n    message.connectionId = object.connectionId !== undefined && object.connectionId !== null ? String(object.connectionId) : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? long_1.default.fromString(object.revisionNumber) : long_1.default.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? long_1.default.fromString(object.revisionHeight) : long_1.default.UZERO;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || long_1.default.UZERO).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    var _a;\n    const message = Object.assign({}, baseQueryConnectionConsensusStateRequest);\n    message.connectionId = (_a = object.connectionId) !== null && _a !== void 0 ? _a : \"\";\n    message.revisionNumber = object.revisionNumber !== undefined && object.revisionNumber !== null ? long_1.default.fromValue(object.revisionNumber) : long_1.default.UZERO;\n    message.revisionHeight = object.revisionHeight !== undefined && object.revisionHeight !== null ? long_1.default.fromValue(object.revisionHeight) : long_1.default.UZERO;\n    return message;\n  }\n};\nconst baseQueryConnectionConsensusStateResponse = {\n  clientId: \"\"\n};\nexports.QueryConnectionConsensusStateResponse = {\n  encode(message, writer = minimal_1.default.Writer.create()) {\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n    message.proof = new Uint8Array();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? any_1.Any.fromJSON(object.consensusState) : undefined;\n    message.clientId = object.clientId !== undefined && object.clientId !== null ? String(object.clientId) : \"\";\n    message.proof = object.proof !== undefined && object.proof !== null ? bytesFromBase64(object.proof) : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromJSON(object.proofHeight) : undefined;\n    return message;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.proof !== undefined && (obj.proof = base64FromBytes(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    var _a, _b;\n    const message = Object.assign({}, baseQueryConnectionConsensusStateResponse);\n    message.consensusState = object.consensusState !== undefined && object.consensusState !== null ? any_1.Any.fromPartial(object.consensusState) : undefined;\n    message.clientId = (_a = object.clientId) !== null && _a !== void 0 ? _a : \"\";\n    message.proof = (_b = object.proof) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.proofHeight = object.proofHeight !== undefined && object.proofHeight !== null ? client_1.Height.fromPartial(object.proofHeight) : undefined;\n    return message;\n  }\n};\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Connection = this.Connection.bind(this);\n    this.Connections = this.Connections.bind(this);\n    this.ClientConnections = this.ClientConnections.bind(this);\n    this.ConnectionClientState = this.ConnectionClientState.bind(this);\n    this.ConnectionConsensusState = this.ConnectionConsensusState.bind(this);\n  }\n  Connection(request) {\n    const data = exports.QueryConnectionRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connection\", data);\n    return promise.then(data => exports.QueryConnectionResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  Connections(request) {\n    const data = exports.QueryConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connections\", data);\n    return promise.then(data => exports.QueryConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ClientConnections(request) {\n    const data = exports.QueryClientConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ClientConnections\", data);\n    return promise.then(data => exports.QueryClientConnectionsResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionClientState(request) {\n    const data = exports.QueryConnectionClientStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionClientState\", data);\n    return promise.then(data => exports.QueryConnectionClientStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n  ConnectionConsensusState(request) {\n    const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionConsensusState\", data);\n    return promise.then(data => exports.QueryConnectionConsensusStateResponse.decode(new minimal_1.default.Reader(data)));\n  }\n}\nexports.QueryClientImpl = QueryClientImpl;\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n  const bin = [];\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n  return btoa(bin.join(\"\"));\n}\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"names":["long_1","__importDefault","require","minimal_1","connection_1","client_1","pagination_1","any_1","exports","protobufPackage","baseQueryConnectionRequest","connectionId","QueryConnectionRequest","encode","message","writer","default","Writer","create","uint32","string","decode","input","length","reader","Reader","end","undefined","len","pos","Object","assign","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","_a","baseQueryConnectionResponse","QueryConnectionResponse","connection","ConnectionEnd","fork","ldelim","proof","bytes","proofHeight","Height","Uint8Array","bytesFromBase64","base64FromBytes","baseQueryConnectionsRequest","QueryConnectionsRequest","pagination","PageRequest","baseQueryConnectionsResponse","QueryConnectionsResponse","v","connections","IdentifiedConnection","PageResponse","height","push","map","e","baseQueryClientConnectionsRequest","clientId","QueryClientConnectionsRequest","baseQueryClientConnectionsResponse","connectionPaths","QueryClientConnectionsResponse","_b","baseQueryConnectionClientStateRequest","QueryConnectionClientStateRequest","baseQueryConnectionClientStateResponse","QueryConnectionClientStateResponse","identifiedClientState","IdentifiedClientState","baseQueryConnectionConsensusStateRequest","revisionNumber","UZERO","revisionHeight","QueryConnectionConsensusStateRequest","isZero","uint64","fromString","toString","fromValue","baseQueryConnectionConsensusStateResponse","QueryConnectionConsensusStateResponse","consensusState","Any","QueryClientImpl","constructor","rpc","Connection","bind","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","request","data","finish","promise","then","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","util","Long","configure"],"sources":["../../../../../src/ibc/core/connection/v1/query.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}