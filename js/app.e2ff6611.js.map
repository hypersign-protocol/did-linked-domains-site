{"version":3,"file":"js/app.e2ff6611.js","mappings":"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","sources":["webpack://domain-linkege/../../src/DNS01/dns01.ts","webpack://domain-linkege/../src/index.ts","webpack://domain-linkege/../../src/utils/api.ts","webpack://domain-linkege/../../src/utils/constants.ts","webpack://domain-linkege/../../src/utils/index.ts","webpack://domain-linkege/../../src/utils/keyencodingconverter.ts","webpack://domain-linkege/../../src/verification/verify.ts","webpack://domain-linkege/./src/App.vue","webpack://domain-linkege/./src/components/stepper.vue","webpack://domain-linkege/./src/components/HelloWorld.vue","webpack://domain-linkege/src/components/HelloWorld.vue","webpack://domain-linkege/./src/components/HelloWorld.vue?2e45","webpack://domain-linkege/./src/components/HelloWorld.vue?541e","webpack://domain-linkege/./src/components/poo.vue","webpack://domain-linkege/./src/scripts/DidOperations.js","webpack://domain-linkege/src/components/poo.vue","webpack://domain-linkege/./src/components/poo.vue?7031","webpack://domain-linkege/./src/components/poo.vue?69d4","webpack://domain-linkege/src/components/stepper.vue","webpack://domain-linkege/./src/components/stepper.vue?0d9d","webpack://domain-linkege/./src/components/stepper.vue?54e6","webpack://domain-linkege/src/App.vue","webpack://domain-linkege/./src/App.vue?51dd","webpack://domain-linkege/./src/App.vue?0e40","webpack://domain-linkege/./src/main.js","webpack://domain-linkege/./src/scripts/APIOps.js","webpack://domain-linkege/./src/scripts/constants.js","webpack://domain-linkege/./src/scripts/wallet.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/libs/generated/ssi/clientSpec.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/libs/generated/ssi/credential.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/libs/generated/ssi/did.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/libs/generated/ssi/schema.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/libs/generated/ssi/tx.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/libs/w3cache/v1/index.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/constants.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/credential/credRPC.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/credential/vc.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/did/IDID.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/did/did.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/did/didRPC.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/hid/client.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/index.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/presentation/vp.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/rpcFactory.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/schema/schema.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/schema/schemaRPC.js","webpack://domain-linkege/../hid-ssi-js-sdk/build/src/utils.js","webpack://domain-linkege/webpack/bootstrap","webpack://domain-linkege/webpack/runtime/amd options","webpack://domain-linkege/webpack/runtime/chunk loaded","webpack://domain-linkege/webpack/runtime/compat get default export","webpack://domain-linkege/webpack/runtime/create fake namespace object","webpack://domain-linkege/webpack/runtime/define property getters","webpack://domain-linkege/webpack/runtime/global","webpack://domain-linkege/webpack/runtime/hasOwnProperty shorthand","webpack://domain-linkege/webpack/runtime/make namespace object","webpack://domain-linkege/webpack/runtime/node module decorator","webpack://domain-linkege/webpack/runtime/jsonp chunk loading","webpack://domain-linkege/webpack/startup"],"sourcesContent":[null,null,null,null,null,null,null,"var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('StepperMain')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"section\",staticStyle:{\"padding\":\"1rem\",\"min-height\":\"600px\"}},[_c('div',{},[_c('div',{staticClass:\"columns\"},[_c('div',{staticClass:\"column is-8 is-offset-2\"},[_c('horizontal-stepper',{attrs:{\"id\":\"step\",\"steps\":_vm.steps},on:{\"completed-step\":_vm.completeStep,\"active-step\":_vm.isStepActive,\"stepper-finished\":_vm.finish}})],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"hello\"},[_c('div',{staticClass:\"form\"},[_c('p',{attrs:{\"id\":\"header\"}},[_vm._v(\"Link your domain to your App\")]),_c('div',{staticStyle:{\"float\":\"right\"},attrs:{\"id\":\"export_import\"}},[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){return _vm.import_config()}}},[_c('b-icon',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"icon\":\"arrow-down-circle-fill\",\"title\":\"Import Configuration\"}})],1),_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){return _vm.export_config()}}},[_c('b-icon',{staticStyle:{\"margin-right\":\"5px\"},attrs:{\"icon\":\"arrow-right-square-fill\",\"title\":\"Export Configuration\"}})],1),_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){return _vm.reset()}}},[_c('b-icon',{attrs:{\"icon\":\"arrow-clockwise\",\"title\":\"Reset Configuration\"}})],1)]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.domain),expression:\"domain\"}],attrs:{\"type\":\"text\",\"id\":\"domain\",\"placeholder\":\"Enter your domain name\"},domProps:{\"value\":(_vm.domain)},on:{\"input\":function($event){if($event.target.composing)return;_vm.domain=$event.target.value}}}),_c('br'),(_vm.import_file)?_c('input',{ref:\"file\",attrs:{\"type\":\"file\",\"id\":\"upload\"},on:{\"change\":_vm.filetoupload}}):_vm._e(),(_vm.import_file)?_c('button',{on:{\"click\":function($event){return _vm.upload()}}},[_vm._v(\"Upload\")]):_vm._e(),_c('button',{attrs:{\"id\":\"link\"},on:{\"click\":_vm.link}},[_vm._v(\"Link\")]),(_vm.didConfiguration)?_c('div',[_c('h6',{staticStyle:{\"color\":\"red\"}},[_vm._v(\" \"+_vm._s(_vm.didDocument ? \"Please put this two files did.json and did-configuration.json to the servers .well-known \\ folder.So it can be resolved as `${YourDomain}/.well-known/did.json` and \\ `${YourDomain}/.well-known/did-configuration.json`\": ''))]),_c('p',[_vm._v(\" 🌐 \"+_vm._s(_vm.domain ? _vm.domain : '.....')+\" \"+_vm._s(_vm.status ? _vm.status : ''))]),_c('p',[_c('a',{attrs:{\"href\":\"#\",\"id\":\"did\"},on:{\"click\":function($event){return _vm.download(_vm.didDocument, 'did.json')}}},[_vm._v(\"did.json\")]),_vm._v(\" \"),_c('json-viewer',{attrs:{\"value\":_vm.didDocument ? _vm.didDocument : {},\"expand-depth\":1,\"copyable\":\"\"}})],1),_c('p',[_c('a',{attrs:{\"href\":\"#\",\"id\":\"didconfig\"},on:{\"click\":function($event){return _vm.download(_vm.didConfiguration, 'did-configuration.json')}}},[_vm._v(\"did-configuration.json\")]),_c('json-viewer',{attrs:{\"value\":_vm.didConfiguration ? _vm.didConfiguration : {},\"expand-depth\":1,\"copyable\":\"\"}})],1)]):_vm._e(),_c('button',{attrs:{\"id\":\"verify\"},on:{\"click\":_vm.Verify}},[_vm._v(\"Verify\")])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"hello\">\n\n\n\n    <div class=\"form\">\n      <p id=\"header\">Link your domain to your App</p>\n      <div id=\"export_import\" style=\"float: right;\">\n        <a href=\"#\" @click=\"import_config()\"> <b-icon icon=\"arrow-down-circle-fill\" style=\"margin-right: 5px;\"  title=\"Import Configuration\" />\n        </a>\n\n        <a href=\"#\" @click=\"export_config()\"> <b-icon icon=\"arrow-right-square-fill\" style=\"margin-right: 5px;\" title=\"Export Configuration\" />\n        </a>\n        <a href=\"#\" @click=\"reset()\"> <b-icon icon=\"arrow-clockwise\"  title=\"Reset Configuration\" />\n        </a>\n\n\n      </div>\n      <input type=\"text\" id=\"domain\" v-model=\"domain\" placeholder=\"Enter your domain name\" />\n      <br>\n      <input type=\"file\" id=\"upload\" v-if=\"import_file\" @change=\"filetoupload\" ref=\"file\">\n      <button @click=\"upload()\" v-if=\"import_file\">Upload</button>\n      <button @click=\"link\" id=\"link\">Link</button>\n      <!-- dns text record btn -->\n      <!-- <span style=\"font-size: small;\" v-if=\"status\"> Please add <strong @click=\"copy(didDocument.id)\"\n          style=\"cursor: pointer;\">{{ didDocument.id }}</strong> as TXT record to your domain </span> -->\n      <!-- <button @click=\"Verify\" id=\"dns\" v-if=\"status\">Verify Txt Record</button> -->\n      <div v-if=\"didConfiguration\">\n\n        <h6 style=\"color: red;\">\n          {{ didDocument ? \"Please put this two files did.json and did-configuration.json to the servers .well-known \\\n                    folder.So it can be resolved as `${YourDomain}/.well-known/did.json` and \\\n                    `${YourDomain}/.well-known/did-configuration.json`\": '' }}</h6>\n        <!-- <p> 💳 {{ walletAddress ? walletAddress : '.....' }}</p> -->\n        <p> 🌐 {{ domain ? domain : '.....' }} {{ status ? status : '' }}</p>\n        <p> <a @click=\"download(didDocument, 'did.json')\" href=\"#\" id=\"did\">did.json</a> <json-viewer\n            :value=\"didDocument ? didDocument : {}\" :expand-depth=1 copyable></json-viewer></p>\n        <p> <a @click=\"download(didConfiguration, 'did-configuration.json')\" href=\"#\"\n            id=\"didconfig\">did-configuration.json</a><json-viewer :value=\"didConfiguration ? didConfiguration : {}\"\n            :expand-depth=1 copyable></json-viewer></p>\n      </div>\n      <button @click=\"Verify\" id=\"verify\">Verify</button>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  HypersignDID, HypersignVerifiableCredential\n} from 'hs-ssi-sdk'\nimport jsonld from 'jsonld'\nimport DomainLinkage from '@hypersign-protocol/domain-linkage-verifier'\nimport { purposes } from 'jsonld-signatures'\nimport { createWallet, generateMnemonicToHDSeed } from '../scripts/wallet'\nimport { issue } from '@digitalbazaar/vc'\nimport { Ed25519Signature2020 } from '@digitalbazaar/ed25519-signature-2020';\nimport { Ed25519VerificationKey2020 } from '@digitalbazaar/ed25519-verification-key-2020';\nimport {generateMnemonic} from 'bip39'\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      import_file: false,\n      didDocument: '',\n      didConfiguration: '',\n      domain: '',\n      namespace: 'testnet',\n      status: '',\n      rpc: 'https://rpc.jagrat.hypersign.id/',\n      api: 'https://api.jagrat.hypersign.id/'\n    }\n\n\n  },\n\n   mounted() {\n    const mnemonic = localStorage.getItem('mnemonic')\n    if (mnemonic) {\n      this.walletAddress = JSON.parse(localStorage.getItem('keys')).address\n      this.domain = JSON.parse(localStorage.getItem('didDocument')).service[0].serviceEndpoint.split('/')[2]\n      document.getElementById(\"verify\").style.display = \"block\";\n      document.getElementById(\"verify\").disabled = false;\n      document.getElementById(\"verify\").innerHTML = \"Next\";\n      document.getElementById(\"link\").style.display = \"none\";\n      this.didDocument = JSON.parse(localStorage.getItem('didDocument'))\n      this.didConfiguration = JSON.parse(localStorage.getItem('didConfiguration'))\n    }\n\n\n\n\n  },\n  methods: {\n    reset() {\n      localStorage.clear()\n      this.walletAddress = ''\n      this.domain = ''\n      this.didDocument = ''\n      this.didConfiguration = ''\n      document.getElementById(\"verify\").style.display = \"none\";\n      document.getElementById(\"verify\").disabled = true;\n      document.getElementById(\"verify\").innerHTML = \"Next\";\n      document.getElementById(\"link\").style.display = \"block\";\n\n\n\n\n    },\n    filetoupload() {\n      console.log(this.$refs.file.files[0]);\n    }\n    ,\n    upload() {\n      try {\n\n\n        const file = this.$refs.file.files[0]\n        const reader = new FileReader()\n        reader.onload = (e) => {\n\n          const data = JSON.parse(e.target.result)\n          localStorage.setItem('didDocument', JSON.stringify(data.didDocument))\n          localStorage.setItem('didConfiguration', JSON.stringify(data.didConfiguration))\n          localStorage.setItem('mnemonic', data.mnemonic)\n          localStorage.setItem('keys', JSON.stringify(data.keys))\n          localStorage.setItem('domain', new URL(data.didDocument.service[0].serviceEndpoint).hostname)\n          this.walletAddress = data.keys.address\n          this.domain = data.didDocument.service[0].serviceEndpoint.split('/')[2]\n          document.getElementById(\"verify\").style.display = \"block\";\n          document.getElementById(\"verify\").disabled = false;\n          document.getElementById(\"verify\").innerHTML = \"Next\";\n          document.getElementById(\"link\").style.display = \"none\";\n          this.didDocument = data.didDocument\n          this.didConfiguration = data.didConfiguration\n          this.import_file = false\n        }\n        reader.readAsText(file)\n      } catch (error) {\n        console.log(error);\n        this.alert('error', 'Something went wrong')\n\n      }\n\n    },\n    import_config() {\n      this.import_file ? this.import_file = false : this.import_file = true\n\n\n\n    },\n    export_config() {\n      const didDocument = JSON.parse(localStorage.getItem('didDocument'))\n      const didConfiguration = JSON.parse(localStorage.getItem('didConfiguration'))\n      const mnemonic = localStorage.getItem('mnemonic')\n      const keys = JSON.parse(localStorage.getItem('keys'))\n      const data = {\n        didDocument,\n        didConfiguration,\n        mnemonic,\n        keys\n      }\n      this.download(data, 'exportconfig.json')\n\n\n    },\n    async resolveDID() {\n      const resolveDID = 'https://' + this.domain + '/.well-known/did.json'\n      const resolveDIDConfig = 'https://' + this.domain + '/.well-known/did-configuration.json'\n\n      const didDocument = await this.fetch(resolveDID)\n      const didConfiguration = await this.fetch(resolveDIDConfig)\n      if (didDocument.id != JSON.parse(localStorage.getItem('didDocument')).id) {\n        this.alert('Domain is not linked to the DID')\n        document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n        return\n      }\n\n      const credential = didConfiguration.linked_dids[0]\n      if (credential.credentialSubject.id != didDocument.id) {\n        this.alert('Domain is not linked to the DID')\n        document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n        return\n      }\n      if (credential.credentialSubject.id != credential.credentialSubject.id) {\n        this.alert('DidConfiguration is not linked to the DID')\n        document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n        return\n      }\n\n      if (credential.credentialSubject.origin != this.domain) {\n        this.alert('Domain is not linked to the DID')\n        document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n        return\n      }\n    },\n    download(file, filename) {\n      const blob = new Blob([JSON.stringify(file)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      // attach this link to the document a of id did\n      link.click();\n\n    },\n\n    loader(show = true) {\n      // a div based loader that will show a loader in the middle of the screen based on show variable and transparent background and animated and use the loader image from cdn \n      if (show) {\n        const div = document.createElement('div');\n        div.className = 'loader';\n        div.style.cssText = 'position:fixed; top:0; left:0; width:100%; height:100%; background-color: rgba(0,0,0,0.8); z-index: 9999; display:flex; justify-content:center; align-items:center;';\n        div.img = document.createElement('img');\n        div.img.style.cssText = 'width:150px'\n        div.img.src = 'https://cdn.dribbble.com/users/421466/screenshots/2377950/drops-400px.gif'\n\n        div.appendChild(div.img)\n\n        document.body.appendChild(div);\n      } else {\n        document.querySelector('.loader').remove()\n      }\n\n\n\n    },\n    alert(msg, time = 3000) {\n      //  a alert that will push a floatable div in the left corner\n      const div = document.createElement('div');\n      div.className = 'alert';\n      // style for top right corner floatable div fade in and out transperent blue\n      div.style.cssText = 'position:fixed; top:10px; right:10px; background-color: #054126; color: #fff; padding: 10px; border-radius: 5px; z-index: 9999; animation: fadein 0.5s, fadeout 0.5s 2.5s;';\n      div.innerHTML = msg;\n      document.body.appendChild(div);\n      setTimeout(function () {\n        div.remove();\n      }, time);\n\n\n\n\n    },\n    copy(text) {\n      // copy to clipboard\n      const that = this\n      navigator.clipboard.writeText(text).then(function () {\n        that.alert('Copied to clipboard')\n      }, function (err) {\n        that.alert('Failed to copy to clipboard')\n        console.error('Async: Could not copy text: ', err);\n      });\n    },\n\n\n    async link() {\n      this.loader(true)\n      if (!this.domain) {\n        this.alert('Please enter domain name')\n        return\n      }\n      localStorage.setItem('domain', this.domain)\n      await this.generateDID()\n      await this.signcredential()\n\n\n      this.alert(`<h3 style='text-align:center'>Follow the steps</h3><p>Please put the did.json and did-configuration.json</p><p> to your servers .well-known folder.</p>`, 10000)\n\n      // download did.json\n      const didDocument = JSON.parse(localStorage.getItem('didDocument'))\n      const didConfiguration = JSON.parse(localStorage.getItem('didConfiguration'))\n      this.didConfiguration = didConfiguration\n      this.didDocument = didDocument\n      const didDocumentBlob = new Blob([JSON.stringify(didDocument)], { type: 'application/json' });\n      const didConfigurationBlob = new Blob([JSON.stringify(didConfiguration)], { type: 'application/json' });\n      const didDocumentUrl = URL.createObjectURL(didDocumentBlob);\n      const didConfigurationUrl = URL.createObjectURL(didConfigurationBlob);\n      const didDocumentLink = document.createElement('a');\n      const didConfigurationLink = document.createElement('a');\n      didDocumentLink.href = didDocumentUrl;\n      didConfigurationLink.href = didConfigurationUrl;\n      didDocumentLink.download = 'did.json';\n      didConfigurationLink.download = 'did-configuration.json';\n      // attach this link to the document a of id did\n      didDocumentLink.click();\n      didConfigurationLink.click();\n\n      document.getElementById(\"verify\").style.display = \"block\";\n      document.getElementById(\"verify\").disabled = false;\n      document.getElementById(\"verify\").innerHTML = \"Verify\";\n      document.getElementById(\"link\").style.display = \"none\";\n\n      this.loader(false)\n\n\n    },\n    async fetch(url) {\n      const response = await fetch(url)\n      const data = await response.json();\n      return data\n    }\n    ,\n    // async VerifyCredentials(credential, didDocument) {\n\n    //   const suite = new Ed25519Signature2020({\n    //     key: new Ed25519VerificationKey2020({\n    //       id: JSON.parse(localStorage.getItem('didDocument')).verificationMethod[0].id,\n    //       controller: JSON.parse(localStorage.getItem('didDocument')).id,\n    //       publicKeyMultibase: JSON.parse(localStorage.getItem('keys')).publicKeyMultibase,\n\n    //     }),\n    //   })\n\n\n    //   const result = await verifyCredential({\n    //     credential: credential,\n    //     suite: suite,\n    //     purpose: new purposes.AssertionProofPurpose({\n    //       controller: {\n    //         '@context': 'https://w3id.org/security/v2',\n    //         id: didDocument.id,\n\n    //         assertionMethod: [didDocument.verificationMethod[0].id]\n    //       }\n    //     }),\n    //     documentLoader: async (url) => {\n\n    //       return await jsonld.documentLoader(url)\n    //     }\n    //   });\n    //   return result\n    // },\n    async Verify() {\n      try {\n        this.loader(true)\n        const dl = new DomainLinkage(this.domain)\n        var button = document.getElementById(\"verify\");\n        button.innerHTML = \"Processing\";\n        button.disabled = true;\n        const result = await dl.verify(this.didDocument.id)\n\n        button.style['background-color'] = \"#e4a11b\";\n        if (result.verified) {\n          console.log(result);\n          this.alert('Domain is linked to the DID')\n\n          // button.disabled = true;\n\n          button.innerHTML = \"Verified ✔\";\n          button.style['background-color'] = \"#14A44D\";\n          button.disabled = true;\n\n\n          this.loader(false)\n          return this.$emit('can-continue', { value: true });\n\n        }\n        else {\n          this.alert('Domain is not linked to the DID')\n          button.innerHTML = \"Retry ↻  \";\n          button.style['background-color'] = \"#DC4C64\";\n          button.disabled = false;\n          this.loader(false)\n        }\n\n      }\n      catch (e) {\n        console.log(e);\n     \n\n        this.alert('Domain is not linked to the DID')\n        document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n        button.style['background-color'] = \"#DC4C64\";\n\n        document.getElementById(\"verify\").disabled = false;\n        this.loader(false)\n      }\n\n    },\n\n    // async Verify() {\n    //   try {\n\n\n    //     this.loader(true)\n\n    //     const resolveDID = 'https://' + this.domain + '/.well-known/did.json'\n    //     const resolveDIDConfig = 'https://' + this.domain + '/.well-known/did-configuration.json'\n\n    //     const didDocument = await this.fetch(resolveDID)\n    //     const didConfiguration = await this.fetch(resolveDIDConfig)\n    //     if (didDocument.id != JSON.parse(localStorage.getItem('didDocument')).id) {\n    //       this.alert('Domain is not linked to the DID')\n    //       document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n    //       return\n    //     }\n\n    //     const credential = didConfiguration.linked_dids[0]\n    //     if (credential.credentialSubject.id != didDocument.id) {\n    //       this.alert('Domain is not linked to the DID')\n    //       document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n    //       return\n    //     }\n    //     if (credential.credentialSubject.id != credential.credentialSubject.id) {\n    //       this.alert('DidConfiguration is not linked to the DID')\n    //       document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n    //       return\n    //     }\n\n    //     if (credential.credentialSubject.origin != this.domain) {\n    //       this.alert('Domain is not linked to the DID')\n    //       document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n\n    //       return\n    //     }\n\n\n    //     // verify the credential\n    //     await this.VerifyCredentials(credential, didDocument).then(async (result) => {\n    //       console.log(result);\n    //       if (result.verified) {\n    //         this.alert('Domain is linked to the DID')\n    //         document.getElementById(\"verify\").innerHTML = \"Verified ✔\";\n    //         document.getElementById(\"verify\").disabled = true;\n    //         document.getElementById(\"verify\").style['background-color'] = \"#14A44D\";\n    //         document.getElementById(\"link\").style.display = \"none\";\n    //         this.loader(false)\n    //         this.status = '✔'\n    //         return this.$emit('can-continue', { value: true });\n    //       } else {\n    //         this.alert('Domain is not linked to the DID')\n    //         document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n    //         this.status = '✘'\n\n    //         return this.loader(false)\n    //       }\n    //     })\n    //       .catch((err) => {\n    //         this.alert('Domain is not linked to the DID')\n    //         document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n    //         this.status = '✘'\n    //         this.loader(false)\n    //         this.alert(err)\n\n    //         return\n    //       })\n\n\n\n\n\n\n\n\n    //     // var domain = document.getElementById(\"domain\").value;\n    //     //   var button = document.getElementById(\"verify\");\n    //     //   button.innerHTML = \"Processing\";\n    //     //   button.style['background-color']=\"#e4a11b\";\n    //     //   // button.disabled = true;\n    //     //   setTimeout(function(){\n    //     //     button.innerHTML = \"Verified ✔\";\n    //     //     button.style['background-color']=\"#14A44D\";\n    //     //     button.disabled = true;\n    //     //   }, 2000);\n    //     //   setTimeout(function(){\n    //     //     button.innerHTML = \"Retry ↻  \";\n    //     //     button.style['background-color']=\"#DC4C64\";\n\n    //     //   }, 4000);\n    //   } catch (error) {\n    //     this.alert(error)\n    //     document.getElementById(\"verify\").innerHTML = \"Retry ↻  \";\n    //     this.status = '✘'\n    //     this.loader(false)\n\n\n    //   }\n    // },\n\n    async generateDID() {\n      try {\n\n\n        const mnemonic = generateMnemonic()\n        const offlineSigner = await createWallet(mnemonic, 0)\n        const hsDID = new HypersignDID({\n          offlineSigner,\n          namespace: this.namespace,\n          nodeRestEndpoint: this.api,\n          nodeRpcEndpoint: this.rpc\n        });\n        await hsDID.init()\n\n        // seed modidied by hdpath\n        const seed = await generateMnemonicToHDSeed(mnemonic, 0)\n        const keys = await hsDID.generateKeys({\n          seed\n        });\n\n        const didDocument = await hsDID.generate({\n          publicKeyMultibase: keys.publicKeyMultibase,\n        })\n        didDocument.service.push({\n          id: didDocument.id + '#LinkedDomains',\n          type: 'LinkedDomains',\n          serviceEndpoint: 'https://' + this.domain + '/.well-known/did.json',\n\n\n        })\n        didDocument['@context'].push('https://w3id.org/security/suites/ed25519-2020/v1')\n       \n     localStorage.setItem('didDocument', JSON.stringify(didDocument))\n        localStorage.setItem('mnemonic', mnemonic)\n        localStorage.setItem('keys', JSON.stringify(keys))\n\n      } catch (error) {\n        console.log(error);\n\n\n      }\n\n\n    },\n    async signcredential() {\n      const hsCred = new HypersignVerifiableCredential({\n        namespace: this.namespace,\n        nodeRestEndpoint: this.api,\n        nodeRpcEndpoint: this.rpc\n      })\n\n      const did_configuration = await hsCred.generate({\n        subjectDid: JSON.parse(localStorage.getItem('didDocument')).id,\n        type: ['DomainLinkageCredential'],\n        schemaContext: ['https://identity.foundation/.well-known/did-configuration/v1'],\n        issuerDid: JSON.parse(localStorage.getItem('didDocument')).id,\n        expirationDate: new Date('2030-01-01T00:00:02.022Z').toISOString(),\n        fields: {\n          origin: this.domain,\n        },\n\n      })\n      const suite = new Ed25519Signature2020({\n        key: new Ed25519VerificationKey2020({\n          id: JSON.parse(localStorage.getItem('didDocument')).verificationMethod[0].id,\n          controller: JSON.parse(localStorage.getItem('didDocument')).id,\n          publicKeyMultibase: JSON.parse(localStorage.getItem('keys')).publicKeyMultibase,\n          privateKeyMultibase: JSON.parse(localStorage.getItem('keys')).privateKeyMultibase\n\n        }),\n      })\n      const didDocument = JSON.parse(localStorage.getItem('didDocument'))\n      delete did_configuration.credentialStatus\n\n      const signedCredential = await issue({\n        credential: did_configuration,\n        suite: suite,\n        purpose: new purposes.AssertionProofPurpose({\n          controller: {\n            '@context': 'https://w3id.org/security/v2',\n            id: didDocument.id,\n\n            assertionMethod: [didDocument.verificationMethod[0].id]\n          }\n        }),\n        documentLoader: async (url) => {\n\n          return await jsonld.documentLoader(url)\n        }\n      })\n\n      const didConfiguration = {\n        '@context': 'https://identity.foundation/.well-known/did-configuration/v1',\n        'linked_dids': [\n          signedCredential\n        ]\n\n      }\n      localStorage.setItem('didConfiguration', JSON.stringify(didConfiguration))\n    }\n\n  }\n\n}\n</script>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n/* Profile section should compact and well styled and match the design center aligned */\n#profile {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-top: 20px;\n\n\n}\n\n.form {\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin: 10px 0;\n  font-size: 14px;\n\n}\n\n/* input type file upload buton on right and button looks cool */\n.input_container {\n  border: 1px solid #e5e5e5;\n}\n\ninput[type=file]::file-selector-button {\n  background-color: #fff;\n  color: #000;\n  border: 0px;\n  border-right: 1px solid #e5e5e5;\n  margin-right: 20px;\n  transition: .5s;\n}\n\ninput[type=file]::file-selector-button:hover {\n  background-color: #eee;\n  border: 0px;\n  border-right: 1px solid #e5e5e5;\n}\n\n#verify {\n  background-color: #42b983;\n  display: none;\n}\n\n/* animated button with status change verify to processing and verified and disable */\nbutton {\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin: 10px 0;\n  font-size: 14px;\n  background-color: #054126;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n}\n\nh6 {\n  font-size: small;\n}\n\n#header {\n  text-align: center;\n  font-size: 25px;\n  color: #054126;\n}\n\nh5 {\n  text-align: center;\n}\n\nh1 {\n  font-size: 30px;\n  text-align: center;\n  color: #054126;\n}\n\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=ac2d3582&scoped=true&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HelloWorld.vue?vue&type=style&index=0&id=ac2d3582&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ac2d3582\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"form\"},[_c('p',{attrs:{\"id\":\"header\"}},[_vm._v(\"DNS-01\")]),_c('h5',[_vm._v(\"Please add the txt record to you domain.\")]),_c('span',{attrs:{\"id\":\"copy\"}},[_c('a',{attrs:{\"href\":\"#\",\"id\":\"copytxt\"},on:{\"click\":_vm.copy}},[_vm._v(\"Copy\")])]),_c('input',{attrs:{\"type\":\"text\",\"id\":\"txt\"},domProps:{\"value\":_vm.txtRecord}}),_c('br'),_c('button',{attrs:{\"id\":\"verify\"},on:{\"click\":_vm.verify}},[_vm._v(\"Verify\")]),_c('br'),(_vm.status)?_c('div',{attrs:{\"id\":\"status\"}},[_c('p',{staticStyle:{\"font-size\":\"small\"}},[_c('b',[_vm._v(\"Domain:\")]),_vm._v(\" \"+_vm._s(_vm.domain)+\" \"),_c('br'),_c('b',[_vm._v(\"TxtRecord:\")]),_vm._v(\" \"+_vm._s(_vm.txtRecord)+\" \"),_c('br'),_c('b',[_vm._v(\"Status :\")]),_vm._v(\" \"+_vm._s(_vm.status)+\" \"),_c('br'),_c('b',{attrs:{\"id\":\"flash-text\"}},[_c('a',{staticStyle:{\"text-decoration\":\"none\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.openURl(_vm.didDocument.id)}}},[_vm._v(\"Did : \"+_vm._s(_vm.didDocument.id)+\" \")])]),_c('br')])]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {ApiOauth} from \"./APIOps\";\n\nimport { API_URL } from \"./constants\";\n\n\n\nasync function registerDID(didDocument,signature){\n    try {\n        \n    \n    const response=await ApiOauth();\n    console.log(response);\n    const url=API_URL+'api/v1/did/register';\n    const headers={\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '+response.access_token,\n\n    }\n\n    const body={\n        didDocument:didDocument,\n\n        signInfos:[{\n            signature:signature,\n            verification_method_id:didDocument.id+'#key-1',\n        }]\n    }\n\n    const resp=await fetch(url,{\n        method:'POST',\n        headers:headers,\n        body:JSON.stringify(body),\n    })\n\n    const txnResp=await resp.json();\n    return txnResp;\n} catch (error) {\n    return error\n        \n}\n}\n\nexport {registerDID}","<template>\n    <div class=\"form\">\n        <p id=\"header\">DNS-01</p>\n        <h5>Please add the txt record to you domain.</h5>\n        <span id=\"copy\">\n            <a href=\"#\" id=\"copytxt\" @click=\"copy\">Copy</a>\n        </span>\n        <input type=\"text\" id=\"txt\" :value=\"txtRecord\" />\n        <br>\n        <button id=\"verify\" @click=\"verify\">Verify</button>\n        <br>\n        <div id=\"status\" v-if=\"status\">\n            <p style=\"font-size: small;\">\n                <b>Domain:</b> {{ domain }}\n                <br>\n                <b>TxtRecord:</b> {{ txtRecord }}\n                <br>\n                <b>Status :</b> {{ status }}\n                <br>\n                <b id=\"flash-text\"><a @click=\"openURl(didDocument.id)\"\n                        style=\"text-decoration:none ; cursor: pointer; \">Did : {{ didDocument.id }} </a>\n                </b>\n                <br>\n\n            </p>\n        </div>\n\n\n\n        <!-- copy span -->\n\n\n\n    </div>\n</template>\n \n\n<script>\nimport DomainLinkage from '@hypersign-protocol/did-linked-domain'\nimport { registerDID } from '../scripts/DidOperations'\nimport {\n    HypersignDID\n} from 'hs-ssi-sdk'\nexport default {\n    name: 'PooDns',\n    data() {\n        return {\n            txtRecord: '',\n            domain: '',\n            didDocument: '',\n            status: false,\n            rpc: 'https://rpc.jagrat.hypersign.id/',\n            api: 'https://api.jagrat.hypersign.id/'\n        }\n    },\n    mounted() {\n        document.getElementById(\"verify\").style.display = \"block\";\n        this.domain = localStorage.getItem('domain')\n        this.didDocument = JSON.parse(localStorage.getItem('didDocument'))\n\n        this.txtRecord = \"hypersign-domain-verification.did=\" + JSON.parse(localStorage.getItem('didDocument')).id\n    },\n    methods: {\n        async signAndRegisterDid() {\n            const key = JSON.parse(localStorage.getItem('keys'))\n            const hsDID = new HypersignDID({\n                namespace: 'testnet',\n                nodeRestEndpoint: this.api,\n                nodeRpcEndpoint: this.rpc\n            });\n\n            const signature = await hsDID.signDid({ didDocument: this.didDocument, privateKeyMultibase: key.privateKeyMultibase })\n            const data = await registerDID(this.didDocument, signature)\n            return data;\n        },\n        openURl(url) {\n            window.open('https://api.jagrat.hypersign.id/hypersign-protocol/hidnode/ssi/did/' + url, '_blank');\n        },\n        copy() {\n            var copyText = document.getElementById(\"txt\");\n            copyText.select();\n            copyText.setSelectionRange(0, 99999)\n            // document.execCommand(\"copy\");\n            document.getElementById(\"copytxt\").innerHTML = \"Copied!\";\n            // color fade \n            document.getElementById(\"copytxt\").style.color = \"#90EE90\";\n            this.alert('Copied to clipboard')\n        },\n\n        alert(msg, time = 3000) {\n            //  a alert that will push a floatable div in the left corner\n            const div = document.createElement('div');\n            div.className = 'alert';\n            // style for top right corner floatable div fade in and out transperent blue\n            div.style.cssText = 'position:fixed; top:10px; right:10px; background-color: #054126; color: #fff; padding: 10px; border-radius: 5px; z-index: 9999; animation: fadein 0.5s, fadeout 0.5s 2.5s;';\n            div.innerHTML = msg;\n            document.body.appendChild(div);\n            setTimeout(function () {\n                div.remove();\n            }, time);\n        },\n        async verify() {\n            try {\n\n\n                this.loader(true)\n                const domainLinkage = new DomainLinkage(this.domain)\n                const txtRecord = await domainLinkage.verifyDnsTxtRecord(this.domain.includes('http') ? this.domain : new URL('https://' + this.domain), this.txtRecord)\n                const resp = await this.signAndRegisterDid()\n                console.log(resp.data);\n\n                if (txtRecord) {\n                    this.alert('Domain verified successfully')\n                    this.$emit('can-continue', {\n                        value: true\n                    })\n                    document.getElementById(\"verify\").innerHTML = \"DNS-01 Verified ✔ \";\n                    document.getElementById(\"verify\").style['background-color'] = \"#28A745\"; this.status = true\n                    const resp = await this.signAndRegisterDid()\n                    if (resp.data) {\n                        document.getElementById(\"status\").style.color = \"#28A745\";\n                        document.getElementById(\"status\").style.border = \"1px solid #28A745\";\n                        this.alert(resp.data.transactionHash)\n\n                    } else {\n                        this.alert(\"DID not registred\")\n\n                        // qury selector for flash-text id\n                        document.getElementById(\"status\").style.color = \"#DC3545\";\n                        document.getElementById(\"status\").style.border = \"1px solid #DC3545\";\n                    }\n\n                    // await this.register()\n                } else {\n                    this.alert('Domain verification failed')\n                    // retry \n                    document.getElementById(\"verify\").innerHTML = \"Retry ↻ \";\n                    document.getElementById(\"verify\").style['background-color'] = \"#DC3545\";\n\n\n                }\n\n                this.loader(false)\n            } catch (error) {\n                console.log(error);\n               \n                this.loader(false)\n                this.alert('Domain verification failed')\n                document.getElementById(\"verify\").innerHTML = \"Retry ↻ \";\n                document.getElementById(\"verify\").style['background-color'] = \"#DC3545\";\n\n            }\n        },\n        // async register() {\n        //     const hsDID = new HypersignDID({\n        //         namespace: 'testnet',\n        //         nodeRestEndpoint: this.api,\n        //         nodeRpcEndpoint: this.rpc\n        //     });\n        //     console.log(hsDID.sig);\n        // },\n\n\n        loader(show = true) {\n            // a div based loader that will show a loader in the middle of the screen based on show variable and transparent background and animated and use the loader image from cdn \n            if (show) {\n                const div = document.createElement('div');\n                div.className = 'loader';\n                div.style.cssText = 'position:fixed; top:0; left:0; width:100%; height:100%; background-color: rgba(0,0,0,0.8); z-index: 9999; display:flex; justify-content:center; align-items:center;';\n                div.img = document.createElement('img');\n                div.img.style.cssText = 'width:150px'\n                div.img.src = 'https://cdn.dribbble.com/users/421466/screenshots/2377950/drops-400px.gif'\n\n                div.appendChild(div.img)\n\n                document.body.appendChild(div);\n            } else {\n                document.querySelector('.loader').remove()\n            }\n\n\n        }\n    }\n}\n\n</script>\n\n\n<style scoped>\n/* \\ text animation  gray and green in span of 1 sec */\n\n\n\n#copy {\n    float: right;\n}\n\n#copy a {\n    color: #42b983;\n    text-decoration: none;\n    font-size: 14px;\n    font-weight: bold;\n\n}\n\n#txt {\n    width: 100%;\n    padding: 10px;\n    box-sizing: border-box;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin: 10px 0;\n    font-size: 14px;\n}\n\n#profile {\n    width: 100%;\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin-top: 20px;\n\n\n}\n\n.form {\n    width: 100%;\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n}\n\ninput {\n    width: 100%;\n    padding: 10px;\n    box-sizing: border-box;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin: 10px 0;\n    font-size: 14px;\n\n}\n\n#verify {\n    background-color: #42b983;\n    display: none;\n}\n\n/* animated button with status change verify to processing and verified and disable */\nbutton {\n    width: 100%;\n    padding: 10px;\n    box-sizing: border-box;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    margin: 10px 0;\n    font-size: 14px;\n    background-color: #054126;\n    color: #fff;\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n}\n\n\n#header {\n    text-align: center;\n    font-size: 25px;\n    color: #054126;\n}\n\nh5 {\n    text-align: center;\n}\n\nh1 {\n    font-size: 30px;\n    text-align: center;\n    color: #054126;\n}\n\nh3 {\n    margin: 40px 0 0;\n}\n\nul {\n    list-style-type: none;\n    padding: 0;\n}\n\nli {\n    display: inline-block;\n    margin: 0 10px;\n}\n\n\n\n#status{\n    font-size: xx-small !important;\n    color: #054126;\n    border: #054126 1px solid;\n    border-radius: 5px;\n    padding: 10px;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./poo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./poo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./poo.vue?vue&type=template&id=c04ea184&scoped=true&\"\nimport script from \"./poo.vue?vue&type=script&lang=js&\"\nexport * from \"./poo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./poo.vue?vue&type=style&index=0&id=c04ea184&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c04ea184\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <section  class=\"section\" style=\"padding: 1rem ; min-height: 600px;\">\n        <div class=\"\">\n            <div class=\"columns\">\n                <div class=\"column is-8 is-offset-2\">\n                                        <horizontal-stepper id=\"step\" @completed-step=\"completeStep\" @active-step=\"isStepActive\" @stepper-finished=\"finish\" :steps=\"steps\">\n                    </horizontal-stepper>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n\n<script>\nimport HorizontalStepper from 'vue-stepper';\nimport HelloWorld from './HelloWorld.vue';\nimport dns from './poo.vue';\nexport default {\n    name: 'StepperMain',\n    components: {\n        HorizontalStepper,\n\n    },\n    data() {\n        return {\n            steps: [\n                {\n                    icon: 'link',\n                    name: 'first',\n                    title: 'Link Domain',\n                    component: HelloWorld,\n                    completed: false\n                }, {\n                    icon: 'check',\n                    name: 'second',\n                    title: 'Proof of Ownership',\n                    component: dns,\n                    completed: false\n                }\n\n            ]\n\n        }\n    },\n    methods: {\n        finish() {\n            \n        },\n        completeStep(payload) {\n            this.steps.forEach((step) => {\n\n                if (step.name === payload.name) {\n                    step.completed = true;\n                }\n            })\n        },\n        // Executed when @active-step event is triggered\n        isStepActive(payload) {\n            this.steps.forEach((step) => {\n                if (step.name === payload.name) {\n                    if (step.completed === true) {\n                        step.completed = false;\n                    }\n                }\n            })\n        },\n    }\n\n}\n</script>\n\n\n<style scoped>\n/* bootstrap container */\n.section{\n    padding: 3rem 1.5rem;\n    margin: 0 auto;\n    max-width: 960px;\n    width: 100%;\n    box-sizing: border-box;\n    position: relative;\n    z-index: 1;\n\n}\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./stepper.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./stepper.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./stepper.vue?vue&type=template&id=eb9c9cf0&scoped=true&\"\nimport script from \"./stepper.vue?vue&type=script&lang=js&\"\nexport * from \"./stepper.vue?vue&type=script&lang=js&\"\nimport style0 from \"./stepper.vue?vue&type=style&index=0&id=eb9c9cf0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"eb9c9cf0\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <!-- <HelloWorld/> -->\n    <StepperMain/>\n  </div>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\nimport StepperMain from './components/stepper.vue';\nexport default {\n  name: 'App',\n  components: {\n    // HelloWorld\n    StepperMain\n  }\n}\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  \n  color: #2c3e50;\n  margin-top: 10px;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=8f3fcda8&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=8f3fcda8&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport JsonViewer from 'vue-json-viewer'\nimport {BootstrapVue,BootstrapVueIcons,IconsPlugin} from 'bootstrap-vue'\n\n\nVue.use(JsonViewer)\nVue.use(BootstrapVue)\nVue.use(BootstrapVueIcons)\nVue.use(IconsPlugin)\nVue.config.productionTip = false\n\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","const { API_URL } = require(\"./constants\");\n\n\n\nasync function ApiOauth() {\n    // hid176jlf246k86t988a6cmm9t6w2etv2x70r6v78h\n\n    // hardcoding api secret for now\n    // const apiKey = 'cbb79314d13ec7dfff8adedfe8883.782424ee772c73dbb8de1ff0a47ec96d9ac15616b1d679451ec8ac79e65018e9cc0e3301324218fbd15719c14b514f31f'\n   const apiKey='f8b98abd165432d1a208056f3d0d4.6e08cba9257c1482a33d22c432947a3e02c1ea8c7bceb143677eb7f1c6b0787cca09a01643656ecb722bd0f588cbd2be3'\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-Api-Secret-Key': apiKey\n    }\n\n    const response = await fetch(API_URL+'api/v1/app/oauth', {\n        method: 'POST',\n        headers: headers,\n        body: null,\n    });\n\n    const resp = await response.json();\n    return resp;\n}\n\n\n\nmodule.exports = { ApiOauth };","const API_URL = \"https://api.entity.hypersign.id/\";\n// const API_URL = \"http://localhost:3001/\";\n\nexport { API_URL };","const { DirectSecp256k1HdWallet } = require(\"@cosmjs/proto-signing\");\nconst {   Bip39, Slip10, Slip10RawIndex, Slip10Curve } = require('@cosmjs/crypto')\n\n// const mnemonic = \"retreat seek south invite fall eager engage endorse inquiry sample salad evidence express actor hidden fence anchor crowd two now convince convince park bag\"\n// const mnemonic = \"napkin delay purchase easily camp mimic share wait stereo reflect allow soccer believe exhibit laptop upset tired talent transfer talk surface solution omit crack\"\n\nfunction makeCosmoshubPath(a) {\n    return [\n        Slip10RawIndex.hardened(44),\n        Slip10RawIndex.hardened(118),\n        Slip10RawIndex.hardened(0),\n        Slip10RawIndex.normal(0),\n        Slip10RawIndex.normal(a),\n\n    ];\n}\nconst createWallet = async (mnemonic, id=0) => {\n    if (!mnemonic) {\n        return await DirectSecp256k1HdWallet.generate(24,  {\n            prefix: \"hid\",\n            hdPaths: [makeCosmoshubPath(id)],\n        });\n    } else {\n        return await DirectSecp256k1HdWallet.fromMnemonic(mnemonic,  {\n            prefix: \"hid\",\n            hdPaths: [makeCosmoshubPath(id)],\n        });\n    }\n}\nfunction makeSSIWalletPath(minHardIndex) {\n    return [\n       \n        Slip10RawIndex.hardened(118),\n        Slip10RawIndex.hardened(128),\n        Slip10RawIndex.hardened(0),\n        Slip10RawIndex.hardened(minHardIndex),\n\n    ];\n}\n\n async function generateMnemonicToHDSeed(mnemonic, minHardIndex = 0) {\n    minHardIndex=minHardIndex+1;\n    const seed = Bip39.decode(mnemonic)\n    const slipPathKeys = Slip10.derivePath(Slip10Curve.Ed25519, seed, makeSSIWalletPath(minHardIndex))\n    const seedHD = slipPathKeys.privkey\n    return seedHD;\n}\n\nmodule.exports = {\n    createWallet,\n    generateMnemonicToHDSeed\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientSpec = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseClientSpec = { type: \"\", adr036SignerAddress: \"\" };\nexports.ClientSpec = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.adr036SignerAddress !== \"\") {\n            writer.uint32(18).string(message.adr036SignerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseClientSpec);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.adr036SignerAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseClientSpec);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.adr036SignerAddress !== undefined &&\n            object.adr036SignerAddress !== null) {\n            message.adr036SignerAddress = String(object.adr036SignerAddress);\n        }\n        else {\n            message.adr036SignerAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.adr036SignerAddress !== undefined &&\n            (obj.adr036SignerAddress = message.adr036SignerAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseClientSpec);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.adr036SignerAddress !== undefined &&\n            object.adr036SignerAddress !== null) {\n            message.adr036SignerAddress = object.adr036SignerAddress;\n        }\n        else {\n            message.adr036SignerAddress = \"\";\n        }\n        return message;\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Credential = exports.CredentialProof = exports.CredentialStatus = exports.Claim = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseClaim = { id: \"\", currentStatus: \"\", statusReason: \"\" };\nexports.Claim = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.currentStatus !== \"\") {\n            writer.uint32(18).string(message.currentStatus);\n        }\n        if (message.statusReason !== \"\") {\n            writer.uint32(26).string(message.statusReason);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseClaim);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.currentStatus = reader.string();\n                    break;\n                case 3:\n                    message.statusReason = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseClaim);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.currentStatus !== undefined && object.currentStatus !== null) {\n            message.currentStatus = String(object.currentStatus);\n        }\n        else {\n            message.currentStatus = \"\";\n        }\n        if (object.statusReason !== undefined && object.statusReason !== null) {\n            message.statusReason = String(object.statusReason);\n        }\n        else {\n            message.statusReason = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.currentStatus !== undefined &&\n            (obj.currentStatus = message.currentStatus);\n        message.statusReason !== undefined &&\n            (obj.statusReason = message.statusReason);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseClaim);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.currentStatus !== undefined && object.currentStatus !== null) {\n            message.currentStatus = object.currentStatus;\n        }\n        else {\n            message.currentStatus = \"\";\n        }\n        if (object.statusReason !== undefined && object.statusReason !== null) {\n            message.statusReason = object.statusReason;\n        }\n        else {\n            message.statusReason = \"\";\n        }\n        return message;\n    },\n};\nconst baseCredentialStatus = {\n    issuer: \"\",\n    issuanceDate: \"\",\n    expirationDate: \"\",\n    credentialHash: \"\",\n};\nexports.CredentialStatus = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.claim !== undefined) {\n            exports.Claim.encode(message.claim, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.issuer !== \"\") {\n            writer.uint32(18).string(message.issuer);\n        }\n        if (message.issuanceDate !== \"\") {\n            writer.uint32(26).string(message.issuanceDate);\n        }\n        if (message.expirationDate !== \"\") {\n            writer.uint32(34).string(message.expirationDate);\n        }\n        if (message.credentialHash !== \"\") {\n            writer.uint32(42).string(message.credentialHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCredentialStatus);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.claim = exports.Claim.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.issuer = reader.string();\n                    break;\n                case 3:\n                    message.issuanceDate = reader.string();\n                    break;\n                case 4:\n                    message.expirationDate = reader.string();\n                    break;\n                case 5:\n                    message.credentialHash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCredentialStatus);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromJSON(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = String(object.issuer);\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = String(object.issuanceDate);\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = String(object.expirationDate);\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = String(object.credentialHash);\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.claim !== undefined &&\n            (obj.claim = message.claim ? exports.Claim.toJSON(message.claim) : undefined);\n        message.issuer !== undefined && (obj.issuer = message.issuer);\n        message.issuanceDate !== undefined &&\n            (obj.issuanceDate = message.issuanceDate);\n        message.expirationDate !== undefined &&\n            (obj.expirationDate = message.expirationDate);\n        message.credentialHash !== undefined &&\n            (obj.credentialHash = message.credentialHash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCredentialStatus);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromPartial(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = object.issuer;\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = object.issuanceDate;\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = object.expirationDate;\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = object.credentialHash;\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        return message;\n    },\n};\nconst baseCredentialProof = {\n    type: \"\",\n    created: \"\",\n    updated: \"\",\n    verificationMethod: \"\",\n    proofPurpose: \"\",\n    proofValue: \"\",\n};\nexports.CredentialProof = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.created !== \"\") {\n            writer.uint32(18).string(message.created);\n        }\n        if (message.updated !== \"\") {\n            writer.uint32(26).string(message.updated);\n        }\n        if (message.verificationMethod !== \"\") {\n            writer.uint32(34).string(message.verificationMethod);\n        }\n        if (message.proofPurpose !== \"\") {\n            writer.uint32(42).string(message.proofPurpose);\n        }\n        if (message.proofValue !== \"\") {\n            writer.uint32(50).string(message.proofValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCredentialProof);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.created = reader.string();\n                    break;\n                case 3:\n                    message.updated = reader.string();\n                    break;\n                case 4:\n                    message.verificationMethod = reader.string();\n                    break;\n                case 5:\n                    message.proofPurpose = reader.string();\n                    break;\n                case 6:\n                    message.proofValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCredentialProof);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.created !== undefined && object.created !== null) {\n            message.created = String(object.created);\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = String(object.updated);\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            message.verificationMethod = String(object.verificationMethod);\n        }\n        else {\n            message.verificationMethod = \"\";\n        }\n        if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n            message.proofPurpose = String(object.proofPurpose);\n        }\n        else {\n            message.proofPurpose = \"\";\n        }\n        if (object.proofValue !== undefined && object.proofValue !== null) {\n            message.proofValue = String(object.proofValue);\n        }\n        else {\n            message.proofValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.created !== undefined && (obj.created = message.created);\n        message.updated !== undefined && (obj.updated = message.updated);\n        message.verificationMethod !== undefined &&\n            (obj.verificationMethod = message.verificationMethod);\n        message.proofPurpose !== undefined &&\n            (obj.proofPurpose = message.proofPurpose);\n        message.proofValue !== undefined && (obj.proofValue = message.proofValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCredentialProof);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.created !== undefined && object.created !== null) {\n            message.created = object.created;\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = object.updated;\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            message.verificationMethod = object.verificationMethod;\n        }\n        else {\n            message.verificationMethod = \"\";\n        }\n        if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n            message.proofPurpose = object.proofPurpose;\n        }\n        else {\n            message.proofPurpose = \"\";\n        }\n        if (object.proofValue !== undefined && object.proofValue !== null) {\n            message.proofValue = object.proofValue;\n        }\n        else {\n            message.proofValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseCredential = {\n    issuer: \"\",\n    issuanceDate: \"\",\n    expirationDate: \"\",\n    credentialHash: \"\",\n};\nexports.Credential = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.claim !== undefined) {\n            exports.Claim.encode(message.claim, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.issuer !== \"\") {\n            writer.uint32(18).string(message.issuer);\n        }\n        if (message.issuanceDate !== \"\") {\n            writer.uint32(26).string(message.issuanceDate);\n        }\n        if (message.expirationDate !== \"\") {\n            writer.uint32(34).string(message.expirationDate);\n        }\n        if (message.credentialHash !== \"\") {\n            writer.uint32(42).string(message.credentialHash);\n        }\n        if (message.proof !== undefined) {\n            exports.CredentialProof.encode(message.proof, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseCredential);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.claim = exports.Claim.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.issuer = reader.string();\n                    break;\n                case 3:\n                    message.issuanceDate = reader.string();\n                    break;\n                case 4:\n                    message.expirationDate = reader.string();\n                    break;\n                case 5:\n                    message.credentialHash = reader.string();\n                    break;\n                case 6:\n                    message.proof = exports.CredentialProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseCredential);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromJSON(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = String(object.issuer);\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = String(object.issuanceDate);\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = String(object.expirationDate);\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = String(object.credentialHash);\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = exports.CredentialProof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.claim !== undefined &&\n            (obj.claim = message.claim ? exports.Claim.toJSON(message.claim) : undefined);\n        message.issuer !== undefined && (obj.issuer = message.issuer);\n        message.issuanceDate !== undefined &&\n            (obj.issuanceDate = message.issuanceDate);\n        message.expirationDate !== undefined &&\n            (obj.expirationDate = message.expirationDate);\n        message.credentialHash !== undefined &&\n            (obj.credentialHash = message.credentialHash);\n        message.proof !== undefined &&\n            (obj.proof = message.proof\n                ? exports.CredentialProof.toJSON(message.proof)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseCredential);\n        if (object.claim !== undefined && object.claim !== null) {\n            message.claim = exports.Claim.fromPartial(object.claim);\n        }\n        else {\n            message.claim = undefined;\n        }\n        if (object.issuer !== undefined && object.issuer !== null) {\n            message.issuer = object.issuer;\n        }\n        else {\n            message.issuer = \"\";\n        }\n        if (object.issuanceDate !== undefined && object.issuanceDate !== null) {\n            message.issuanceDate = object.issuanceDate;\n        }\n        else {\n            message.issuanceDate = \"\";\n        }\n        if (object.expirationDate !== undefined && object.expirationDate !== null) {\n            message.expirationDate = object.expirationDate;\n        }\n        else {\n            message.expirationDate = \"\";\n        }\n        if (object.credentialHash !== undefined && object.credentialHash !== null) {\n            message.credentialHash = object.credentialHash;\n        }\n        else {\n            message.credentialHash = \"\";\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = exports.CredentialProof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidDocumentState = exports.SignInfo = exports.Service = exports.VerificationMethod = exports.Metadata = exports.Did = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst clientSpec_1 = require(\"./clientSpec\");\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseDid = {\n    context: \"\",\n    id: \"\",\n    controller: \"\",\n    alsoKnownAs: \"\",\n    authentication: \"\",\n    assertionMethod: \"\",\n    keyAgreement: \"\",\n    capabilityInvocation: \"\",\n    capabilityDelegation: \"\",\n};\nexports.Did = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        for (const v of message.context) {\n            writer.uint32(10).string(v);\n        }\n        if (message.id !== \"\") {\n            writer.uint32(18).string(message.id);\n        }\n        for (const v of message.controller) {\n            writer.uint32(26).string(v);\n        }\n        for (const v of message.alsoKnownAs) {\n            writer.uint32(34).string(v);\n        }\n        for (const v of message.verificationMethod) {\n            exports.VerificationMethod.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.authentication) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.assertionMethod) {\n            writer.uint32(58).string(v);\n        }\n        for (const v of message.keyAgreement) {\n            writer.uint32(66).string(v);\n        }\n        for (const v of message.capabilityInvocation) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.capabilityDelegation) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.service) {\n            exports.Service.encode(v, writer.uint32(90).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDid);\n        message.context = [];\n        message.controller = [];\n        message.alsoKnownAs = [];\n        message.verificationMethod = [];\n        message.authentication = [];\n        message.assertionMethod = [];\n        message.keyAgreement = [];\n        message.capabilityInvocation = [];\n        message.capabilityDelegation = [];\n        message.service = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.context.push(reader.string());\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.controller.push(reader.string());\n                    break;\n                case 4:\n                    message.alsoKnownAs.push(reader.string());\n                    break;\n                case 5:\n                    message.verificationMethod.push(exports.VerificationMethod.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.authentication.push(reader.string());\n                    break;\n                case 7:\n                    message.assertionMethod.push(reader.string());\n                    break;\n                case 8:\n                    message.keyAgreement.push(reader.string());\n                    break;\n                case 9:\n                    message.capabilityInvocation.push(reader.string());\n                    break;\n                case 10:\n                    message.capabilityDelegation.push(reader.string());\n                    break;\n                case 11:\n                    message.service.push(exports.Service.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDid);\n        message.context = [];\n        message.controller = [];\n        message.alsoKnownAs = [];\n        message.verificationMethod = [];\n        message.authentication = [];\n        message.assertionMethod = [];\n        message.keyAgreement = [];\n        message.capabilityInvocation = [];\n        message.capabilityDelegation = [];\n        message.service = [];\n        if (object.context !== undefined && object.context !== null) {\n            for (const e of object.context) {\n                message.context.push(String(e));\n            }\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            for (const e of object.controller) {\n                message.controller.push(String(e));\n            }\n        }\n        if (object.alsoKnownAs !== undefined && object.alsoKnownAs !== null) {\n            for (const e of object.alsoKnownAs) {\n                message.alsoKnownAs.push(String(e));\n            }\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            for (const e of object.verificationMethod) {\n                message.verificationMethod.push(exports.VerificationMethod.fromJSON(e));\n            }\n        }\n        if (object.authentication !== undefined && object.authentication !== null) {\n            for (const e of object.authentication) {\n                message.authentication.push(String(e));\n            }\n        }\n        if (object.assertionMethod !== undefined &&\n            object.assertionMethod !== null) {\n            for (const e of object.assertionMethod) {\n                message.assertionMethod.push(String(e));\n            }\n        }\n        if (object.keyAgreement !== undefined && object.keyAgreement !== null) {\n            for (const e of object.keyAgreement) {\n                message.keyAgreement.push(String(e));\n            }\n        }\n        if (object.capabilityInvocation !== undefined &&\n            object.capabilityInvocation !== null) {\n            for (const e of object.capabilityInvocation) {\n                message.capabilityInvocation.push(String(e));\n            }\n        }\n        if (object.capabilityDelegation !== undefined &&\n            object.capabilityDelegation !== null) {\n            for (const e of object.capabilityDelegation) {\n                message.capabilityDelegation.push(String(e));\n            }\n        }\n        if (object.service !== undefined && object.service !== null) {\n            for (const e of object.service) {\n                message.service.push(exports.Service.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.context) {\n            obj.context = message.context.map((e) => e);\n        }\n        else {\n            obj.context = [];\n        }\n        message.id !== undefined && (obj.id = message.id);\n        if (message.controller) {\n            obj.controller = message.controller.map((e) => e);\n        }\n        else {\n            obj.controller = [];\n        }\n        if (message.alsoKnownAs) {\n            obj.alsoKnownAs = message.alsoKnownAs.map((e) => e);\n        }\n        else {\n            obj.alsoKnownAs = [];\n        }\n        if (message.verificationMethod) {\n            obj.verificationMethod = message.verificationMethod.map((e) => e ? exports.VerificationMethod.toJSON(e) : undefined);\n        }\n        else {\n            obj.verificationMethod = [];\n        }\n        if (message.authentication) {\n            obj.authentication = message.authentication.map((e) => e);\n        }\n        else {\n            obj.authentication = [];\n        }\n        if (message.assertionMethod) {\n            obj.assertionMethod = message.assertionMethod.map((e) => e);\n        }\n        else {\n            obj.assertionMethod = [];\n        }\n        if (message.keyAgreement) {\n            obj.keyAgreement = message.keyAgreement.map((e) => e);\n        }\n        else {\n            obj.keyAgreement = [];\n        }\n        if (message.capabilityInvocation) {\n            obj.capabilityInvocation = message.capabilityInvocation.map((e) => e);\n        }\n        else {\n            obj.capabilityInvocation = [];\n        }\n        if (message.capabilityDelegation) {\n            obj.capabilityDelegation = message.capabilityDelegation.map((e) => e);\n        }\n        else {\n            obj.capabilityDelegation = [];\n        }\n        if (message.service) {\n            obj.service = message.service.map((e) => e ? exports.Service.toJSON(e) : undefined);\n        }\n        else {\n            obj.service = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDid);\n        message.context = [];\n        message.controller = [];\n        message.alsoKnownAs = [];\n        message.verificationMethod = [];\n        message.authentication = [];\n        message.assertionMethod = [];\n        message.keyAgreement = [];\n        message.capabilityInvocation = [];\n        message.capabilityDelegation = [];\n        message.service = [];\n        if (object.context !== undefined && object.context !== null) {\n            for (const e of object.context) {\n                message.context.push(e);\n            }\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            for (const e of object.controller) {\n                message.controller.push(e);\n            }\n        }\n        if (object.alsoKnownAs !== undefined && object.alsoKnownAs !== null) {\n            for (const e of object.alsoKnownAs) {\n                message.alsoKnownAs.push(e);\n            }\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            for (const e of object.verificationMethod) {\n                message.verificationMethod.push(exports.VerificationMethod.fromPartial(e));\n            }\n        }\n        if (object.authentication !== undefined && object.authentication !== null) {\n            for (const e of object.authentication) {\n                message.authentication.push(e);\n            }\n        }\n        if (object.assertionMethod !== undefined &&\n            object.assertionMethod !== null) {\n            for (const e of object.assertionMethod) {\n                message.assertionMethod.push(e);\n            }\n        }\n        if (object.keyAgreement !== undefined && object.keyAgreement !== null) {\n            for (const e of object.keyAgreement) {\n                message.keyAgreement.push(e);\n            }\n        }\n        if (object.capabilityInvocation !== undefined &&\n            object.capabilityInvocation !== null) {\n            for (const e of object.capabilityInvocation) {\n                message.capabilityInvocation.push(e);\n            }\n        }\n        if (object.capabilityDelegation !== undefined &&\n            object.capabilityDelegation !== null) {\n            for (const e of object.capabilityDelegation) {\n                message.capabilityDelegation.push(e);\n            }\n        }\n        if (object.service !== undefined && object.service !== null) {\n            for (const e of object.service) {\n                message.service.push(exports.Service.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = {\n    created: \"\",\n    updated: \"\",\n    deactivated: false,\n    versionId: \"\",\n};\nexports.Metadata = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.created !== \"\") {\n            writer.uint32(10).string(message.created);\n        }\n        if (message.updated !== \"\") {\n            writer.uint32(18).string(message.updated);\n        }\n        if (message.deactivated === true) {\n            writer.uint32(24).bool(message.deactivated);\n        }\n        if (message.versionId !== \"\") {\n            writer.uint32(34).string(message.versionId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMetadata);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.created = reader.string();\n                    break;\n                case 2:\n                    message.updated = reader.string();\n                    break;\n                case 3:\n                    message.deactivated = reader.bool();\n                    break;\n                case 4:\n                    message.versionId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMetadata);\n        if (object.created !== undefined && object.created !== null) {\n            message.created = String(object.created);\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = String(object.updated);\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.deactivated !== undefined && object.deactivated !== null) {\n            message.deactivated = Boolean(object.deactivated);\n        }\n        else {\n            message.deactivated = false;\n        }\n        if (object.versionId !== undefined && object.versionId !== null) {\n            message.versionId = String(object.versionId);\n        }\n        else {\n            message.versionId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.created !== undefined && (obj.created = message.created);\n        message.updated !== undefined && (obj.updated = message.updated);\n        message.deactivated !== undefined &&\n            (obj.deactivated = message.deactivated);\n        message.versionId !== undefined && (obj.versionId = message.versionId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMetadata);\n        if (object.created !== undefined && object.created !== null) {\n            message.created = object.created;\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.updated !== undefined && object.updated !== null) {\n            message.updated = object.updated;\n        }\n        else {\n            message.updated = \"\";\n        }\n        if (object.deactivated !== undefined && object.deactivated !== null) {\n            message.deactivated = object.deactivated;\n        }\n        else {\n            message.deactivated = false;\n        }\n        if (object.versionId !== undefined && object.versionId !== null) {\n            message.versionId = object.versionId;\n        }\n        else {\n            message.versionId = \"\";\n        }\n        return message;\n    },\n};\nconst baseVerificationMethod = {\n    id: \"\",\n    type: \"\",\n    controller: \"\",\n    publicKeyMultibase: \"\",\n    blockchainAccountId: \"\",\n};\nexports.VerificationMethod = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.type !== \"\") {\n            writer.uint32(18).string(message.type);\n        }\n        if (message.controller !== \"\") {\n            writer.uint32(26).string(message.controller);\n        }\n        if (message.publicKeyMultibase !== \"\") {\n            writer.uint32(34).string(message.publicKeyMultibase);\n        }\n        if (message.blockchainAccountId !== \"\") {\n            writer.uint32(42).string(message.blockchainAccountId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseVerificationMethod);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.type = reader.string();\n                    break;\n                case 3:\n                    message.controller = reader.string();\n                    break;\n                case 4:\n                    message.publicKeyMultibase = reader.string();\n                    break;\n                case 5:\n                    message.blockchainAccountId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseVerificationMethod);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            message.controller = String(object.controller);\n        }\n        else {\n            message.controller = \"\";\n        }\n        if (object.publicKeyMultibase !== undefined &&\n            object.publicKeyMultibase !== null) {\n            message.publicKeyMultibase = String(object.publicKeyMultibase);\n        }\n        else {\n            message.publicKeyMultibase = \"\";\n        }\n        if (object.blockchainAccountId !== undefined &&\n            object.blockchainAccountId !== null) {\n            message.blockchainAccountId = String(object.blockchainAccountId);\n        }\n        else {\n            message.blockchainAccountId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.type !== undefined && (obj.type = message.type);\n        message.controller !== undefined && (obj.controller = message.controller);\n        message.publicKeyMultibase !== undefined &&\n            (obj.publicKeyMultibase = message.publicKeyMultibase);\n        message.blockchainAccountId !== undefined &&\n            (obj.blockchainAccountId = message.blockchainAccountId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseVerificationMethod);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.controller !== undefined && object.controller !== null) {\n            message.controller = object.controller;\n        }\n        else {\n            message.controller = \"\";\n        }\n        if (object.publicKeyMultibase !== undefined &&\n            object.publicKeyMultibase !== null) {\n            message.publicKeyMultibase = object.publicKeyMultibase;\n        }\n        else {\n            message.publicKeyMultibase = \"\";\n        }\n        if (object.blockchainAccountId !== undefined &&\n            object.blockchainAccountId !== null) {\n            message.blockchainAccountId = object.blockchainAccountId;\n        }\n        else {\n            message.blockchainAccountId = \"\";\n        }\n        return message;\n    },\n};\nconst baseService = { id: \"\", type: \"\", serviceEndpoint: \"\" };\nexports.Service = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.type !== \"\") {\n            writer.uint32(18).string(message.type);\n        }\n        if (message.serviceEndpoint !== \"\") {\n            writer.uint32(26).string(message.serviceEndpoint);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseService);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.type = reader.string();\n                    break;\n                case 3:\n                    message.serviceEndpoint = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseService);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.serviceEndpoint !== undefined &&\n            object.serviceEndpoint !== null) {\n            message.serviceEndpoint = String(object.serviceEndpoint);\n        }\n        else {\n            message.serviceEndpoint = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.type !== undefined && (obj.type = message.type);\n        message.serviceEndpoint !== undefined &&\n            (obj.serviceEndpoint = message.serviceEndpoint);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseService);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.serviceEndpoint !== undefined &&\n            object.serviceEndpoint !== null) {\n            message.serviceEndpoint = object.serviceEndpoint;\n        }\n        else {\n            message.serviceEndpoint = \"\";\n        }\n        return message;\n    },\n};\nconst baseSignInfo = { verification_method_id: \"\", signature: \"\" };\nexports.SignInfo = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.verification_method_id !== \"\") {\n            writer.uint32(10).string(message.verification_method_id);\n        }\n        if (message.signature !== \"\") {\n            writer.uint32(18).string(message.signature);\n        }\n        if (message.clientSpec !== undefined) {\n            clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSignInfo);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.verification_method_id = reader.string();\n                    break;\n                case 2:\n                    message.signature = reader.string();\n                    break;\n                case 3:\n                    message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSignInfo);\n        if (object.verification_method_id !== undefined &&\n            object.verification_method_id !== null) {\n            message.verification_method_id = String(object.verification_method_id);\n        }\n        else {\n            message.verification_method_id = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = String(object.signature);\n        }\n        else {\n            message.signature = \"\";\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.verification_method_id !== undefined &&\n            (obj.verification_method_id = message.verification_method_id);\n        message.signature !== undefined && (obj.signature = message.signature);\n        message.clientSpec !== undefined &&\n            (obj.clientSpec = message.clientSpec\n                ? clientSpec_1.ClientSpec.toJSON(message.clientSpec)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSignInfo);\n        if (object.verification_method_id !== undefined &&\n            object.verification_method_id !== null) {\n            message.verification_method_id = object.verification_method_id;\n        }\n        else {\n            message.verification_method_id = \"\";\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = \"\";\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n};\nconst baseDidDocumentState = {};\nexports.DidDocumentState = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.didDocument !== undefined) {\n            exports.Did.encode(message.didDocument, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.didDocumentMetadata !== undefined) {\n            exports.Metadata.encode(message.didDocumentMetadata, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseDidDocumentState);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.didDocument = exports.Did.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.didDocumentMetadata = exports.Metadata.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseDidDocumentState);\n        if (object.didDocument !== undefined && object.didDocument !== null) {\n            message.didDocument = exports.Did.fromJSON(object.didDocument);\n        }\n        else {\n            message.didDocument = undefined;\n        }\n        if (object.didDocumentMetadata !== undefined &&\n            object.didDocumentMetadata !== null) {\n            message.didDocumentMetadata = exports.Metadata.fromJSON(object.didDocumentMetadata);\n        }\n        else {\n            message.didDocumentMetadata = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.didDocument !== undefined &&\n            (obj.didDocument = message.didDocument\n                ? exports.Did.toJSON(message.didDocument)\n                : undefined);\n        message.didDocumentMetadata !== undefined &&\n            (obj.didDocumentMetadata = message.didDocumentMetadata\n                ? exports.Metadata.toJSON(message.didDocumentMetadata)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseDidDocumentState);\n        if (object.didDocument !== undefined && object.didDocument !== null) {\n            message.didDocument = exports.Did.fromPartial(object.didDocument);\n        }\n        else {\n            message.didDocument = undefined;\n        }\n        if (object.didDocumentMetadata !== undefined &&\n            object.didDocumentMetadata !== null) {\n            message.didDocumentMetadata = exports.Metadata.fromPartial(object.didDocumentMetadata);\n        }\n        else {\n            message.didDocumentMetadata = undefined;\n        }\n        return message;\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Schema = exports.SchemaProof = exports.SchemaProperty = exports.SchemaDocument = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseSchemaDocument = {\n    type: \"\",\n    modelVersion: \"\",\n    id: \"\",\n    name: \"\",\n    author: \"\",\n    authored: \"\",\n};\nexports.SchemaDocument = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.modelVersion !== \"\") {\n            writer.uint32(18).string(message.modelVersion);\n        }\n        if (message.id !== \"\") {\n            writer.uint32(26).string(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.author !== \"\") {\n            writer.uint32(42).string(message.author);\n        }\n        if (message.authored !== \"\") {\n            writer.uint32(50).string(message.authored);\n        }\n        if (message.schema !== undefined) {\n            exports.SchemaProperty.encode(message.schema, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSchemaDocument);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.modelVersion = reader.string();\n                    break;\n                case 3:\n                    message.id = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.author = reader.string();\n                    break;\n                case 6:\n                    message.authored = reader.string();\n                    break;\n                case 7:\n                    message.schema = exports.SchemaProperty.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSchemaDocument);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.modelVersion !== undefined && object.modelVersion !== null) {\n            message.modelVersion = String(object.modelVersion);\n        }\n        else {\n            message.modelVersion = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.author !== undefined && object.author !== null) {\n            message.author = String(object.author);\n        }\n        else {\n            message.author = \"\";\n        }\n        if (object.authored !== undefined && object.authored !== null) {\n            message.authored = String(object.authored);\n        }\n        else {\n            message.authored = \"\";\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = exports.SchemaProperty.fromJSON(object.schema);\n        }\n        else {\n            message.schema = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.modelVersion !== undefined &&\n            (obj.modelVersion = message.modelVersion);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.author !== undefined && (obj.author = message.author);\n        message.authored !== undefined && (obj.authored = message.authored);\n        message.schema !== undefined &&\n            (obj.schema = message.schema\n                ? exports.SchemaProperty.toJSON(message.schema)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSchemaDocument);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.modelVersion !== undefined && object.modelVersion !== null) {\n            message.modelVersion = object.modelVersion;\n        }\n        else {\n            message.modelVersion = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.author !== undefined && object.author !== null) {\n            message.author = object.author;\n        }\n        else {\n            message.author = \"\";\n        }\n        if (object.authored !== undefined && object.authored !== null) {\n            message.authored = object.authored;\n        }\n        else {\n            message.authored = \"\";\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = exports.SchemaProperty.fromPartial(object.schema);\n        }\n        else {\n            message.schema = undefined;\n        }\n        return message;\n    },\n};\nconst baseSchemaProperty = {\n    schema: \"\",\n    description: \"\",\n    type: \"\",\n    properties: \"\",\n    required: \"\",\n    additionalProperties: false,\n};\nexports.SchemaProperty = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.schema !== \"\") {\n            writer.uint32(10).string(message.schema);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.type !== \"\") {\n            writer.uint32(26).string(message.type);\n        }\n        if (message.properties !== \"\") {\n            writer.uint32(34).string(message.properties);\n        }\n        for (const v of message.required) {\n            writer.uint32(42).string(v);\n        }\n        if (message.additionalProperties === true) {\n            writer.uint32(48).bool(message.additionalProperties);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSchemaProperty);\n        message.required = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.schema = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.type = reader.string();\n                    break;\n                case 4:\n                    message.properties = reader.string();\n                    break;\n                case 5:\n                    message.required.push(reader.string());\n                    break;\n                case 6:\n                    message.additionalProperties = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSchemaProperty);\n        message.required = [];\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.properties !== undefined && object.properties !== null) {\n            message.properties = String(object.properties);\n        }\n        else {\n            message.properties = \"\";\n        }\n        if (object.required !== undefined && object.required !== null) {\n            for (const e of object.required) {\n                message.required.push(String(e));\n            }\n        }\n        if (object.additionalProperties !== undefined &&\n            object.additionalProperties !== null) {\n            message.additionalProperties = Boolean(object.additionalProperties);\n        }\n        else {\n            message.additionalProperties = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.type !== undefined && (obj.type = message.type);\n        message.properties !== undefined && (obj.properties = message.properties);\n        if (message.required) {\n            obj.required = message.required.map((e) => e);\n        }\n        else {\n            obj.required = [];\n        }\n        message.additionalProperties !== undefined &&\n            (obj.additionalProperties = message.additionalProperties);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSchemaProperty);\n        message.required = [];\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.properties !== undefined && object.properties !== null) {\n            message.properties = object.properties;\n        }\n        else {\n            message.properties = \"\";\n        }\n        if (object.required !== undefined && object.required !== null) {\n            for (const e of object.required) {\n                message.required.push(e);\n            }\n        }\n        if (object.additionalProperties !== undefined &&\n            object.additionalProperties !== null) {\n            message.additionalProperties = object.additionalProperties;\n        }\n        else {\n            message.additionalProperties = false;\n        }\n        return message;\n    },\n};\nconst baseSchemaProof = {\n    type: \"\",\n    created: \"\",\n    verificationMethod: \"\",\n    proofPurpose: \"\",\n    proofValue: \"\",\n};\nexports.SchemaProof = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.created !== \"\") {\n            writer.uint32(18).string(message.created);\n        }\n        if (message.verificationMethod !== \"\") {\n            writer.uint32(34).string(message.verificationMethod);\n        }\n        if (message.proofPurpose !== \"\") {\n            writer.uint32(42).string(message.proofPurpose);\n        }\n        if (message.proofValue !== \"\") {\n            writer.uint32(50).string(message.proofValue);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSchemaProof);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.created = reader.string();\n                    break;\n                case 4:\n                    message.verificationMethod = reader.string();\n                    break;\n                case 5:\n                    message.proofPurpose = reader.string();\n                    break;\n                case 6:\n                    message.proofValue = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSchemaProof);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.created !== undefined && object.created !== null) {\n            message.created = String(object.created);\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            message.verificationMethod = String(object.verificationMethod);\n        }\n        else {\n            message.verificationMethod = \"\";\n        }\n        if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n            message.proofPurpose = String(object.proofPurpose);\n        }\n        else {\n            message.proofPurpose = \"\";\n        }\n        if (object.proofValue !== undefined && object.proofValue !== null) {\n            message.proofValue = String(object.proofValue);\n        }\n        else {\n            message.proofValue = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.created !== undefined && (obj.created = message.created);\n        message.verificationMethod !== undefined &&\n            (obj.verificationMethod = message.verificationMethod);\n        message.proofPurpose !== undefined &&\n            (obj.proofPurpose = message.proofPurpose);\n        message.proofValue !== undefined && (obj.proofValue = message.proofValue);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSchemaProof);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.created !== undefined && object.created !== null) {\n            message.created = object.created;\n        }\n        else {\n            message.created = \"\";\n        }\n        if (object.verificationMethod !== undefined &&\n            object.verificationMethod !== null) {\n            message.verificationMethod = object.verificationMethod;\n        }\n        else {\n            message.verificationMethod = \"\";\n        }\n        if (object.proofPurpose !== undefined && object.proofPurpose !== null) {\n            message.proofPurpose = object.proofPurpose;\n        }\n        else {\n            message.proofPurpose = \"\";\n        }\n        if (object.proofValue !== undefined && object.proofValue !== null) {\n            message.proofValue = object.proofValue;\n        }\n        else {\n            message.proofValue = \"\";\n        }\n        return message;\n    },\n};\nconst baseSchema = {\n    type: \"\",\n    modelVersion: \"\",\n    id: \"\",\n    name: \"\",\n    author: \"\",\n    authored: \"\",\n};\nexports.Schema = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.modelVersion !== \"\") {\n            writer.uint32(18).string(message.modelVersion);\n        }\n        if (message.id !== \"\") {\n            writer.uint32(26).string(message.id);\n        }\n        if (message.name !== \"\") {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.author !== \"\") {\n            writer.uint32(42).string(message.author);\n        }\n        if (message.authored !== \"\") {\n            writer.uint32(50).string(message.authored);\n        }\n        if (message.schema !== undefined) {\n            exports.SchemaProperty.encode(message.schema, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proof !== undefined) {\n            exports.SchemaProof.encode(message.proof, writer.uint32(66).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseSchema);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.modelVersion = reader.string();\n                    break;\n                case 3:\n                    message.id = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.author = reader.string();\n                    break;\n                case 6:\n                    message.authored = reader.string();\n                    break;\n                case 7:\n                    message.schema = exports.SchemaProperty.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proof = exports.SchemaProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseSchema);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.modelVersion !== undefined && object.modelVersion !== null) {\n            message.modelVersion = String(object.modelVersion);\n        }\n        else {\n            message.modelVersion = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.author !== undefined && object.author !== null) {\n            message.author = String(object.author);\n        }\n        else {\n            message.author = \"\";\n        }\n        if (object.authored !== undefined && object.authored !== null) {\n            message.authored = String(object.authored);\n        }\n        else {\n            message.authored = \"\";\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = exports.SchemaProperty.fromJSON(object.schema);\n        }\n        else {\n            message.schema = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = exports.SchemaProof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.modelVersion !== undefined &&\n            (obj.modelVersion = message.modelVersion);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.author !== undefined && (obj.author = message.author);\n        message.authored !== undefined && (obj.authored = message.authored);\n        message.schema !== undefined &&\n            (obj.schema = message.schema\n                ? exports.SchemaProperty.toJSON(message.schema)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = message.proof\n                ? exports.SchemaProof.toJSON(message.proof)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseSchema);\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.modelVersion !== undefined && object.modelVersion !== null) {\n            message.modelVersion = object.modelVersion;\n        }\n        else {\n            message.modelVersion = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.author !== undefined && object.author !== null) {\n            message.author = object.author;\n        }\n        else {\n            message.author = \"\";\n        }\n        if (object.authored !== undefined && object.authored !== null) {\n            message.authored = object.authored;\n        }\n        else {\n            message.authored = \"\";\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = exports.SchemaProperty.fromPartial(object.schema);\n        }\n        else {\n            message.schema = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = exports.SchemaProof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MsgClientImpl = exports.MsgRegisterCredentialStatusResponse = exports.MsgRegisterCredentialStatus = exports.MsgDeactivateDIDResponse = exports.MsgDeactivateDID = exports.MsgCreateSchemaResponse = exports.MsgCreateSchema = exports.MsgUpdateDIDResponse = exports.MsgUpdateDID = exports.MsgCreateDIDResponse = exports.MsgCreateDID = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst minimal_1 = require(\"protobufjs/minimal\");\nconst did_1 = require(\"./did\");\nconst schema_1 = require(\"./schema\");\nconst clientSpec_1 = require(\"./clientSpec\");\nconst credential_1 = require(\"./credential\");\nexports.protobufPackage = \"hypersignprotocol.hidnode.ssi\";\nconst baseMsgCreateDID = { creator: \"\" };\nexports.MsgCreateDID = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.didDocString !== undefined) {\n            did_1.Did.encode(message.didDocString, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            did_1.SignInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.creator !== \"\") {\n            writer.uint32(26).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateDID);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.didDocString = did_1.Did.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromJSON(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromJSON(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.didDocString !== undefined &&\n            (obj.didDocString = message.didDocString\n                ? did_1.Did.toJSON(message.didDocString)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? did_1.SignInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromPartial(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromPartial(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateDIDResponse = { id: 0 };\nexports.MsgCreateDIDResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateDIDResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateDID = { version_id: \"\", creator: \"\" };\nexports.MsgUpdateDID = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.didDocString !== undefined) {\n            did_1.Did.encode(message.didDocString, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.version_id !== \"\") {\n            writer.uint32(18).string(message.version_id);\n        }\n        for (const v of message.signatures) {\n            did_1.SignInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.creator !== \"\") {\n            writer.uint32(34).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgUpdateDID);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.didDocString = did_1.Did.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.version_id = reader.string();\n                    break;\n                case 3:\n                    message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgUpdateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromJSON(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = String(object.version_id);\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromJSON(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.didDocString !== undefined &&\n            (obj.didDocString = message.didDocString\n                ? did_1.Did.toJSON(message.didDocString)\n                : undefined);\n        message.version_id !== undefined && (obj.version_id = message.version_id);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? did_1.SignInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgUpdateDID);\n        message.signatures = [];\n        if (object.didDocString !== undefined && object.didDocString !== null) {\n            message.didDocString = did_1.Did.fromPartial(object.didDocString);\n        }\n        else {\n            message.didDocString = undefined;\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = object.version_id;\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromPartial(e));\n            }\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateDIDResponse = { updateId: \"\" };\nexports.MsgUpdateDIDResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.updateId !== \"\") {\n            writer.uint32(10).string(message.updateId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgUpdateDIDResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgUpdateDIDResponse);\n        if (object.updateId !== undefined && object.updateId !== null) {\n            message.updateId = String(object.updateId);\n        }\n        else {\n            message.updateId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateId !== undefined && (obj.updateId = message.updateId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgUpdateDIDResponse);\n        if (object.updateId !== undefined && object.updateId !== null) {\n            message.updateId = object.updateId;\n        }\n        else {\n            message.updateId = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateSchema = { creator: \"\" };\nexports.MsgCreateSchema = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.schemaDoc !== undefined) {\n            schema_1.SchemaDocument.encode(message.schemaDoc, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.schemaProof !== undefined) {\n            schema_1.SchemaProof.encode(message.schemaProof, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientSpec !== undefined) {\n            clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateSchema);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.schemaDoc = schema_1.SchemaDocument.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.schemaProof = schema_1.SchemaProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateSchema);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.schemaDoc !== undefined && object.schemaDoc !== null) {\n            message.schemaDoc = schema_1.SchemaDocument.fromJSON(object.schemaDoc);\n        }\n        else {\n            message.schemaDoc = undefined;\n        }\n        if (object.schemaProof !== undefined && object.schemaProof !== null) {\n            message.schemaProof = schema_1.SchemaProof.fromJSON(object.schemaProof);\n        }\n        else {\n            message.schemaProof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.schemaDoc !== undefined &&\n            (obj.schemaDoc = message.schemaDoc\n                ? schema_1.SchemaDocument.toJSON(message.schemaDoc)\n                : undefined);\n        message.schemaProof !== undefined &&\n            (obj.schemaProof = message.schemaProof\n                ? schema_1.SchemaProof.toJSON(message.schemaProof)\n                : undefined);\n        message.clientSpec !== undefined &&\n            (obj.clientSpec = message.clientSpec\n                ? clientSpec_1.ClientSpec.toJSON(message.clientSpec)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateSchema);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.schemaDoc !== undefined && object.schemaDoc !== null) {\n            message.schemaDoc = schema_1.SchemaDocument.fromPartial(object.schemaDoc);\n        }\n        else {\n            message.schemaDoc = undefined;\n        }\n        if (object.schemaProof !== undefined && object.schemaProof !== null) {\n            message.schemaProof = schema_1.SchemaProof.fromPartial(object.schemaProof);\n        }\n        else {\n            message.schemaProof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateSchemaResponse = { id: 0 };\nexports.MsgCreateSchemaResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgCreateSchemaResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgCreateSchemaResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgCreateSchemaResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeactivateDID = { creator: \"\", didId: \"\", version_id: \"\" };\nexports.MsgDeactivateDID = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.didId !== \"\") {\n            writer.uint32(18).string(message.didId);\n        }\n        if (message.version_id !== \"\") {\n            writer.uint32(26).string(message.version_id);\n        }\n        for (const v of message.signatures) {\n            did_1.SignInfo.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgDeactivateDID);\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.didId = reader.string();\n                    break;\n                case 3:\n                    message.version_id = reader.string();\n                    break;\n                case 4:\n                    message.signatures.push(did_1.SignInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgDeactivateDID);\n        message.signatures = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.didId !== undefined && object.didId !== null) {\n            message.didId = String(object.didId);\n        }\n        else {\n            message.didId = \"\";\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = String(object.version_id);\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.didId !== undefined && (obj.didId = message.didId);\n        message.version_id !== undefined && (obj.version_id = message.version_id);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? did_1.SignInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgDeactivateDID);\n        message.signatures = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.didId !== undefined && object.didId !== null) {\n            message.didId = object.didId;\n        }\n        else {\n            message.didId = \"\";\n        }\n        if (object.version_id !== undefined && object.version_id !== null) {\n            message.version_id = object.version_id;\n        }\n        else {\n            message.version_id = \"\";\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(did_1.SignInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDeactivateDIDResponse = { id: 0 };\nexports.MsgDeactivateDIDResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgDeactivateDIDResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgRegisterCredentialStatus = { creator: \"\" };\nexports.MsgRegisterCredentialStatus = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.credentialStatus !== undefined) {\n            credential_1.CredentialStatus.encode(message.credentialStatus, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proof !== undefined) {\n            credential_1.CredentialProof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientSpec !== undefined) {\n            clientSpec_1.ClientSpec.encode(message.clientSpec, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.credentialStatus = credential_1.CredentialStatus.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.proof = credential_1.CredentialProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientSpec = clientSpec_1.ClientSpec.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.credentialStatus !== undefined &&\n            object.credentialStatus !== null) {\n            message.credentialStatus = credential_1.CredentialStatus.fromJSON(object.credentialStatus);\n        }\n        else {\n            message.credentialStatus = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = credential_1.CredentialProof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromJSON(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.credentialStatus !== undefined &&\n            (obj.credentialStatus = message.credentialStatus\n                ? credential_1.CredentialStatus.toJSON(message.credentialStatus)\n                : undefined);\n        message.proof !== undefined &&\n            (obj.proof = message.proof\n                ? credential_1.CredentialProof.toJSON(message.proof)\n                : undefined);\n        message.clientSpec !== undefined &&\n            (obj.clientSpec = message.clientSpec\n                ? clientSpec_1.ClientSpec.toJSON(message.clientSpec)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatus);\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.credentialStatus !== undefined &&\n            object.credentialStatus !== null) {\n            message.credentialStatus = credential_1.CredentialStatus.fromPartial(object.credentialStatus);\n        }\n        else {\n            message.credentialStatus = undefined;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = credential_1.CredentialProof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        if (object.clientSpec !== undefined && object.clientSpec !== null) {\n            message.clientSpec = clientSpec_1.ClientSpec.fromPartial(object.clientSpec);\n        }\n        else {\n            message.clientSpec = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgRegisterCredentialStatusResponse = { id: 0 };\nexports.MsgRegisterCredentialStatusResponse = {\n    encode(message, writer = minimal_1.Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = Object.assign({}, baseMsgRegisterCredentialStatusResponse);\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nclass MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDID(request) {\n        const data = exports.MsgCreateDID.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"CreateDID\", data);\n        return promise.then((data) => exports.MsgCreateDIDResponse.decode(new minimal_1.Reader(data)));\n    }\n    UpdateDID(request) {\n        const data = exports.MsgUpdateDID.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"UpdateDID\", data);\n        return promise.then((data) => exports.MsgUpdateDIDResponse.decode(new minimal_1.Reader(data)));\n    }\n    CreateSchema(request) {\n        const data = exports.MsgCreateSchema.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"CreateSchema\", data);\n        return promise.then((data) => exports.MsgCreateSchemaResponse.decode(new minimal_1.Reader(data)));\n    }\n    DeactivateDID(request) {\n        const data = exports.MsgDeactivateDID.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"DeactivateDID\", data);\n        return promise.then((data) => exports.MsgDeactivateDIDResponse.decode(new minimal_1.Reader(data)));\n    }\n    RegisterCredentialStatus(request) {\n        const data = exports.MsgRegisterCredentialStatus.encode(request).finish();\n        const promise = this.rpc.request(\"hypersignprotocol.hidnode.ssi.Msg\", \"RegisterCredentialStatus\", data);\n        return promise.then((data) => exports.MsgRegisterCredentialStatusResponse.decode(new minimal_1.Reader(data)));\n    }\n}\nexports.MsgClientImpl = MsgClientImpl;\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\n// if (util.Long !== Long) {\n//   util.Long = Long as any;\n//   configure();\n// }\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst did_json_1 = __importDefault(require(\"./did.json\"));\nconst ed25519_signature_2020_json_1 = __importDefault(require(\"./ed25519-signature-2020.json\"));\nconst security_v2_json_1 = __importDefault(require(\"./security-v2.json\"));\nconst credentials_json_1 = __importDefault(require(\"./credentials.json\"));\nconst jsonld_1 = __importDefault(require(\"jsonld\"));\nconst vc_data_integrety_json_1 = __importDefault(require(\"./vc-data-integrety.json\"));\nconst lds_ecdsa_secp256k1_recovery2020_json_1 = __importDefault(require(\"./lds-ecdsa-secp256k1-recovery2020.json\"));\nconst schema_org_json_1 = __importDefault(require(\"./schema_org.json\"));\nconst x25519_key_agreement_2020_v1_json_1 = __importDefault(require(\"./x25519-key-agreement-2020-v1.json\"));\n// Ref: https://github.com/digitalbazaar/jsonld.js/#custom-document-loader\nlet nodeDocumentLoader;\nif (typeof window === 'undefined') {\n    nodeDocumentLoader = jsonld_1.default.documentLoaders.node();\n}\nelse {\n    nodeDocumentLoader = jsonld_1.default.documentLoaders.xhr();\n}\nconst did_wellknown_json_1 = __importDefault(require(\"./did-wellknown.json\"));\nconst CONTEXTS = Object.freeze({\n    \"https://www.w3.org/ns/did/v1\": Object.assign({}, did_json_1.default),\n    \"https://w3id.org/security/suites/ed25519-2020/v1\": Object.assign({}, ed25519_signature_2020_json_1.default),\n    \"https://w3id.org/security/v2\": Object.assign({}, security_v2_json_1.default),\n    \"https://www.w3.org/2018/credentials/v1\": Object.assign({}, credentials_json_1.default),\n    \"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld\": Object.assign({}, vc_data_integrety_json_1.default),\n    \"https://w3id.org/security/suites/secp256k1recovery-2020/v2\": Object.assign({}, lds_ecdsa_secp256k1_recovery2020_json_1.default),\n    \"https://schema.org\": Object.assign({}, schema_org_json_1.default),\n    \"https://digitalbazaar.github.io/x25519-key-agreement-2020-context/contexts/x25519-key-agreement-2020-v1.jsonld\": Object.assign({}, x25519_key_agreement_2020_v1_json_1.default),\n    \"https://identity.foundation/.well-known/did-configuration/v1\": Object.assign({}, did_wellknown_json_1.default)\n});\nexports.default = (url, options) => __awaiter(void 0, void 0, void 0, function* () {\n    if (url in CONTEXTS) {\n        return {\n            contextUrl: null,\n            document: CONTEXTS[url],\n            documentUrl: url // this is the actual context URL after redirects\n        };\n    }\n    // call the default documentLoader    \n    return nodeDocumentLoader(url);\n});\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HID_MIN_FEE = exports.HID_MIN_GAS = exports.HID_DNOMINATION = exports.HID_DECIMAL = exports.GAS_PRICE = exports.KEY_HEADERS = exports.SCHEMA = exports.VP = exports.VC = exports.DID = exports.CAIP_10_PREFIX = exports.DID_EcdsaSecp256k1VerificationKey2019 = exports.DID_EcdsaSecp256k1RecoveryMethod2020 = exports.DID_Ed25519VerificationKey2020 = exports.CredentialStatusReasonEnums = exports.CredentialStatusEnums = exports.HIDRpcEnums = exports.HYPERSIGN_NETWORK_BANK_BALANCE_PATH = exports.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH = exports.HYPERSIGN_NETWORK_SCHEMA_PATH = exports.HYPERSIGN_NETWORK_DID_PATH = exports.HID_COSMOS_MODULE = exports.HYPERSIGN_MAINNET_REST = exports.HYPERSIGN_MAINNET_RPC = exports.HYPERSIGN_TESTNET_REST = exports.HYPERSIGN_TESTNET_RPC = exports.compactProof = void 0;\nexports.compactProof = false;\nexports.HYPERSIGN_TESTNET_RPC = 'https://rpc.jagrat.hypersign.id';\nexports.HYPERSIGN_TESTNET_REST = 'https://api.jagrat.hypersign.id';\nexports.HYPERSIGN_MAINNET_RPC = 'http://localhost:26657';\nexports.HYPERSIGN_MAINNET_REST = 'http://localhost:1317';\nexports.HID_COSMOS_MODULE = '/hypersignprotocol.hidnode.ssi';\nexports.HYPERSIGN_NETWORK_DID_PATH = 'hypersign-protocol/hidnode/ssi/did';\nexports.HYPERSIGN_NETWORK_SCHEMA_PATH = 'hypersign-protocol/hidnode/ssi/schema';\nexports.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH = 'hypersign-protocol/hidnode/ssi/credential';\nexports.HYPERSIGN_NETWORK_BANK_BALANCE_PATH = '/bank/balances/';\nvar HIDRpcEnums;\n(function (HIDRpcEnums) {\n    HIDRpcEnums[\"MsgCreateDID\"] = \"MsgCreateDID\";\n    HIDRpcEnums[\"MsgUpdateDID\"] = \"MsgUpdateDID\";\n    HIDRpcEnums[\"MsgDeactivateDID\"] = \"MsgDeactivateDID\";\n    HIDRpcEnums[\"MsgCreateSchema\"] = \"MsgCreateSchema\";\n    HIDRpcEnums[\"MsgRegisterCredentialStatus\"] = \"MsgRegisterCredentialStatus\";\n})(HIDRpcEnums = exports.HIDRpcEnums || (exports.HIDRpcEnums = {}));\nObject.freeze(HIDRpcEnums);\nvar CredentialStatusEnums;\n(function (CredentialStatusEnums) {\n    CredentialStatusEnums[\"LIVE\"] = \"Live\";\n    CredentialStatusEnums[\"REVOKED\"] = \"Revoked\";\n    CredentialStatusEnums[\"SUSPENDED\"] = \"Suspended\";\n})(CredentialStatusEnums = exports.CredentialStatusEnums || (exports.CredentialStatusEnums = {}));\nvar CredentialStatusReasonEnums;\n(function (CredentialStatusReasonEnums) {\n    CredentialStatusReasonEnums[\"LIVE\"] = \"Credential is live\";\n    CredentialStatusReasonEnums[\"REVOKED\"] = \"Credential is revoked\";\n    CredentialStatusReasonEnums[\"SUSPENDED\"] = \"Credential is suspended\";\n})(CredentialStatusReasonEnums = exports.CredentialStatusReasonEnums || (exports.CredentialStatusReasonEnums = {}));\nexports.DID_Ed25519VerificationKey2020 = {\n    CONTROLLER_CONTEXT: 'https://w3id.org/security/v2',\n    SCHEME: 'did',\n    METHOD: 'hid',\n    NAMESPACE: 'testnet',\n    DID_BASE_CONTEXT: 'https://www.w3.org/ns/did/v1',\n    DID_KEYAGREEMENT_CONTEXT: \"https://digitalbazaar.github.io/x25519-key-agreement-2020-context/contexts/x25519-key-agreement-2020-v1.jsonld\",\n    VERIFICATION_METHOD_TYPE: 'Ed25519VerificationKey2020',\n    BLOCKCHAINACCOUNTID_CONTEXT: 'https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld',\n};\nexports.DID_EcdsaSecp256k1RecoveryMethod2020 = {\n    CONTROLLER_CONTEXT: 'https://w3id.org/security/v2',\n    SCHEME: 'did',\n    METHOD: 'hid',\n    NAMESPACE: 'testnet',\n    DID_BASE_CONTEXT: 'https://www.w3.org/ns/did/v1',\n    DID_KEYAGREEMENT_CONTEXT: \"https://github.com/hypersign-protocol/hid-ssi-js-sdk/blob/develop/libs/w3cache/v1/X25519KeyAgreementKeyEIP5630.json\",\n    BLOCKCHAINACCOUNTID_CONTEXT: 'https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld',\n    VERIFICATION_METHOD_TYPE: 'EcdsaSecp256k1RecoveryMethod2020',\n};\nexports.DID_EcdsaSecp256k1VerificationKey2019 = {\n    CONTROLLER_CONTEXT: 'https://w3id.org/security/v2',\n    SCHEME: 'did',\n    METHOD: 'hid',\n    NAMESPACE: 'testnet',\n    DID_BASE_CONTEXT: 'https://www.w3.org/ns/did/v1',\n    BLOCKCHAINACCOUNTID_CONTEXT: 'https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld',\n    VERIFICATION_METHOD_TYPE: 'EcdsaSecp256k1VerificationKey2019',\n};\nvar CAIP_10_PREFIX;\n(function (CAIP_10_PREFIX) {\n    CAIP_10_PREFIX[\"eip155\"] = \"eip155\";\n})(CAIP_10_PREFIX = exports.CAIP_10_PREFIX || (exports.CAIP_10_PREFIX = {}));\nexports.DID = {\n    CONTROLLER_CONTEXT: 'https://w3id.org/security/v2',\n    SCHEME: 'did',\n    METHOD: 'hid',\n    NAMESPACE: 'testnet',\n    DID_BASE_CONTEXT: 'https://www.w3.org/ns/did/v1',\n    VERIFICATION_METHOD_TYPE: 'Ed25519VerificationKey2020',\n    BLOCKCHAINACCOUNTID_CONTEXT: 'https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld',\n};\nObject.freeze(exports.DID);\nexports.VC = {\n    SCHEME: \"vc\",\n    METHOD: \"hid\",\n    NAMESPACE: \"testnet\",\n    PREFIX: \"vc:\" + exports.DID.METHOD + \":\" + exports.DID.NAMESPACE + \":\",\n    CREDENTAIL_SCHEMA_VALIDATOR_TYPE: \"JsonSchemaValidator2018\",\n    CREDENTAIL_STATUS_TYPE: \"CredentialStatusList2017\",\n    CREDENTAIL_BASE_CONTEXT: \"https://www.w3.org/2018/credentials/v1\",\n    CREDENTAIL_SECURITY_CONTEXT_V2: \"https://w3id.org/security/v2\",\n    CREDENTAIL_SECURITY_SUITE: \"https://w3id.org/security/suites/ed25519-2020/v1\",\n    CREDENTAIL_ECDSA_SECURITY_SUITE: \"https://w3id.org/security/suites/secp256k1recovery-2020/v2\",\n    PROOF_PURPOSE: \"assertion\",\n    VERIFICATION_METHOD_TYPE: \"Ed25519Signature2020\",\n    CRED_STATUS_TYPES: CredentialStatusEnums,\n    CRED_STATUS_REASON_TYPES: CredentialStatusReasonEnums\n};\nObject.freeze(exports.VC);\nexports.VP = {\n    PREFIX: 'vp:',\n    SCHEME: 'vp',\n    METHOD: 'hid',\n    NAMESPACE: 'testnet',\n};\nObject.freeze(exports.VP);\nexports.SCHEMA = {\n    SCHEME: 'sch',\n    METHOD: 'hid',\n    NAMESPACE: 'testnet',\n    SCHEMA_JSON: 'http://json-schema.org/draft-07/schema',\n    SCHEMA_TYPE: 'https://w3c-ccg.github.io/vc-json-schemas/v1/schema/1.0/schema.json',\n    SIGNATURE_TYPE: \"Ed25519Signature2020\",\n    PROOF_PURPOSE: \"assertion\",\n};\nObject.freeze(exports.SCHEMA);\nexports.KEY_HEADERS = {\n    MULTICODEC_ED25519_PUB_HEADER: new Uint8Array([0xed, 0x01]),\n    MULTICODEC_ED25519_PRIV_HEADER: new Uint8Array([0x80, 0x26]),\n};\nObject.freeze(exports.KEY_HEADERS);\nexports.GAS_PRICE = '0.1';\nexports.HID_DECIMAL = 6;\nexports.HID_DNOMINATION = 'uhid';\nexports.HID_MIN_GAS = '200000';\nexports.HID_MIN_FEE = '5000';\n","\"use strict\";\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialRPC = void 0;\nconst constants_1 = require(\"../constants\");\nconst generatedProto = __importStar(require(\"../../libs/generated/ssi/tx\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst client_1 = require(\"../hid/client\");\nclass CredentialRPC {\n    constructor({ offlineSigner, nodeRpcEndpoint, nodeRestEndpoint, }) {\n        if (offlineSigner) {\n            this.hidClient = new client_1.HIDClient(offlineSigner, nodeRpcEndpoint, nodeRestEndpoint);\n        }\n        else {\n            this.hidClient = null;\n        }\n        this.credentialRestEP =\n            (client_1.HIDClient.hidNodeRestEndpoint ? client_1.HIDClient.hidNodeRestEndpoint : nodeRestEndpoint) +\n                constants_1.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n            }\n            yield this.hidClient.init();\n        });\n    }\n    registerCredentialStatus(credentialStatus, proof) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!credentialStatus) {\n                throw new Error('CredentialStatus must be passed as a param while registerting credential status');\n            }\n            if (!proof) {\n                throw new Error('Proof must be passed as a param while registering crdential status');\n            }\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgRegisterCredentialStatus}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({\n                    credentialStatus,\n                    proof,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                }),\n            };\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), [txMessage], fee);\n            return txResult;\n        });\n    }\n    generateCredentialStatusTxnMessage(credentialStatus, proof) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!credentialStatus) {\n                throw new Error('CredentialStatus must be passed as a param while registerting credential status');\n            }\n            if (!proof) {\n                throw new Error('Proof must be passed as a param while registering crdential status');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgRegisterCredentialStatus}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({\n                    credentialStatus,\n                    proof,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                }),\n            };\n            return txMessage;\n        });\n    }\n    registerCredentialStatusBulk(txMessages) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner');\n            }\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), txMessages, fee);\n            return txResult;\n        });\n    }\n    resolveCredentialStatus(credentialId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            credentialId = credentialId + ':'; // TODO:  we need to sort this out ... need to remove later\n            const get_didUrl = `${this.credentialRestEP}/${credentialId}`;\n            let response;\n            try {\n                response = yield axios_1.default.get(get_didUrl);\n                if (!response.data) {\n                    throw new Error('Could not resolve credential status of credentialId ' + credentialId);\n                }\n                const credStatus = response.data.credStatus;\n                if (!credStatus || !credStatus.claim || !credStatus.proof) {\n                    throw new Error('No credential status found. Probably invalid credentialId');\n                }\n                return credStatus;\n            }\n            catch (err) {\n                const credStatus = {\n                    claim: null,\n                    issuer: '',\n                    issuanceDate: '',\n                    expirationDate: '',\n                    credentialHash: '',\n                    proof: null,\n                };\n                if (!credStatus || !credStatus.claim || !credStatus.proof) {\n                    throw new Error('No credential status found. Probably invalid credentialId');\n                }\n                return credStatus;\n            }\n        });\n    }\n}\nexports.CredentialRPC = CredentialRPC;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nconst jsonld_signatures_1 = require(\"jsonld-signatures\");\nconst vc_js_1 = __importDefault(require(\"vc-js\"));\nconst utils_1 = __importDefault(require(\"../utils\"));\nconst schema_1 = __importDefault(require(\"../schema/schema\"));\nconst did_1 = __importDefault(require(\"../did/did\"));\nconst ed25519_verification_key_2020_1 = require(\"@digitalbazaar/ed25519-verification-key-2020\");\nconst ed25519_signature_2020_1 = require(\"@digitalbazaar/ed25519-signature-2020\");\nconst ed25519 = require('@stablelib/ed25519');\nconst credRPC_1 = require(\"./credRPC\");\nconst constants_1 = require(\"../constants\");\nconst credential_1 = require(\"../../libs/generated/ssi/credential\");\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst v1_1 = __importDefault(require(\"../../libs/w3cache/v1\"));\nconst ethereumeip712signature2021suite_1 = require(\"ethereumeip712signature2021suite\");\nconst jsonld_signatures_2 = require(\"jsonld-signatures\");\nconst documentLoader = (0, jsonld_signatures_2.extendContextLoader)(v1_1.default);\nclass HypersignVerifiableCredential {\n    constructor(params = {}) {\n        this._checkIfAllRequiredPropsAreSent = (sentAttributes, requiredProps) => {\n            return !requiredProps.some((x) => sentAttributes.indexOf(x) === -1);\n        };\n        this._getCredentialSubject = (schemaProperty, attributesMap) => {\n            const cs = {};\n            const sentPropes = Object.keys(attributesMap);\n            if (schemaProperty.properties) {\n                schemaProperty['propertiesParsed'] = JSON.parse(schemaProperty.properties);\n            }\n            const SchemaProps = Object.keys(schemaProperty['propertiesParsed']);\n            let props = [];\n            // Check for \"additionalProperties\" in schemaProperty\n            if (!schemaProperty.additionalProperties) {\n                if (sentPropes.length > SchemaProps.length || !this._checkIfAllRequiredPropsAreSent(SchemaProps, sentPropes))\n                    throw new Error(`Only ${JSON.stringify(SchemaProps)} attributes are possible. additionalProperties is false in the schema`);\n                props = SchemaProps;\n            }\n            else {\n                props = sentPropes;\n            }\n            // Check all required propes\n            const requiredPros = Object.values(schemaProperty.required);\n            if (!this._checkIfAllRequiredPropsAreSent(sentPropes, requiredPros))\n                throw new Error(`${JSON.stringify(requiredPros)} are required properties`);\n            // Attach the values of props\n            props.forEach((p) => {\n                cs[p] = attributesMap[p];\n            });\n            return cs;\n        };\n        //\n        // TODO: https://www.w3.org/TR/vc-data-model/#data-schemas\n        // TODO: handle schemaUrl variable properly later.\n        this._getCredentialContext = (schemaId, schemaProperties) => {\n            const context = [];\n            let schemaUrl;\n            if (this.hsSchema && this.hsSchema.schemaRpc) {\n                schemaUrl = `${this.hsSchema.schemaRpc.schemaRestEp}/${schemaId}:`;\n            }\n            else {\n                throw new Error('Error: HypersigSchema object may not be initialized');\n            }\n            context.push(constants_1.VC.CREDENTAIL_BASE_CONTEXT);\n            //context.push(VC.CREDENTAIL_SECURITY_SUITE);\n            context.push({\n                hs: schemaUrl,\n            });\n            const props = Object.keys(schemaProperties);\n            props.forEach((x) => {\n                const obj = {};\n                obj[x] = `hs:${x}`;\n                context.push(obj);\n            });\n            return context;\n        };\n        const { namespace, offlineSigner, nodeRpcEndpoint, nodeRestEndpoint } = params;\n        this.namespace = namespace && namespace != '' ? namespace : '';\n        const nodeRPCEp = nodeRpcEndpoint ? nodeRpcEndpoint : 'MAIN';\n        const nodeRestEp = nodeRestEndpoint ? nodeRestEndpoint : '';\n        const offlineConstuctorParams = { offlineSigner, nodeRpcEndpoint: nodeRPCEp, nodeRestEndpoint: nodeRestEp };\n        this.credStatusRPC = new credRPC_1.CredentialRPC(offlineConstuctorParams);\n        this.hsDid = new did_1.default(offlineConstuctorParams);\n        this.hsSchema = new schema_1.default(offlineConstuctorParams);\n        this.context = [];\n        this.id = '';\n        this.type = [];\n        this.issuer = '';\n        this.issuanceDate = '';\n        this.expirationDate = '';\n        this.credentialSubject = {};\n        this.credentialSchema = {\n            id: '',\n            type: constants_1.VC.CREDENTAIL_SCHEMA_VALIDATOR_TYPE,\n        };\n        this.credentialStatus = {\n            id: '',\n            type: constants_1.VC.CREDENTAIL_STATUS_TYPE,\n        };\n        this.proof = {};\n    }\n    _sign(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { privateKeyMultibase: privateKeyMultibaseConverted } = utils_1.default.convertEd25519verificationkey2020toStableLibKeysInto({\n                privKey: params.privateKeyMultibase,\n            });\n            // TODO:  do proper checck of paramaters\n            const credentialStatus = JSON.parse(params.message);\n            const credentialBytes = (yield credential_1.CredentialStatus.encode(credentialStatus)).finish();\n            // const messageBytes = Buffer.from(params.message);\n            const signed = ed25519.sign(privateKeyMultibaseConverted, credentialBytes);\n            return Buffer.from(signed).toString('base64');\n        });\n    }\n    _dateNow(date) {\n        if (date) {\n            return new Date(date).toISOString().slice(0, -5) + 'Z';\n        }\n        else {\n            return new Date(new Date().getTime() - 100000).toISOString().slice(0, -5) + 'Z';\n        }\n    }\n    _sha256Hash(message) {\n        const sha256 = crypto_1.default.createHash('sha256');\n        return sha256.update(message).digest('hex');\n    }\n    _getId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const uuid = yield utils_1.default.getUUID();\n            let id;\n            if (this.namespace && this.namespace != '') {\n                id = `${constants_1.VC.SCHEME}:${constants_1.VC.METHOD}:${this.namespace}:${uuid}`;\n            }\n            else {\n                id = `${constants_1.VC.SCHEME}:${constants_1.VC.METHOD}:${uuid}`;\n            }\n            return id;\n        });\n    }\n    /**\n     * Initialise the offlinesigner to interact with Hypersign blockchain\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            yield this.credStatusRPC.init();\n        });\n    }\n    /**\n     * Generates a new credential document\n     * @params\n     *  - params.schemaId             : Hypersign schema id\n     *  - params.subjectDid           : DID of the subject, if not provided, will be taken from subjectDidDocSigned\n     *  - params.schemaContext        :\n     *  - params.type                 :\n     *  - params.issuerDid            :  DID of the issuer\n     *  - params.expirationDate       :  Date of the expiration for this credential\n     *  - params.fields               :  Schema fields values for this credential\n     * @returns {Promise<IVerifiableCredential>} Result a credential document\n     */\n    generate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let schemaDoc = {};\n            if (params.subjectDid && params.subjectDidDocSigned) {\n                throw new Error('HID-SSI-SDK:: Error: Both subjectDid and subjectDidDoc cannot be passed');\n            }\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const issuerDid = params.issuerDid;\n            const subjectDid = params.subjectDid;\n            let resolvedsubjectDidDoc;\n            const { didDocument: issuerDidDoc } = yield this.hsDid.resolve({ did: issuerDid });\n            //\n            if (params.subjectDid) {\n                resolvedsubjectDidDoc = yield this.hsDid.resolve({ did: params.subjectDid });\n            }\n            else if (params.subjectDidDocSigned) {\n                resolvedsubjectDidDoc = {};\n                resolvedsubjectDidDoc.didDocument = params.subjectDidDocSigned;\n            }\n            else {\n                throw new Error('HID-SSI-SDK:: Error: Could not resolve the subjectDid or subjectDidDoc');\n            }\n            const { didDocument: subjectDidDoc } = resolvedsubjectDidDoc;\n            if (!issuerDidDoc) {\n                throw new Error('HID-SSI-SDK:: Error: Could not fetch issuer did doc, issuer did = ' + issuerDid);\n            }\n            if (!subjectDidDoc) {\n                throw new Error('HID-SSI-SDK:: Error: Could not fetch subject did doc, subject did = ' + subjectDid);\n            }\n            if (params && params.schemaContext && params.type) {\n                try {\n                    const context = Array();\n                    context.push(constants_1.VC.CREDENTAIL_BASE_CONTEXT);\n                    params.schemaContext.forEach((x) => {\n                        context.push(x);\n                    });\n                    const issuerDid = params.issuerDid;\n                    const subjectDid = params.subjectDid;\n                    const expirationDate = params.expirationDate;\n                    const credentialSubject = params.fields;\n                    const vc = {};\n                    vc['@context'] = context;\n                    vc.id = yield this._getId();\n                    vc.type = [];\n                    vc.type.push('VerifiableCredential');\n                    params.type.forEach((x) => {\n                        vc.type.push(x);\n                    });\n                    vc.issuer = issuerDid;\n                    vc.issuanceDate = this._dateNow(new Date(new Date().getTime() - 100000).toISOString());\n                    vc.expirationDate = this._dateNow(expirationDate);\n                    vc.credentialSubject = credentialSubject;\n                    vc.credentialSubject['id'] = subjectDid && subjectDid != undefined ? subjectDid : subjectDidDoc.id;\n                    // TODO: confusion here is, what would be the status of this credential at the time of its creation?\n                    // If this properpty is present , then checkStatus() must be passed at the time of verification of the credential\n                    // Ref: https://github.com/digitalbazaar/vc-js/blob/7e14ef27bc688194635077d243d9025c0020448b/test/10-verify.spec.js#L188\n                    vc.credentialStatus = {\n                        id: this.credStatusRPC.credentialRestEP + '/' + vc.id,\n                        type: this.credentialStatus.type,\n                    };\n                    return vc;\n                }\n                catch (error) {\n                    throw new Error('HID-SSI-SDK:: Error: Could not create credential, error = ' + error);\n                }\n            }\n            else if (!params.schemaId) {\n                throw new Error('HID-SSI-SDK:: Error: schemaId is required when schemaContext and type not passed');\n            }\n            try {\n                schemaDoc = yield this.hsSchema.resolve({ schemaId: params.schemaId });\n            }\n            catch (e) {\n                throw new Error('HID-SSI-SDK:: Error: Could not resolve the schema from schemaId = ' + params.schemaId);\n            }\n            // TODO: do proper check for date and time\n            //if(params.expirationDate < new Date()) throw  new Error(\"Expiration date can not be lesser than current date\")\n            const vc = {};\n            const schemaInternal = schemaDoc.schema;\n            const schemaProperties = JSON.parse(schemaInternal.properties);\n            // context\n            vc['@context'] = this._getCredentialContext(params.schemaId, schemaProperties);\n            /// TODO:  need to implement this properly\n            vc.id = yield this._getId();\n            // Type\n            vc.type = [];\n            vc.type.push('VerifiableCredential');\n            vc.type.push(schemaDoc.name);\n            vc.expirationDate = this._dateNow(params.expirationDate);\n            vc.issuanceDate = this._dateNow(); // TODO: need to remove this.\n            vc.issuer = issuerDid;\n            vc.credentialSubject = {};\n            vc.credentialSubject = Object.assign({}, this._getCredentialSubject(schemaDoc.schema, params.fields));\n            vc.credentialSubject['id'] = subjectDid && subjectDid != undefined ? subjectDid : subjectDidDoc.id;\n            vc.credentialSchema = {\n                id: schemaDoc.id,\n                type: this.credentialSchema.type,\n            };\n            // TODO: confusion here is, what would be the status of this credential at the time of its creation?\n            // If this properpty is present , then checkStatus() must be passed at the time of verification of the credential\n            // Ref: https://github.com/digitalbazaar/vc-js/blob/7e14ef27bc688194635077d243d9025c0020448b/test/10-verify.spec.js#L188\n            vc.credentialStatus = {\n                id: this.credStatusRPC.credentialRestEP + '/' + vc.id,\n                type: this.credentialStatus.type,\n            };\n            return vc;\n        });\n    }\n    /**\n     * Generates signed credentials document and registers its status on Hypersign blockchain\n     * @params\n     *  - params.credential             : Hypersign credentail document\n     *  - params.privateKeyMultibase    : P\n     *  - params.issuerDid              : DID of the issuer\n     *  - params.verificationMethodId   : Verifcation Method of Issuer\n     * @returns {Promise<{\n     * signedCredential: IVerifiableCredential;\n     * credentialStatus: CredentialStatus;\n     * credentialStatusProof: CredentialProof;\n     * credentialStatusRegistrationResult?: DeliverTxResponse;\n     * }>}\n     */\n    issue(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to issue credential');\n            }\n            if (!params.credential) {\n                throw new Error('HID-SSI-SDK:: Error: params.credential is required to issue credential');\n            }\n            if (!params.privateKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: Error: params.privateKeyMultibase is required to issue credential');\n            }\n            if (!params.issuerDid) {\n                throw new Error('HID-SSI-SDK:: Error: params.issuerDid is required to issue credential');\n            }\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            if (params.registerCredential == undefined) {\n                params.registerCredential = true;\n            }\n            const { didDocument: signerDidDoc } = yield this.hsDid.resolve({ did: params.issuerDid });\n            if (signerDidDoc === null || signerDidDoc === undefined)\n                throw new Error('HID-SSI-SDK:: Error: Could not resolve issuerDid = ' + params.issuerDid);\n            // TODO: take verification method from params\n            const publicKeyId = params.verificationMethodId; // TODO: bad idea -  should not hardcode it.\n            const publicKeyVerMethod = signerDidDoc['verificationMethod'].find((x) => x.id == publicKeyId);\n            if (!publicKeyVerMethod) {\n                throw new Error('HID-SSI-SDK:: Error: Could not find verification method for id = ' + params.verificationMethodId);\n            }\n            const convertedKeyPair = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: publicKeyVerMethod.publicKeyMultibase,\n            });\n            publicKeyVerMethod['publicKeyMultibase'] = convertedKeyPair.publicKeyMultibase;\n            const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from(Object.assign({ privateKeyMultibase: params.privateKeyMultibase }, publicKeyVerMethod));\n            const suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n                verificationMethod: publicKeyId,\n                key: keyPair,\n            });\n            /// Before we issue the credential the credential status has to be added\n            /// for that we will call RegisterCredentialStatus RPC\n            //  Let us generate credentialHash first\n            const credentialHash = this._sha256Hash(JSON.stringify(params.credential));\n            const credentialStatus = {\n                claim: {\n                    id: params.credential.id,\n                    currentStatus: constants_1.VC.CRED_STATUS_TYPES.LIVE,\n                    statusReason: 'Credential is active',\n                },\n                issuer: params.credential.issuer,\n                issuanceDate: params.credential.issuanceDate,\n                expirationDate: params.credential.expirationDate,\n                credentialHash,\n            };\n            const proofValue = yield this._sign({\n                message: JSON.stringify(credentialStatus),\n                privateKeyMultibase: params.privateKeyMultibase,\n            });\n            // check params.issuer is a controller of params.credential.issuer\n            const { didDocument: issuerDID } = yield this.hsDid.resolve({ did: params.credential.issuer });\n            if (issuerDID === null || issuerDID === undefined)\n                throw new Error('Could not resolve issuerDid = ' + params.credential.issuer);\n            const credIssuerDidDoc = issuerDID;\n            const credIssuerController = credIssuerDidDoc.controller;\n            if (!credIssuerController.includes(params.issuerDid)) {\n                throw new Error(params.issuerDid + ' is not a controller of ' + params.credential.issuer);\n            }\n            // const issuerDidDoc: Did = issuerDID as Did;\n            // const issuerPublicKeyId = params.verificationMethodId;\n            // const issuerPublicKeyVerMethod: VerificationMethod = issuerDidDoc.verificationMethod.find(\n            //   (x) => x.id == issuerPublicKeyId\n            // ) as VerificationMethod;\n            const issuerPublicKeyVerMethod = publicKeyVerMethod;\n            const proof = {\n                type: constants_1.VC.VERIFICATION_METHOD_TYPE,\n                created: this._dateNow(),\n                updated: this._dateNow(),\n                verificationMethod: issuerPublicKeyVerMethod.id,\n                proofValue,\n                proofPurpose: constants_1.VC.PROOF_PURPOSE,\n            };\n            /// RegisterCRedeRPC\n            const signedVC = yield vc_js_1.default.issue({\n                credential: params.credential,\n                suite,\n                documentLoader,\n            });\n            let credentialStatusRegistrationResult;\n            if (params.registerCredential) {\n                credentialStatusRegistrationResult = yield this.credStatusRPC.registerCredentialStatus(credentialStatus, proof);\n                if (!credentialStatusRegistrationResult || credentialStatusRegistrationResult.code != 0) {\n                    throw new Error('HID-SSI-SDK:: Error while issuing the credential error = ' + credentialStatusRegistrationResult.rawLog);\n                }\n                return {\n                    signedCredential: signedVC,\n                    credentialStatus,\n                    credentialStatusProof: proof,\n                    credentialStatusRegistrationResult,\n                };\n            }\n            return { signedCredential: signedVC, credentialStatus, credentialStatusProof: proof };\n        });\n    }\n    // Ref: https://github.com/digitalbazaar/vc-js/blob/44ca660f62ad3569f338eaaaecb11a7b09949bd2/lib/vc.js#L251\n    /**\n     * Verfies signed/issued credential\n     * @params\n     *  - params.credential             : Signed Hypersign credentail document of type IVerifiableCredential\n     *  - params.issuerDid              : DID of the issuer\n     *  - params.verificationMethodId   : Verifcation Method of Issuer\n     * @returns {Promise<object>}\n     */\n    verify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.credential) {\n                throw new Error('HID-SSI-SDK:: params.credential is required to verify credential');\n            }\n            if (!params.credential.proof) {\n                throw new Error('HID-SSI-SDK:: params.credential.proof is required to verify credential');\n            }\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to verify credential');\n            }\n            if (!params.issuerDid) {\n                throw new Error('HID-SSI-SDK:: Error: params.issuerDid is required to verify credential');\n            }\n            const { didDocument: issuerDID } = yield this.hsDid.resolve({ did: params.issuerDid });\n            const issuerDidDoc = issuerDID;\n            const publicKeyId = params.verificationMethodId;\n            const publicKeyVerMethod = issuerDidDoc.verificationMethod.find((x) => x.id == publicKeyId);\n            // TODO: Get rid of this hack later.\n            // Convert 45 byte publick key into 48\n            const { publicKeyMultibase } = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: publicKeyVerMethod.publicKeyMultibase,\n            });\n            publicKeyVerMethod.publicKeyMultibase = publicKeyMultibase;\n            const assertionController = {\n                '@context': constants_1.DID.CONTROLLER_CONTEXT,\n                id: issuerDidDoc.id,\n                assertionMethod: issuerDidDoc.assertionMethod,\n            };\n            const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from(Object.assign({ privateKeyMultibase: '' }, publicKeyVerMethod));\n            const suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n                verificationMethod: publicKeyId,\n                key: keyPair,\n            });\n            /* eslint-disable */\n            const that = this;\n            /* eslint-enable */\n            const result = yield vc_js_1.default.verifyCredential({\n                credential: params.credential,\n                controller: assertionController,\n                suite,\n                documentLoader,\n                checkStatus: function (options) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        return yield that.checkCredentialStatus({ credentialId: options.credential.id });\n                    });\n                },\n            });\n            return result;\n        });\n    }\n    /**\n     * Resolves credential status from Hypersign Blokchain\n     * @params\n     *  - params.credentialId           : Verifiable credential id\n     * @returns {Promise<CredentialStatus>}\n     */\n    resolveCredentialStatus(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params || !params.credentialId)\n                throw new Error('HID-SSI-SDK:: Error: params.credentialId is required to resolve credential status');\n            const credentialStatus = yield this.credStatusRPC.resolveCredentialStatus(params.credentialId);\n            return credentialStatus;\n        });\n    }\n    /**\n     * Update credential status in blockchain Hypersign Blokchain\n     * @params\n     *  - params.credentialStatus           : Status of the credential of type CredentialStatus\n     *  - params.issuerDid                  : DID of the issuer\n     *  - params.verificationMethodId       : verificationMethodId\n     *  - params.privateKeyMultibase        : privateKey of the issuer\n     *  - params.status                     : Status LIVE/REVOKE/SUSPENDED\n     *  - params.statusReason               : Reason for the status change\n     * @returns {Promise<DeliverTxResponse>}\n     */\n    updateCredentialStatus(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to update credential status');\n            }\n            if (!params.credentialStatus) {\n                throw new Error('HID-SSI-SDK:: Error: params.credentialStatus is required to update credential status');\n            }\n            if (!params.privateKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: Error: params.privateKeyMultibase is required to update credential status');\n            }\n            if (!params.issuerDid) {\n                throw new Error('HID-SSI-SDK:: Error: params.issuerDid is required to update credential status');\n            }\n            if (!params.status) {\n                throw new Error('HID-SSI-SDK:: Error: params.status is required to update credential status');\n            }\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const { didDocument: signerDidDoc } = yield this.hsDid.resolve({ did: params.issuerDid });\n            if (!signerDidDoc)\n                throw new Error('Could not resolve issuerDid = ' + params.issuerDid);\n            // TODO: take verification method from params\n            const publicKeyId = params.verificationMethodId; // TODO: bad idea -  should not hardcode it.\n            const publicKeyVerMethod = signerDidDoc['verificationMethod'].find((x) => x.id == publicKeyId);\n            const convertedKeyPair = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: publicKeyVerMethod.publicKeyMultibase,\n            });\n            publicKeyVerMethod['publicKeyMultibase'] = convertedKeyPair.publicKeyMultibase;\n            const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from(Object.assign({ privateKeyMultibase: params.privateKeyMultibase }, publicKeyVerMethod));\n            const suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n                verificationMethod: publicKeyId,\n                key: keyPair,\n            });\n            /// Before we issue the credential the credential status has to be added\n            /// for that we will call RegisterCredentialStatus RPC\n            //  Let us generate credentialHash first\n            params.status = params.status.toUpperCase();\n            const claim = params.credentialStatus.claim;\n            const credentialStatus = {\n                claim: {\n                    id: claim.id,\n                    currentStatus: constants_1.VC.CRED_STATUS_TYPES[params.status],\n                    statusReason: params.statusReason ? params.statusReason : constants_1.VC.CRED_STATUS_REASON_TYPES[params.status],\n                },\n                issuer: params.credentialStatus.issuer,\n                issuanceDate: params.credentialStatus.issuanceDate,\n                expirationDate: params.credentialStatus.expirationDate,\n                credentialHash: params.credentialStatus.credentialHash,\n            };\n            const proofValue = yield this._sign({\n                message: JSON.stringify(credentialStatus),\n                privateKeyMultibase: params.privateKeyMultibase,\n            });\n            const { didDocument: issuerDID } = yield this.hsDid.resolve({ did: params.credentialStatus.issuer });\n            const issuerDidDoc = issuerDID;\n            const issuerDidDocController = issuerDidDoc.controller;\n            const verificationMethodController = params.verificationMethodId.split('#')[0];\n            if (!issuerDidDocController.includes(verificationMethodController)) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId does not belong to issuerDid');\n            }\n            const { didDocument: controllerDidDoc } = yield this.hsDid.resolve({ did: verificationMethodController });\n            if (!controllerDidDoc)\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId does not belong to issuerDid');\n            const didDocofController = controllerDidDoc;\n            const issuerPublicKeyId = params.verificationMethodId;\n            const issuerPublicKeyVerMethod = didDocofController.verificationMethod.find((x) => x.id == issuerPublicKeyId);\n            const proof = {\n                type: constants_1.VC.VERIFICATION_METHOD_TYPE,\n                created: params.credentialStatus.issuanceDate,\n                updated: this._dateNow(),\n                verificationMethod: issuerPublicKeyVerMethod.id,\n                proofValue,\n                proofPurpose: constants_1.VC.PROOF_PURPOSE,\n            };\n            /// RegisterCRedeRPC\n            // We use the same RPC (i.e. MsgRegisterCredentialStatus) for register and update of credential status on blockchain\n            const resp = yield this.credStatusRPC.registerCredentialStatus(credentialStatus, proof);\n            if (!resp || resp.code != 0) {\n                throw new Error('HID-SSI-SDK:: Error while revoking the credential error = ' + resp.rawLog);\n            }\n            return resp;\n        });\n    }\n    checkCredentialStatus(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params || !params.credentialId)\n                throw new Error('HID-SSI-SDK:: Error: params.credentialId is required to resolve credential status');\n            const { credentialId } = params;\n            const credentialStatus = yield this.credStatusRPC.resolveCredentialStatus(credentialId);\n            if (!credentialStatus) {\n                throw new Error('HID-SSI-SDK:: Error: while checking credential status of credentialID ' + credentialId);\n            }\n            const claim = credentialStatus.claim;\n            const { currentStatus, statusReason } = claim;\n            /// TODO:  probably we should also verify the credential HASH by recalculating the hash of the crdential and\n            // matching with credentialHash property.\n            // const { credentialHash } = credentialStatus;\n            if (currentStatus != constants_1.VC.CRED_STATUS_TYPES.LIVE) {\n                console.log('WARN: Credential status is  not LIVE, currentStatus ' + currentStatus);\n                console.log('WARN: Status reason is ' + statusReason);\n                return { verified: false };\n            }\n            return { verified: true };\n        });\n    }\n    registerCredentialStatus(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { credentialStatus, credentialStatusProof } = params;\n            if (!credentialStatus || !credentialStatusProof)\n                throw new Error('HID-SSI-SDK:: Error: credentialStatus and credentialStatusProof are required to register credential status');\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const resp = yield this.credStatusRPC.registerCredentialStatus(credentialStatus, credentialStatusProof);\n            if (!resp || resp.code != 0) {\n                throw new Error('HID-SSI-SDK:: Error while issuing the credential error = ' + resp.rawLog);\n            }\n            return resp;\n        });\n    }\n    generateRegisterCredentialStatusTxnMessage(credentialStatus, proof) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!credentialStatus || !proof)\n                throw new Error('HID-SSI-SDK:: Error: credentialStatus and proof are required to register credential status');\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const txnMessage = yield this.credStatusRPC.generateCredentialStatusTxnMessage(credentialStatus, proof);\n            return txnMessage;\n        });\n    }\n    registerCredentialStatusTxnBulk(txnMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!txnMessage)\n                throw new Error('HID-SSI-SDK:: Error: txnMessage is required to register credential status');\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const resp = yield this.credStatusRPC.registerCredentialStatusBulk(txnMessage);\n            if (!resp || resp.code != 0) {\n                throw new Error('HID-SSI-SDK:: Error while issuing the credential error = ' + resp.rawLog);\n            }\n            return resp;\n        });\n    }\n    /**\n     * Issue credentials document with EthereumEip712Signature2021\n   \n    */\n    issueByClientSpec(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to issue credential');\n            }\n            if (!params.issuerDid) {\n                throw new Error('HID-SSI-SDK:: Error: params.issuerDid is required to issue credential');\n            }\n            if (!params.credential) {\n                throw new Error('HID-SSI-SDK:: Error: params.credential is required to issue credential');\n            }\n            if (!this.credStatusRPC) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            if (!params.web3Obj) {\n                throw new Error('HID-SSI-SDK:: Error: prams.web3Obj should be passed');\n            }\n            if (params.type == undefined) {\n                params.type = 'Document';\n            }\n            if (params.registerCredential == undefined) {\n                params.registerCredential = true;\n            }\n            const { didDocument: signerDidDoc } = yield this.hsDid.resolve({ did: params.issuerDid });\n            if (signerDidDoc === null || signerDidDoc === undefined)\n                throw new Error('HID-SSI-SDK:: Error: Could not resolve issuerDid = ' + params.issuerDid);\n            const publicKeyId = params.verificationMethodId;\n            const publicKeyVerMethod = signerDidDoc['verificationMethod'].find((x) => x.id == publicKeyId);\n            if (!publicKeyVerMethod) {\n                throw new Error('HID-SSI-SDK:: Error: Could not find verification method for id = ' + params.verificationMethodId);\n            }\n            const EthereumEip712Signature2021obj = new ethereumeip712signature2021suite_1.EthereumEip712Signature2021({}, params.web3Obj);\n            const proof = yield EthereumEip712Signature2021obj.createProof({\n                document: params.credential,\n                purpose: new jsonld_signatures_1.purposes.AssertionProofPurpose(),\n                verificationMethod: params.verificationMethodId,\n                primaryType: params.type,\n                date: new Date().toISOString(),\n                domain: params.domain ? { name: params.domain } : undefined,\n                documentLoader,\n            });\n            params.credential.proof = proof;\n            const signedVC = params.credential;\n            const { didDocument: issuerDID } = yield this.hsDid.resolve({ did: params.credential.issuer });\n            if (issuerDID === null || issuerDID === undefined)\n                throw new Error('Could not resolve issuerDid = ' + params.credential.issuer);\n            const credIssuerDidDoc = issuerDID;\n            const credIssuerController = credIssuerDidDoc.controller;\n            if (!credIssuerController.includes(params.issuerDid)) {\n                throw new Error(params.issuerDid + ' is not a controller of ' + params.credential.issuer);\n            }\n            if (params.registerCredential) {\n                // register credential status\n                return new Error('HID-SSI-SDK:: Error: registerCredential is not implemented');\n            }\n            return { signedCredential: signedVC };\n        });\n    }\n    // verify credentila issued by client spec\n    verifyByClientSpec(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.credential) {\n                throw new Error('HID-SSI-SDK:: params.credential is required to verify credential');\n            }\n            if (!params.credential.proof) {\n                throw new Error('HID-SSI-SDK:: params.credential.proof is required to verify credential');\n            }\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to verify credential');\n            }\n            if (!params.issuerDid) {\n                throw new Error('HID-SSI-SDK:: Error: params.issuerDid is required to verify credential');\n            }\n            if (!params.web3Obj) {\n                throw new Error('HID-SSI-SDK:: Error: prams.web3Obj should be passed');\n            }\n            const { didDocument } = yield this.hsDid.resolve({ did: params.issuerDid });\n            if (didDocument === null || didDocument === undefined)\n                throw new Error('HID-SSI-SDK:: Error: Could not resolve issuerDid = ' + params.issuerDid);\n            const EthereumEip712Signature2021obj = new ethereumeip712signature2021suite_1.EthereumEip712Signature2021({}, params.web3Obj);\n            const { proof } = params.credential;\n            const verificationResult = yield EthereumEip712Signature2021obj.verifyProof({\n                proof: proof,\n                document: params.credential,\n                types: proof.eip712.types,\n                domain: proof.eip712.domain,\n                purpose: new jsonld_signatures_1.purposes.AssertionProofPurpose(),\n                documentLoader,\n            });\n            return verificationResult;\n        });\n    }\n}\nexports.default = HypersignVerifiableCredential;\n","\"use strict\";\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IClientSpec = exports.IKeyType = exports.IVerificationRelationships = void 0;\nvar IVerificationRelationships;\n(function (IVerificationRelationships) {\n    IVerificationRelationships[\"authentication\"] = \"authentication\";\n    IVerificationRelationships[\"assertionMethod\"] = \"assertionMethod\";\n    IVerificationRelationships[\"keyAgreement\"] = \"keyAgreement\";\n    IVerificationRelationships[\"capabilityInvocation\"] = \"capabilityInvocation\";\n    IVerificationRelationships[\"capabilityDelegation\"] = \"capabilityDelegation\";\n})(IVerificationRelationships = exports.IVerificationRelationships || (exports.IVerificationRelationships = {}));\nvar IKeyType;\n(function (IKeyType) {\n    IKeyType[\"Ed25519VerificationKey2020\"] = \"Ed25519VerificationKey2020\";\n    IKeyType[\"EcdsaSecp256k1VerificationKey2019\"] = \"EcdsaSecp256k1VerificationKey2019\";\n    IKeyType[\"EcdsaSecp256k1RecoveryMethod2020\"] = \"EcdsaSecp256k1RecoveryMethod2020\";\n    IKeyType[\"X25519KeyAgreementKey2020\"] = \"X25519KeyAgreementKey2020\";\n    IKeyType[\"X25519KeyAgreementKeyEIP5630\"] = \"X25519KeyAgreementKeyEIP5630\";\n})(IKeyType = exports.IKeyType || (exports.IKeyType = {}));\nvar IClientSpec;\n(function (IClientSpec) {\n    IClientSpec[\"eth-personalSign\"] = \"eth-personalSign\";\n    IClientSpec[\"cosmos-ADR036\"] = \"cosmos-ADR036\";\n})(IClientSpec = exports.IClientSpec || (exports.IClientSpec = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nconst constant = __importStar(require(\"../constants\"));\nconst jsonld_signatures_1 = __importDefault(require(\"jsonld-signatures\"));\nconst { AuthenticationProofPurpose } = jsonld_signatures_1.default.purposes;\nconst didRPC_1 = require(\"./didRPC\");\nconst utils_1 = __importDefault(require(\"../utils\"));\nconst ed25519 = require('@stablelib/ed25519');\nconst did_1 = require(\"../../libs/generated/ssi/did\");\nconst ed25519_verification_key_2020_1 = require(\"@digitalbazaar/ed25519-verification-key-2020\");\nconst ed25519_signature_2020_1 = require(\"@digitalbazaar/ed25519-signature-2020\");\nconst web3_1 = __importDefault(require(\"web3\"));\nconst IDID_1 = require(\"./IDID\");\nconst v1_1 = __importDefault(require(\"../../libs/w3cache/v1\"));\nclass DIDDocument {\n    constructor(publicKey, blockchainAccountId, id, keyType, verificationRelationships) {\n        let vm;\n        switch (keyType) {\n            case IDID_1.IKeyType.Ed25519VerificationKey2020: {\n                this.context = [constant['DID_' + keyType].DID_BASE_CONTEXT];\n                this.id = id;\n                this.controller = [this.id];\n                this.alsoKnownAs = [this.id];\n                vm = {\n                    id: this.id + '#key-1',\n                    type: constant['DID_' + keyType].VERIFICATION_METHOD_TYPE,\n                    controller: this.id,\n                    publicKeyMultibase: publicKey,\n                    blockchainAccountId: '',\n                };\n                const verificationMethod = vm;\n                this.verificationMethod = [verificationMethod];\n                this.authentication = [];\n                this.assertionMethod = [];\n                this.keyAgreement = [];\n                this.capabilityInvocation = [];\n                this.capabilityDelegation = [];\n                verificationRelationships === null || verificationRelationships === void 0 ? void 0 : verificationRelationships.forEach((value) => {\n                    this[value] = [verificationMethod.id];\n                });\n                // TODO: we should take services object in consntructor\n                this.service = [];\n                break;\n            }\n            case IDID_1.IKeyType.EcdsaSecp256k1RecoveryMethod2020: {\n                this.context = [constant['DID_' + keyType].DID_BASE_CONTEXT];\n                this.id = id;\n                this.controller = [this.id];\n                this.alsoKnownAs = [this.id];\n                vm = {\n                    id: this.id + '#key-1',\n                    type: constant['DID_' + keyType].VERIFICATION_METHOD_TYPE,\n                    controller: this.id,\n                    blockchainAccountId: blockchainAccountId,\n                };\n                const verificationMethod = vm;\n                this.verificationMethod = [verificationMethod];\n                this.authentication = [];\n                this.assertionMethod = [];\n                this.keyAgreement = [];\n                this.capabilityInvocation = [];\n                this.capabilityDelegation = [];\n                verificationRelationships === null || verificationRelationships === void 0 ? void 0 : verificationRelationships.forEach((value) => {\n                    this[value] = [verificationMethod.id];\n                });\n                // TODO: we should take services object in consntructor\n                this.service = [];\n                break;\n            }\n            case IDID_1.IKeyType.EcdsaSecp256k1VerificationKey2019: {\n                this.context = [constant['DID_' + keyType].DID_BASE_CONTEXT];\n                this.id = id;\n                this.controller = [this.id];\n                this.alsoKnownAs = [];\n                vm = {\n                    id: this.id + '#key-1',\n                    type: constant['DID_' + keyType].VERIFICATION_METHOD_TYPE,\n                    controller: this.id,\n                    publicKeyMultibase: publicKey,\n                    blockchainAccountId: blockchainAccountId,\n                };\n                const verificationMethod = vm;\n                this.verificationMethod = [verificationMethod];\n                this.authentication = [];\n                this.assertionMethod = [];\n                this.keyAgreement = [];\n                this.capabilityInvocation = [];\n                this.capabilityDelegation = [];\n                verificationRelationships === null || verificationRelationships === void 0 ? void 0 : verificationRelationships.forEach((value) => {\n                    this[value] = [verificationMethod.id];\n                });\n                // TODO: we should take services object in consntructor\n                this.service = [];\n                break;\n            }\n            default:\n                throw new Error('Invalid');\n        }\n    }\n}\n/** Class representing HypersignDID */\nclass HypersignDID {\n    /**\n     * Creates instance of HypersignDID class\n     * @constructor\n     * @params\n     *  - params.namespace        : namespace of did id, Default 'did:hid'\n     *  - params.offlineSigner    : signer of type OfflineSigner\n     *  - params.nodeRpcEndpoint  : RPC endpoint of the Hypersign blockchain, Default 'TEST'\n     *  - params.nodeRestEndpoint : REST endpoint of the Hypersign blockchain\n     */\n    constructor(params = {}) {\n        this._getId = (methodSpecificId) => {\n            if (methodSpecificId && methodSpecificId.length < 32) {\n                throw new Error('HID-SSI-SDK:: Error: methodSpecificId should be of minimum size 32');\n            }\n            let did = '';\n            did =\n                this.namespace && this.namespace != ''\n                    ? `${constant.DID.SCHEME}:${constant.DID.METHOD}:${this.namespace}:${methodSpecificId}`\n                    : `${constant.DID.SCHEME}:${constant.DID.METHOD}:${methodSpecificId}`;\n            return did;\n        };\n        this._isValidMultibaseBase58String = (str) => {\n            const multibaseBase58Regex = /^z([1-9A-HJ-NP-Za-km-z]+)$/;\n            return multibaseBase58Regex.test(str);\n        };\n        const { offlineSigner, namespace, nodeRpcEndpoint, nodeRestEndpoint } = params;\n        const nodeRPCEp = nodeRpcEndpoint ? nodeRpcEndpoint : 'MAIN';\n        const nodeRestEp = nodeRestEndpoint ? nodeRestEndpoint : '';\n        const rpcConstructorParams = {\n            offlineSigner,\n            nodeRpcEndpoint: nodeRPCEp,\n            nodeRestEndpoint: nodeRestEp,\n        };\n        this.didrpc = new didRPC_1.DIDRpc(rpcConstructorParams);\n        this.namespace = namespace ? namespace : '';\n    }\n    _sign(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { privateKeyMultibase: privateKeyMultibaseConverted } = utils_1.default.convertEd25519verificationkey2020toStableLibKeysInto({\n                privKey: params.privateKeyMultibase,\n            });\n            const { didDocString } = params;\n            // TODO:  do proper checck of paramaters\n            const did = JSON.parse(didDocString);\n            const didBytes = (yield did_1.Did.encode(did)).finish();\n            const signed = ed25519.sign(privateKeyMultibaseConverted, didBytes);\n            return Buffer.from(signed).toString('base64');\n        });\n    }\n    /**\n     * SignDid method is used to sign the did document\n     * @param params\n     * - params.didDocString: stringified did document\n     * - params.privateKeyMultibase: private key of the did document\n     * @returns string\n     **/\n    signDid(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const didDoc = utils_1.default.ldToJsonConvertor(params.didDocument);\n            const didDocString = JSON.stringify(didDoc);\n            return yield this._sign({\n                didDocString,\n                privateKeyMultibase: params.privateKeyMultibase,\n            });\n        });\n    }\n    _filterVerificationRelationships(verificationRelationships) {\n        let vR = [\n            IDID_1.IVerificationRelationships.assertionMethod,\n            IDID_1.IVerificationRelationships.authentication,\n            IDID_1.IVerificationRelationships.capabilityDelegation,\n            IDID_1.IVerificationRelationships.capabilityInvocation,\n        ];\n        if (verificationRelationships && verificationRelationships.length > 0) {\n            const set1 = new Set(vR);\n            const set2 = new Set(verificationRelationships);\n            vR = Array.from(set1).filter((value) => set2.has(value));\n        }\n        return vR;\n    }\n    /**\n     * Creates a new DID Document from wallet address\n     * @params\n     *  - params.blockChainAccountId  :\n     *  - params.methodSpecificId   : methodSpecificId (min 32 bit alhanumeric) else it will generate new random methodSpecificId or may be walletaddress\n     * @returns {Promise<object>} DidDocument object\n     */\n    _getBlockChainAccountID(chainId, address) {\n        try {\n            const web3 = new web3_1.default();\n            const inDecimelChainId = web3.utils.hexToNumber(chainId);\n            const blockChainAccountId = constant.CAIP_10_PREFIX.eip155 + ':' + inDecimelChainId + ':' + address;\n            return blockChainAccountId;\n        }\n        catch (error) {\n            throw new Error('HID-SSI-SDK:: Error: unsupported chain Id');\n        }\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error:  HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            yield this.didrpc.init();\n        });\n    }\n    /**\n     * Generate a new key pair of type Ed25519VerificationKey2020\n     * @params params.seed - Optional, Seed to generate the key pair, if not passed, random seed will be taken\n     * @params params.controller - Optional, controller field\n     * @returns {Promise<object>} The key pair of type Ed25519\n     */\n    generateKeys(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let edKeyPair;\n            if (params && params.seed && params.controller) {\n                const seedBytes = new Uint8Array(Buffer.from(params.seed));\n                edKeyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.generate({ seed: seedBytes, id: params.controller });\n            }\n            else if (params && params.controller) {\n                edKeyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.generate({ id: params.controller });\n            }\n            else if (params && params.seed) {\n                const seedBytes = new Uint8Array(Buffer.from(params.seed));\n                edKeyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.generate({ seed: seedBytes });\n            }\n            else {\n                edKeyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.generate();\n            }\n            const exportedKp = yield edKeyPair.export({ publicKey: true, privateKey: true });\n            return Object.assign({}, exportedKp);\n        });\n    }\n    /**\n     * Generates a new DID Document\n     * @params\n     *  - params.publicKeyMultibase : public key\n     *  - params.methodSpecificId   : Optional methodSpecificId (min 32 bit alhanumeric) else it will generate new random methodSpecificId\n     *  - params.verificationRelationships: Optional, verification relationships where you want to add your verificaiton method ids\n     * @returns {Promise<object>} DidDocument object\n     */\n    generate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let verificationRelationships = [];\n            if (params.verificationRelationships && params.verificationRelationships.length > 0) {\n                if (params.verificationRelationships.includes(IDID_1.IVerificationRelationships.keyAgreement)) {\n                    throw new Error('HID-SSI-SDK:: Error: keyAgreement is not allowed in verificationRelationships');\n                }\n                verificationRelationships = this._filterVerificationRelationships(params.verificationRelationships);\n            }\n            else {\n                verificationRelationships = this._filterVerificationRelationships([]);\n            }\n            if (!params.publicKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: Error: params.publicKeyMultibase is required to generate new did didoc');\n            }\n            const { publicKeyMultibase: publicKeyMultibase1 } = utils_1.default.convertEd25519verificationkey2020toStableLibKeysInto({\n                publicKey: params.publicKeyMultibase,\n            });\n            const methodSpecificId = publicKeyMultibase1;\n            let didId;\n            if (params.methodSpecificId) {\n                didId = this._getId(params.methodSpecificId);\n            }\n            else {\n                didId = this._getId(methodSpecificId);\n            }\n            const newDid = new DIDDocument(publicKeyMultibase1, '', didId, IDID_1.IKeyType.Ed25519VerificationKey2020, verificationRelationships);\n            return utils_1.default.jsonToLdConvertor(Object.assign({}, newDid));\n        });\n    }\n    /**\n     * Register a new DID and Document in Hypersign blockchain - an onchain activity\n     * @params\n     *  - params.didDocument          : LD did document\n     *  - params.privateKeyMultibase  : Private Key to sign the doc\n     *  - params.verificationMethodId : VerificationMethodId of the document\n     * @returns {Promise<object>} Result of the registration\n     */\n    register(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO:  this method MUST also accept signature/proof\n            if (!params.didDocument || Object.keys(params.didDocument).length === 0) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocString is required to register a did');\n            }\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const { didDocument } = params;\n            const didDocStringJson = utils_1.default.ldToJsonConvertor(didDocument);\n            const didDoc = didDocStringJson;\n            const signInfos = [];\n            if (!params.signData) {\n                if (!params.privateKeyMultibase) {\n                    throw new Error('HID-SSI-SDK:: Error: params.privateKeyMultibase is required to register a did');\n                }\n                if (!params.verificationMethodId) {\n                    throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to register a did');\n                }\n                const { privateKeyMultibase, verificationMethodId } = params;\n                const signature = yield this._sign({\n                    didDocString: JSON.stringify(didDocStringJson),\n                    privateKeyMultibase,\n                });\n                signInfos.push({\n                    signature,\n                    verification_method_id: verificationMethodId,\n                    clientSpec: undefined,\n                });\n            }\n            else {\n                if (params.signData.length < 1) {\n                    throw new Error('HID-SSI-SDK:: Error: params.signInfos must be a non empty array');\n                }\n                for (const i in params.signData) {\n                    if (!params.signData[i].verificationMethodId) {\n                        throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].verificationMethodId is required to register a did`);\n                    }\n                    if (!params.signData[i].privateKeyMultibase) {\n                        throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].privateKeyMultibase is required to register a did`);\n                    }\n                    if (!params.signData[i].type) {\n                        throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].type is required to register a did`);\n                    }\n                    const { type, privateKeyMultibase, verificationMethodId } = params.signData[i];\n                    if (type !== IDID_1.IKeyType.X25519KeyAgreementKey2020 && type !== IDID_1.IKeyType.X25519KeyAgreementKeyEIP5630) {\n                        const signature = yield this._sign({\n                            didDocString: JSON.stringify(didDocStringJson),\n                            privateKeyMultibase,\n                        });\n                        signInfos.push({\n                            signature,\n                            verification_method_id: verificationMethodId,\n                            clientSpec: undefined,\n                        });\n                    }\n                }\n            }\n            return yield this.didrpc.registerDID(didDoc, signInfos);\n        });\n    }\n    /**\n     * Resolves a DID into DIDDocument from Hypersign blockchain - an onchain activity\n     * @params\n     *  - params.did                        : DID\n     *  - params.ed25519verificationkey2020 : *Optional* True/False\n     * @returns  {Promise<IDIDResolve>} didDocument and didDocumentMetadata\n     */\n    resolve(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.did) {\n                throw new Error('HID-SSI-SDK:: Error: params.did is required to resolve a did');\n            }\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const result = yield this.didrpc.resolveDID(params.did);\n            if (params.ed25519verificationkey2020) {\n                const didDoc = result.didDocument;\n                const verificationMethods = didDoc.verificationMethod;\n                verificationMethods.forEach((verificationMethod) => {\n                    if (verificationMethod.type === constant.DID.VERIFICATION_METHOD_TYPE) {\n                        const ed25519PublicKey = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                            publicKey: verificationMethod.publicKeyMultibase,\n                        });\n                        verificationMethod.publicKeyMultibase = ed25519PublicKey.publicKeyMultibase;\n                    }\n                });\n                didDoc.verificationMethod = verificationMethods;\n            }\n            return {\n                didDocument: utils_1.default.jsonToLdConvertor(result.didDocument),\n                didDocumentMetadata: result.didDocumentMetadata,\n            };\n        });\n    }\n    /**\n     * Update a DIDDocument in Hypersign blockchain - an onchain activity\n     * @params\n     *  - params.didDocument          : LD did document\n     *  - params.privateKeyMultibase  : Private Key to sign the doc\n     *  - params.verificationMethodId : VerificationMethodId of the document\n     *  - params.versionId            : Version of the document\n     * @returns {Promise<object>} Result of the update operation\n     */\n    update(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.didDocument) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocument is required to update a did');\n            }\n            if (!params.privateKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: Error: params.privateKeyMultibase is required to update a did');\n            }\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to update a did');\n            }\n            if (!params.versionId) {\n                throw new Error('HID-SSI-SDK:: Error: params.versionId is required to update a did');\n            }\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const { didDocument, privateKeyMultibase, verificationMethodId, versionId } = params;\n            const didDocStringJson = utils_1.default.ldToJsonConvertor(didDocument);\n            const signature = yield this._sign({ didDocString: JSON.stringify(didDocStringJson), privateKeyMultibase });\n            const didDoc = didDocStringJson;\n            const signInfos = [\n                {\n                    signature,\n                    verification_method_id: verificationMethodId,\n                    clientSpec: undefined,\n                },\n            ];\n            return yield this.didrpc.updateDID(didDoc, signInfos, versionId);\n        });\n    }\n    /**\n     * Deactivate a DIDDocument in Hypersign blockchain - an onchain activity\n     * @params\n     *  - params.didDocument          : LD did document\n     *  - params.privateKeyMultibase  : Private Key to sign the doc\n     *  - params.verificationMethodId : VerificationMethodId of the document\n     *  - params.versionId            : Version of the document\n     * @returns {Promise<object>} Result of the deactivatee operation\n     */\n    deactivate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.didDocument) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocument is required to deactivate a did');\n            }\n            if (!params.privateKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: Error: params.privateKeyMultibase is required to deactivate a did');\n            }\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to deactivate a did');\n            }\n            if (!params.versionId) {\n                throw new Error('HID-SSI-SDK:: Error: params.versionId is required to deactivate a did');\n            }\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const { didDocument, privateKeyMultibase, verificationMethodId, versionId } = params;\n            const didDocStringJson = utils_1.default.ldToJsonConvertor(didDocument);\n            const signature = yield this._sign({ didDocString: JSON.stringify(didDocStringJson), privateKeyMultibase });\n            const didDoc = didDocStringJson;\n            const signInfos = [\n                {\n                    signature,\n                    verification_method_id: verificationMethodId,\n                    clientSpec: undefined,\n                },\n            ];\n            return yield this.didrpc.deactivateDID(didDoc.id, signInfos, versionId);\n        });\n    }\n    /**\n     * Signs a DIDDocument\n     * @params\n     *  - params.didDocument               :\n     *  - params.privateKeyMultibase       :   private key in multibase format (base58 digitalbazar format)\n     *  - params.challenge                 :   challenge is a random string generated by the client\n     *  - params.did                       :   did of the user\n     *  - params.domain                    :   domain is the domain of the DID Document that is being authenticated\n     *  - params.verificationMethodId      :   verificationMethodId of the DID\n     * @returns {Promise<object>} Signed DID Document\n     */\n    sign(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { privateKeyMultibase, challenge, domain, did, didDocument, verificationMethodId } = params;\n            let resolveddoc;\n            if (!privateKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: Error: params.privateKey is required to sign a did');\n            }\n            if (!challenge) {\n                throw new Error('HID-SSI-SDK:: Error: params.challenge is required to sign a did');\n            }\n            if (!domain) {\n                throw new Error('HID-SSI-SDK:: Error: params.domain is required to sign a did');\n            }\n            try {\n                // if did is prvovided then resolve the did doc from the blockchain or else use the did doc provided in the params object to sign the did doc with the proof\n                if (did && this.didrpc) {\n                    resolveddoc = yield this.didrpc.resolveDID(did);\n                }\n                else if (didDocument) {\n                    resolveddoc = {};\n                    resolveddoc.didDocument = didDocument;\n                }\n                else {\n                    throw new Error('HID-SSI-SDK:: Error: params.did or params.didDocument is required to sign a did');\n                }\n            }\n            catch (error) {\n                throw new Error(`HID-SSI-SDK:: Error: could not resolve did ${did}`);\n            }\n            const publicKeyId = verificationMethodId;\n            const pubkey = resolveddoc.didDocument.verificationMethod.find((item) => item.id === publicKeyId);\n            if (!pubkey) {\n                throw new Error('HID-SSI-SDK:: Error: Incorrect verification method id');\n            }\n            const { publicKeyMultibase: publicKeyMultibase1 } = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: pubkey.publicKeyMultibase,\n            });\n            const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from({\n                id: publicKeyId,\n                privateKeyMultibase,\n                publicKeyMultibase: publicKeyMultibase1,\n            });\n            const suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n                verificationMethod: publicKeyId,\n                key: keyPair,\n            });\n            const didDocumentLd = utils_1.default.jsonToLdConvertor(resolveddoc.didDocument);\n            didDocumentLd['@context'].push(constant.VC.CREDENTAIL_SECURITY_SUITE);\n            // didDocumentLd['@context'].push(constant.VC.CREDENTAIL_ECDSA_SECURITY_SUITE)\n            const signedDidDocument = (yield jsonld_signatures_1.default.sign(didDocumentLd, {\n                suite,\n                purpose: new AuthenticationProofPurpose({\n                    challenge,\n                    domain,\n                }),\n                documentLoader: v1_1.default,\n                compactProof: constant.compactProof,\n            }));\n            return signedDidDocument;\n        });\n    }\n    /**\n     * Verifies a signed DIDDocument\n     * @params\n     *  - params.didDocument :   Signed DID Document\n     *  - params.privateKey  :   private key in multibase format (base58 digitalbazar format)\n     *  - params.challenge   :   challenge is a random string generated by the client\n     *  - params.did         :   did of the user\n     *  - params.domain      :   domain is the domain of the DID Document that is being authenticated\n     * @returns Promise<{ verificationResult }> Verification Result\n     */\n    verify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { didDocument, verificationMethodId, challenge, domain } = params;\n            if (!didDocument) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocument is required to verify a did');\n            }\n            if (!didDocument['proof']) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocument.proof is not present in the signed did document');\n            }\n            if (!verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to verify a did');\n            }\n            if (!challenge) {\n                throw new Error('HID-SSI-SDK:: Error: params.challenge is required to verify a did');\n            }\n            const didDoc = didDocument;\n            const publicKeyId = verificationMethodId;\n            const pubkey = didDoc.verificationMethod.find((item) => item.id === publicKeyId);\n            if (!pubkey) {\n                throw new Error('HID-SSI-SDK:: Error: could not find verification method for verificationMethodId: ' +\n                    verificationMethodId +\n                    ' in did document');\n            }\n            const { publicKeyMultibase: publicKeyMultibase1 } = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: pubkey.publicKeyMultibase,\n            });\n            const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from({\n                id: publicKeyId,\n                publicKeyMultibase: publicKeyMultibase1,\n            });\n            const suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n                key: keyPair,\n            });\n            suite.date = new Date(new Date().getTime() - 100000).toISOString();\n            const controller = {\n                '@context': constant.DID.CONTROLLER_CONTEXT,\n                id: publicKeyId,\n                authentication: didDoc.authentication,\n            };\n            const purpose = new AuthenticationProofPurpose({\n                controller,\n                challenge,\n                domain,\n            });\n            const result = yield jsonld_signatures_1.default.verify(didDoc, {\n                suite,\n                purpose: purpose,\n                documentLoader: v1_1.default,\n                compactProof: constant.compactProof,\n            });\n            return result;\n        });\n    }\n    // using in API\n    createByClientSpec(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this['window'] === 'undefined') {\n                console.log('HID-SSI-SDK:: Warning:  Running in non browser mode');\n            }\n            if (!params.methodSpecificId) {\n                throw new Error('HID-SSI-SDK:: Error: params.methodSpecificId is required to create didoc');\n            }\n            if (!params.chainId) {\n                throw new Error('HID-SSI-SDK:: Error: params.chainId is required to create didoc');\n            }\n            if (!params.address) {\n                throw new Error('HID-SSI-SDK:: Error: params.address is required to create didoc');\n            }\n            if (!params.clientSpec) {\n                throw new Error('HID-SSI-SDK:: Error:  params.clientSpec is required to create didoc');\n            }\n            if (!(params.clientSpec in IDID_1.IClientSpec)) {\n                throw new Error('HID-SSI-SDK:: Error:  params.clientSpec is invalid');\n            }\n            let didDoc;\n            let verificationRelationships = [];\n            if (params.verificationRelationships && params.verificationRelationships.length > 0) {\n                if (params.verificationRelationships.includes(IDID_1.IVerificationRelationships.keyAgreement)) {\n                    throw new Error('HID-SSI-SDK:: Error: keyAgreement is not allowed in verificationRelationships');\n                }\n                verificationRelationships = this._filterVerificationRelationships(params.verificationRelationships);\n            }\n            else {\n                verificationRelationships = this._filterVerificationRelationships([]);\n            }\n            switch (params.clientSpec) {\n                case IDID_1.IClientSpec['eth-personalSign']: {\n                    const blockChainAccountId = this._getBlockChainAccountID(params.chainId, params.address);\n                    const didId = this._getId(params.methodSpecificId);\n                    const newDid = new DIDDocument('', blockChainAccountId, didId, IDID_1.IKeyType.EcdsaSecp256k1RecoveryMethod2020, verificationRelationships);\n                    didDoc = utils_1.default.jsonToLdConvertor(Object.assign({}, newDid));\n                    delete didDoc.service;\n                    break;\n                }\n                case IDID_1.IClientSpec['cosmos-ADR036']: {\n                    if (!params.publicKey) {\n                        throw new Error('HID-SSI-SDK:: Error: params.publicKey is required to create didoc for ' +\n                            IDID_1.IKeyType.EcdsaSecp256k1VerificationKey2019);\n                    }\n                    if (!this._isValidMultibaseBase58String(params.publicKey)) {\n                        throw new Error('HID-SSI-SDK:: Error: params.publicKey mustbe multibase encoded base58 string for ' +\n                            IDID_1.IKeyType.EcdsaSecp256k1VerificationKey2019);\n                    }\n                    const multibasePublicKey = params.publicKey;\n                    const didId = this._getId(params.methodSpecificId);\n                    const blockChainAccountId = 'cosmos:' + params.chainId + ':' + params.address;\n                    const newDid = new DIDDocument(multibasePublicKey, blockChainAccountId, didId, IDID_1.IKeyType.EcdsaSecp256k1VerificationKey2019);\n                    didDoc = utils_1.default.jsonToLdConvertor(Object.assign({}, newDid));\n                    break;\n                }\n                default: {\n                    throw new Error('HID-SSI-SDK:: Error: params.clientSpec is invalid use object.generate() method');\n                }\n            }\n            return didDoc;\n        });\n    }\n    // using in API\n    registerByClientSpec(params) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.didDocument || Object.keys(params.didDocument).length === 0) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocString is required to register a did');\n            }\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error:  HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            if (!params.signInfos) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos is required to register a did');\n            }\n            if (params.signInfos.length < 1) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos must be a non empty array');\n            }\n            if (!params.signInfos) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos is required to register a did');\n            }\n            if (params.signInfos.length < 1) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos must be a non empty array');\n            }\n            for (const i in params.signInfos) {\n                if (!params.signInfos[i].verification_method_id) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to register a did`);\n                }\n                if (!params.signInfos[i].clientSpec) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].clientSpec is required to register a did`);\n                }\n                if (((_a = params.signInfos[i].clientSpec) === null || _a === void 0 ? void 0 : _a.type) === IDID_1.IClientSpec['cosmos-ADR036']) {\n                    if (((_b = params.signInfos[i].clientSpec) === null || _b === void 0 ? void 0 : _b.adr036SignerAddress) === '' ||\n                        ((_c = params.signInfos[i].clientSpec) === null || _c === void 0 ? void 0 : _c.adr036SignerAddress) === undefined) {\n                        throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].adr036SignerAddress is required to register a did, when clientSpec type is${(_d = params.signInfos[i].clientSpec) === null || _d === void 0 ? void 0 : _d.type} `);\n                    }\n                }\n                if (!params.signInfos[i].signature) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to register a did`);\n                }\n            }\n            const didDocStringJson = utils_1.default.ldToJsonConvertor(params.didDocument);\n            const didDoc = didDocStringJson;\n            return yield this.didrpc.registerDID(didDoc, params.signInfos);\n        });\n    }\n    // using in API\n    updateByClientSpec(params) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            if (!params.didDocument) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocument is required to update a did');\n            }\n            if (!params.signInfos) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos is required to register a did');\n            }\n            if (params.signInfos.length < 1) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos must be a non empty array');\n            }\n            for (const i in params.signInfos) {\n                if (!params.signInfos[i].verification_method_id) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to register a did`);\n                }\n                if (!params.signInfos[i].clientSpec) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].clientSpec is required to register a did`);\n                }\n                if (((_a = params.signInfos[i].clientSpec) === null || _a === void 0 ? void 0 : _a.type) === IDID_1.IClientSpec['cosmos-ADR036']) {\n                    if (((_b = params.signInfos[i].clientSpec) === null || _b === void 0 ? void 0 : _b.adr036SignerAddress) === '' ||\n                        ((_c = params.signInfos[i].clientSpec) === null || _c === void 0 ? void 0 : _c.adr036SignerAddress) === undefined) {\n                        throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].adr036SignerAddress is required to register a did, when clientSpec type is${(_d = params.signInfos[i].clientSpec) === null || _d === void 0 ? void 0 : _d.type} `);\n                    }\n                }\n                if (!params.signInfos[i].signature) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to register a did`);\n                }\n            }\n            if (!params.versionId) {\n                throw new Error('HID-SSI-SDK:: Error: params.versionId is required to update a did');\n            }\n            const { didDocument, signInfos, versionId } = params;\n            return yield this.didrpc.updateDID(didDocument, signInfos, versionId);\n        });\n    }\n    // using in API\n    deactivateByClientSpec(params) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            if (!params.didDocument) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocument is required to deactivate a did');\n            }\n            if (!params.signInfos) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos is required to register a did');\n            }\n            if (params.signInfos.length < 1) {\n                throw new Error('HID-SSI-SDK:: Error: params.signInfos must be a non empty array');\n            }\n            for (const i in params.signInfos) {\n                if (!params.signInfos[i].verification_method_id) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to register a did`);\n                }\n                if (!params.signInfos[i].clientSpec) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].clientSpec is required to register a did`);\n                }\n                if (((_a = params.signInfos[i].clientSpec) === null || _a === void 0 ? void 0 : _a.type) === IDID_1.IClientSpec['cosmos-ADR036']) {\n                    if (((_b = params.signInfos[i].clientSpec) === null || _b === void 0 ? void 0 : _b.adr036SignerAddress) === '' ||\n                        ((_c = params.signInfos[i].clientSpec) === null || _c === void 0 ? void 0 : _c.adr036SignerAddress) === undefined) {\n                        throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].adr036SignerAddress is required to register a did, when clientSpec type is${(_d = params.signInfos[i].clientSpec) === null || _d === void 0 ? void 0 : _d.type} `);\n                    }\n                }\n                if (!params.signInfos[i].signature) {\n                    throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to register a did`);\n                }\n            }\n            if (!params.versionId) {\n                throw new Error('HID-SSI-SDK:: Error: params.versionId is required to deactivate a did');\n            }\n            // if (!params.clientSpec) {\n            //   throw new Error('HID-SSI-SDK:: Error:  params.clientSpec is required to deactivate');\n            // }\n            // if (!(params.clientSpec in IClientSpec)) {\n            //   throw new Error('HID-SSI-SDK:: Error: invalid clientSpec');\n            // }\n            const { didDocument, signInfos, versionId } = params;\n            const didDoc = didDocument;\n            return yield this.didrpc.deactivateDID(didDoc.id, signInfos, versionId);\n        });\n    }\n    signAndRegisterByClientSpec(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.didDocument || Object.keys(params.didDocument).length === 0) {\n                throw new Error('HID-SSI-SDK:: Error: params.didDocString is required to register a did');\n            }\n            if (!params.clientSpec) {\n                throw new Error('HID-SSI-SDK:: Error:  params.clientSpec is required to sign');\n            }\n            if (!(params.clientSpec in IDID_1.IClientSpec)) {\n                throw new Error('HID-SSI-SDK:: Error: invalid clientSpec');\n            }\n            if (!this.didrpc) {\n                throw new Error('HID-SSI-SDK:: Error:  HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId is required to register a did');\n            }\n            if (!params.web3) {\n                throw new Error('HID-SSI-SDK:: Error: params.web should be passed');\n            }\n            if (!params.address) {\n                throw new Error('HID-SSI-SDK:: Error: params.address is required to sign a did');\n            }\n            const { didDocument, signature } = yield this.signByClientSpec({\n                didDocument: params.didDocument,\n                clientSpec: params.clientSpec,\n                address: params.address,\n                web3: params.web3,\n                chainId: params.chainId,\n            });\n            const signInfos = [\n                {\n                    signature,\n                    verification_method_id: params.verificationMethodId,\n                    clientSpec: {\n                        type: params.clientSpec,\n                        adr036SignerAddress: params.clientSpec === IDID_1.IClientSpec['cosmos-ADR036'] ? params.address : '',\n                    },\n                },\n            ];\n            return yield this.registerByClientSpec({\n                didDocument,\n                signInfos,\n                // only for [cosmos-ADR036]\n            });\n        });\n    }\n    signByClientSpec(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this['window'] === 'undefined') {\n                throw new Error('HID-SSI-SDK:: Error:  Running in non browser mode');\n            }\n            if (!params.didDocument) {\n                throw Error('HID-SSI-SDK:: Error: params.didDocument is required to sign');\n            }\n            if (!params.address) {\n                throw new Error('HID-SSI-SDK:: Error: params.address is required to sign a did');\n            }\n            if (!params.clientSpec) {\n                throw new Error('HID-SSI-SDK:: Error:  params.clientSpec is required to sign');\n            }\n            if (!(params.clientSpec in IDID_1.IClientSpec)) {\n                throw new Error('HID-SSI-SDK:: Error:  params.clientSpec is invalid');\n            }\n            switch (params.clientSpec) {\n                case IDID_1.IClientSpec['eth-personalSign']: {\n                    const didDocStringJson = utils_1.default.ldToJsonConvertor(params.didDocument);\n                    const didDoc = didDocStringJson;\n                    const signature = yield params.web3.eth.personal.sign(JSON.stringify(didDoc, (key, value) => {\n                        if (value === '' || (Array.isArray(value) && value.length === 0)) {\n                            return undefined;\n                        }\n                        return value;\n                    }), params.address);\n                    return { didDocument: didDoc, signature };\n                }\n                case IDID_1.IClientSpec['cosmos-ADR036']: {\n                    if (!params.chainId) {\n                        throw new Error('HID-SSI-SDK:: Error:  params.chainId is required to sign for clientSpec ' +\n                            IDID_1.IClientSpec['cosmos-ADR036'] +\n                            ' and keyType ' +\n                            IDID_1.IKeyType.EcdsaSecp256k1VerificationKey2019);\n                    }\n                    const didDocStringJson = utils_1.default.ldToJsonConvertor(params.didDocument);\n                    const didDoc = didDocStringJson;\n                    const didDocBytes = (yield did_1.Did.encode(didDoc)).finish();\n                    const signRespObj = yield params.web3.requestMethod('signArbitrary', [\n                        params.chainId,\n                        params.address,\n                        didDocBytes,\n                    ]);\n                    return { didDocument: didDoc, signature: signRespObj['signature'] };\n                }\n                default:\n                    throw Error('HID-SSI-SDK:: Error: Invalid clientSpec');\n                    break;\n            }\n        });\n    }\n    /**\n     * Add verification method\n     * @param\n     * - params.didDocument          : Optional, unregistered Did document\n     * - params.did                  : Optional, didDoc Id of registered didDoc\n     * - params.type                 : key type\n     * - params.id                   : Optional, verificationMethodId\n     * - params.controller           : Optional, controller field\n     * - params.publicKeyMultibase   : public key\n     * - params.blockchainAccountId  : Optional, blockchain accountId\n     * @return {Promise<Did>}  DidDocument object\n     */\n    addVerificationMethod(params) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolvedDidDoc;\n            if (!params.did && (!params.didDocument || Object.keys(params.didDocument).length === 0)) {\n                throw new Error('HID-SSI_SDK:: Error: params.did or params.didDocument is required to addVerificationMethod');\n            }\n            if (!params.type) {\n                throw new Error('HID-SSI-SDK:: Error: params.type is required to addVerificationMethod');\n            }\n            const { type } = params;\n            if (!(type in IDID_1.IKeyType)) {\n                throw new Error('HID-SSI-SDK:: Error: params.type is invalid');\n            }\n            try {\n                if (params.did) {\n                    if (!this.didrpc) {\n                        throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized');\n                    }\n                    resolvedDidDoc = yield this.didrpc.resolveDID(params.did);\n                    if (!resolvedDidDoc.didDocument) {\n                        if (!params.didDocument) {\n                            throw new Error('HID-SSI_SDK:: Error: can not able to resolve did please send didDocument');\n                        }\n                    }\n                }\n                else if (params.didDocument) {\n                    resolvedDidDoc = {};\n                    resolvedDidDoc.didDocument = params.didDocument;\n                }\n                else {\n                    throw new Error('HID-SSI-SDK:: Error: params.did or params.didDocument is required to addVerificationMethod');\n                }\n            }\n            catch (e) {\n                throw new Error(`HID-SSI-SDK:: Error: could not resolve did ${params.did}`);\n            }\n            if (type === IDID_1.IKeyType.EcdsaSecp256k1RecoveryMethod2020 &&\n                (!params.blockchainAccountId || params.blockchainAccountId.trim() === '')) {\n                throw new Error(`HID-SSI-SDK:: Error: params.blockchainAccountId is required for keyType ${params.type}`);\n            }\n            if (type === IDID_1.IKeyType.EcdsaSecp256k1RecoveryMethod2020 && (!params.id || params.id.trim() === '')) {\n                throw new Error(`HID-SSI-SDK:: Error: params.id is required for keyType ${params.type}`);\n            }\n            if (type === IDID_1.IKeyType.EcdsaSecp256k1VerificationKey2019 &&\n                (!params.blockchainAccountId ||\n                    params.blockchainAccountId.trim() === '' ||\n                    !params.publicKeyMultibase ||\n                    params.publicKeyMultibase.trim() === '')) {\n                throw new Error(`HID-SSI-SDK:: Error: params.blockchainAccountId and params.publicKeyMultibase is required for keyType ${params.type}`);\n            }\n            if ((type === IDID_1.IKeyType.Ed25519VerificationKey2020 ||\n                type === IDID_1.IKeyType.X25519KeyAgreementKey2020 ||\n                type === IDID_1.IKeyType.X25519KeyAgreementKeyEIP5630) &&\n                !params.publicKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: Error: params.publicKeyMultibase is required to addVerificationMethod');\n            }\n            const verificationMethod = {};\n            const { didDocument } = resolvedDidDoc;\n            if (params.id) {\n                const checkIfVmIdExists = didDocument.verificationMethod.some((vm) => vm.id === params.id);\n                if (checkIfVmIdExists) {\n                    throw new Error(`HID-SSI-SDK:: Error: verificationMethod ${params.id} already exists`);\n                }\n            }\n            const VMLength = didDocument.verificationMethod.length;\n            verificationMethod['id'] = (_a = params === null || params === void 0 ? void 0 : params.id) !== null && _a !== void 0 ? _a : `${didDocument.id}#key-${VMLength + 1}`;\n            verificationMethod['type'] = type;\n            verificationMethod['controller'] = didDocument.id;\n            if (type !== IDID_1.IKeyType.EcdsaSecp256k1RecoveryMethod2020) {\n                if (type === IDID_1.IKeyType.Ed25519VerificationKey2020) {\n                    const { publicKeyMultibase: publicKeyMultibase1 } = utils_1.default.convertEd25519verificationkey2020toStableLibKeysInto({\n                        publicKey: params.publicKeyMultibase,\n                    });\n                    verificationMethod['publicKeyMultibase'] = publicKeyMultibase1;\n                }\n                else {\n                    verificationMethod['publicKeyMultibase'] = (_b = params === null || params === void 0 ? void 0 : params.publicKeyMultibase) !== null && _b !== void 0 ? _b : '';\n                }\n            }\n            verificationMethod['blockchainAccountId'] = (_c = params === null || params === void 0 ? void 0 : params.blockchainAccountId) !== null && _c !== void 0 ? _c : '';\n            didDocument.verificationMethod.push(verificationMethod);\n            if (verificationMethod['type'] === IDID_1.IKeyType.X25519KeyAgreementKey2020 ||\n                verificationMethod['type'] === IDID_1.IKeyType.X25519KeyAgreementKeyEIP5630) {\n                didDocument.keyAgreement.push(verificationMethod['id']);\n            }\n            else {\n                didDocument.authentication.push(verificationMethod['id']);\n                didDocument.assertionMethod.push(verificationMethod['id']);\n                didDocument.capabilityDelegation.push(verificationMethod['id']);\n                didDocument.capabilityInvocation.push(verificationMethod['id']);\n            }\n            if (verificationMethod['type'] === IDID_1.IKeyType.X25519KeyAgreementKey2020) {\n                didDocument['@context'].push(constant['DID_' + IDID_1.IKeyType.Ed25519VerificationKey2020].DID_KEYAGREEMENT_CONTEXT);\n            }\n            if (verificationMethod['type'] === IDID_1.IKeyType.X25519KeyAgreementKeyEIP5630) {\n                didDocument['@context'].push(constant['DID_' + IDID_1.IKeyType.EcdsaSecp256k1RecoveryMethod2020].DID_KEYAGREEMENT_CONTEXT);\n            }\n            return didDocument;\n        });\n    }\n}\nexports.default = HypersignDID;\n","\"use strict\";\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DIDRpc = void 0;\nconst constants_1 = require(\"../constants\");\nconst generatedProto = __importStar(require(\"../../libs/generated/ssi/tx\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst client_1 = require(\"../hid/client\");\nclass DIDRpc {\n    constructor({ offlineSigner, nodeRpcEndpoint, nodeRestEndpoint, }) {\n        if (offlineSigner) {\n            this.hidClient = new client_1.HIDClient(offlineSigner, nodeRpcEndpoint, nodeRestEndpoint);\n        }\n        else {\n            this.hidClient = null;\n        }\n        this.didRestEp =\n            (client_1.HIDClient.hidNodeRestEndpoint ? client_1.HIDClient.hidNodeRestEndpoint : nodeRestEndpoint) + constants_1.HYPERSIGN_NETWORK_DID_PATH;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner');\n            }\n            yield this.hidClient.init();\n        });\n    }\n    registerDID(didDoc, signInfos) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgCreateDID}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgCreateDID].fromPartial({\n                    didDocString: didDoc,\n                    signatures: signInfos,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                }),\n            };\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), [txMessage], fee);\n            return txResult;\n        });\n    }\n    updateDID(didDoc, signInfos, versionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgUpdateDID}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgUpdateDID].fromPartial({\n                    didDocString: didDoc,\n                    signatures: signInfos,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                    version_id: versionId,\n                }),\n            };\n            // TODO: need to find a way to make it dynamic\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), [txMessage], fee);\n            return txResult;\n        });\n    }\n    deactivateDID(did, signInfos, versionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgDeactivateDID}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgDeactivateDID].fromPartial({\n                    didId: did,\n                    signatures: signInfos,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                    version_id: versionId,\n                }),\n            };\n            // TODO: need to find a way to make it dynamic\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), [txMessage], fee);\n            return txResult;\n        });\n    }\n    resolveDID(did) {\n        return __awaiter(this, void 0, void 0, function* () {\n            did = did + ':'; // TODO:  we need to sort this out ... need to remove later\n            const get_didUrl = `${this.didRestEp}/${did}`;\n            let response;\n            try {\n                response = yield axios_1.default.get(get_didUrl);\n                const didDoc = response.data;\n                return didDoc;\n            }\n            catch (err) {\n                return { didDocument: null, didDocumentMetadata: null };\n            }\n        });\n    }\n}\nexports.DIDRpc = DIDRpc;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HIDClient = void 0;\nconst stargate_1 = require(\"@cosmjs/stargate\");\nconst math_1 = require(\"@cosmjs/math\");\nconst rpcFactory_1 = require(\"../rpcFactory\");\nconst constants_1 = require(\"../constants\");\nconst utils_1 = __importDefault(require(\"../utils\"));\nconst { HYPERSIGN_TESTNET_RPC, HYPERSIGN_TESTNET_REST, HYPERSIGN_MAINNET_RPC, HYPERSIGN_MAINNET_REST, HIDRpcEnums, } = require('../constants');\nclass HIDClient {\n    constructor(signer, hidNodeEndpoint, // 'TEST' | 'MAIN' | <custom node url>\n    hidNodeRestEndpoint) {\n        this.signer = signer;\n        this.registry = new rpcFactory_1.HIDRpcFactory();\n        if (!hidNodeEndpoint) {\n            throw new Error(\"HID-SSI-SDK:: Error: HID Node enpoint must be passed. Possible values:  'TEST' | 'MAIN' | <custom node url>\");\n        }\n        if (hidNodeEndpoint === 'TEST') {\n            HIDClient.hidNodeEndpoint = utils_1.default.checkUrl(HYPERSIGN_TESTNET_RPC);\n            HIDClient.hidNodeRestEndpoint = utils_1.default.checkUrl(HYPERSIGN_TESTNET_REST);\n        }\n        else if (hidNodeEndpoint === 'MAIN') {\n            HIDClient.hidNodeEndpoint = utils_1.default.checkUrl(HYPERSIGN_MAINNET_RPC);\n            HIDClient.hidNodeRestEndpoint = utils_1.default.checkUrl(HYPERSIGN_MAINNET_REST);\n        }\n        else {\n            HIDClient.hidNodeEndpoint = utils_1.default.checkUrl(hidNodeEndpoint);\n            if (!hidNodeRestEndpoint) {\n                throw new Error('HID-SSI-SDK:: Error: HID node REST endpoint can not be empty for custom network');\n            }\n            HIDClient.hidNodeRestEndpoint = utils_1.default.checkUrl(hidNodeRestEndpoint);\n        }\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            Object.keys(HIDRpcEnums).forEach((rpc) => {\n                this.registry.registerRpc(HIDRpcEnums[rpc]);\n            });\n            const gasPrice = new stargate_1.GasPrice(math_1.Decimal.fromUserInput(constants_1.GAS_PRICE, constants_1.HID_DECIMAL), constants_1.HID_DNOMINATION);\n            HIDClient.hidNodeClient = yield stargate_1.SigningStargateClient.connectWithSigner(HIDClient.hidNodeEndpoint, this.signer, {\n                gasPrice,\n                registry: this.registry.hidRPCRegistery,\n            });\n            const accounts = yield this.signer.getAccounts();\n            HIDClient.hidWalletAddress = accounts[0].address;\n        });\n    }\n    static getHidClient() {\n        return HIDClient.hidNodeClient;\n    }\n    static getHidWalletAddress() {\n        return HIDClient.hidWalletAddress;\n    }\n}\nexports.HIDClient = HIDClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HypersignVerifiablePresentation = exports.HypersignVerifiableCredential = exports.HypersignSchema = exports.HypersignDID = exports.HypersignSSISdk = void 0;\nconst did_1 = __importDefault(require(\"./did/did\"));\nexports.HypersignDID = did_1.default;\nconst vc_1 = __importDefault(require(\"./credential/vc\"));\nexports.HypersignVerifiableCredential = vc_1.default;\nconst vp_1 = __importDefault(require(\"./presentation/vp\"));\nexports.HypersignVerifiablePresentation = vp_1.default;\nconst schema_1 = __importDefault(require(\"./schema/schema\"));\nexports.HypersignSchema = schema_1.default;\nclass HypersignSSISdk {\n    constructor(params) {\n        const { offlineSigner, nodeRpcEndpoint, nodeRestEndpoint, namespace } = params;\n        this.signer = offlineSigner;\n        this.nodeRpcEndpoint = nodeRpcEndpoint ? nodeRpcEndpoint : \"MAIN\";\n        this.nodeRestEndpoint = nodeRestEndpoint ? nodeRestEndpoint : \"\";\n        this.namespace = namespace ? namespace : \"\";\n        const constructorParams = {\n            offlineSigner: this.signer,\n            nodeRpcEndpoint: this.nodeRpcEndpoint,\n            nodeRestEndpoint: this.nodeRestEndpoint,\n            namespace: this.namespace\n        };\n        this.did = new did_1.default(constructorParams);\n        this.schema = new schema_1.default(constructorParams);\n        this.vc = new vc_1.default(constructorParams);\n        this.vp = new vp_1.default(constructorParams);\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.did.init();\n            yield this.schema.init();\n            yield this.vc.init();\n        });\n    }\n}\nexports.HypersignSSISdk = HypersignSSISdk;\n","\"use strict\";\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jcs_1 = require(\"jcs\");\nconst vc_js_1 = __importDefault(require(\"vc-js\"));\nconst jsonld_signatures_1 = __importDefault(require(\"jsonld-signatures\"));\nconst did_1 = __importDefault(require(\"../did/did\"));\nconst ed25519_signature_2020_1 = require(\"@digitalbazaar/ed25519-signature-2020\");\nconst ed25519_verification_key_2020_1 = require(\"@digitalbazaar/ed25519-verification-key-2020\");\nconst utils_1 = __importDefault(require(\"../utils\"));\nconst vc_1 = __importDefault(require(\"../credential/vc\"));\nconst { AuthenticationProofPurpose, AssertionProofPurpose } = jsonld_signatures_1.default.purposes;\nconst constants_1 = require(\"../constants\");\nconst v1_1 = __importDefault(require(\"../../libs/w3cache/v1\"));\nconst jsonld_signatures_2 = require(\"jsonld-signatures\");\nconst ethereumeip712signature2021suite_1 = require(\"ethereumeip712signature2021suite\");\nconst documentLoader = v1_1.default;\nclass HypersignVerifiablePresentation {\n    constructor(params = {}) {\n        const { namespace, nodeRpcEndpoint, nodeRestEndpoint } = params;\n        this.namespace = namespace && namespace != '' ? namespace : '';\n        const nodeRPCEp = nodeRpcEndpoint ? nodeRpcEndpoint : 'MAIN';\n        const nodeRestEp = nodeRestEndpoint ? nodeRestEndpoint : '';\n        const offlineConstuctorParams = { nodeRpcEndpoint: nodeRPCEp, nodeRestEndpoint: nodeRestEp };\n        this.vc = new vc_1.default(offlineConstuctorParams);\n        this.hsDid = new did_1.default(offlineConstuctorParams);\n        this.id = '';\n        this.type = [];\n        this.verifiableCredential = [];\n        this.holder = '';\n        this.proof = {};\n    }\n    _getId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const uuid = yield utils_1.default.getUUID();\n            let id;\n            if (this.namespace && this.namespace != '') {\n                id = `${constants_1.VP.SCHEME}:${constants_1.VP.METHOD}:${this.namespace}:${uuid}`;\n            }\n            else {\n                id = `${constants_1.VP.SCHEME}:${constants_1.VP.METHOD}:${uuid}`;\n            }\n            return id;\n        });\n    }\n    /**\n     * Generates a new presentation document\n     * @params\n     *  - params.verifiableCredentials: Array of Verifiable Credentials\n     *  - params.holderDid            : DID of the subject\n     * @returns {Promise<object>}\n     */\n    generate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const id = yield this._getId();\n            const presentation = vc_js_1.default.createPresentation({\n                verifiableCredential: params.verifiableCredentials,\n                id: id,\n                holder: params.holderDid,\n            });\n            return presentation;\n        });\n    }\n    /**\n     * Signs a new presentation document\n     * @params\n     *  - params.presentation         : Array of Verifiable Credentials\n     *  - params.holderDid            : *Optional* DID of the subject\n     *  - params.holderDidDocSigned   : *Optional* DID Doc of the subject\n     *  - params.verificationMethodId : verificationMethodId of holder\n     *  - params.privateKeyMultibase  : Private key associated with the verification method\n     *  - params.challenge            : Any random challenge\n     * @returns {Promise<object>}\n     */\n    sign(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (params.holderDid && params.holderDidDocSigned) {\n                throw new Error('HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided');\n            }\n            if (!params.privateKeyMultibase) {\n                throw new Error('HID-SSI-SDK:: params.privateKeyMultibase is required for signing a presentation');\n            }\n            if (!params.presentation) {\n                throw new Error('HID-SSI-SDK:: params.presentation is required for signinng a presentation');\n            }\n            if (!params.challenge) {\n                throw new Error('HID-SSI-SDK:: params.challenge is required for signinng a presentation');\n            }\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: params.verificationMethodId is required for signinng a presentation');\n            }\n            if (!this.hsDid) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            let resolvedDidDoc;\n            if (params.holderDid) {\n                resolvedDidDoc = yield this.hsDid.resolve({ did: params.holderDid });\n            }\n            else if (params.holderDidDocSigned) {\n                resolvedDidDoc = {};\n                resolvedDidDoc.didDocument = params.holderDidDocSigned;\n            }\n            else {\n                throw new Error('HID-SSI-SDK:: params.holderDid or params.holderDidDocSigned is required for signinng a presentation');\n            }\n            const { didDocument: signerDidDoc } = resolvedDidDoc;\n            // TODO: take verification method from params\n            const publicKeyId = params.verificationMethodId; // TODO: bad idea -  should not hardcode it.\n            const publicKeyVerMethod = signerDidDoc['verificationMethod'].find((x) => x.id == publicKeyId);\n            const convertedKeyPair = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: publicKeyVerMethod.publicKeyMultibase,\n            });\n            publicKeyVerMethod['publicKeyMultibase'] = convertedKeyPair.publicKeyMultibase;\n            const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from(Object.assign({ privateKeyMultibase: params.privateKeyMultibase }, publicKeyVerMethod));\n            const suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n                verificationMethod: publicKeyId,\n                key: keyPair,\n            });\n            const signedVP = yield vc_js_1.default.signPresentation({\n                presentation: params.presentation,\n                suite,\n                challenge: params.challenge,\n                documentLoader,\n            });\n            return signedVP;\n        });\n    }\n    // https://github.com/digitalbazaar/vc-js/blob/44ca660f62ad3569f338eaaaecb11a7b09949bd2/lib/vc.js#L392\n    /**\n     * Verifies signed presentation document\n     * @params\n     *  - params.signedPresentation         : Signed presentation document\n     *  - params.holderDid                  : DID of the subject\n     *  - params.holderDidDocSigned         : DIDdocument of the subject\n     *  - params.holderVerificationMethodId : verificationMethodId of holder\n     *  - params.issuerDid                  : DID of the issuer\n     *  - params.issuerVerificationMethodId : Optional DIDDoc of the issuer\n     *  - params.domain                     : Optional domain\n     *  - params.challenge                  : Random challenge\n     * @returns {Promise<object>}\n     */\n    verify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (params.holderDid && params.holderDidDocSigned) {\n                throw new Error('HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided');\n            }\n            if (!params.issuerDid) {\n                throw new Error('HID-SSI-SDK:: params.issuerDid is required for verifying a presentation');\n            }\n            if (!params.challenge) {\n                throw new Error('HID-SSI-SDK:: params.challenge is required for verifying a presentation');\n            }\n            if (!params.holderVerificationMethodId) {\n                throw new Error('HID-SSI-SDK:: params.holderVerificationMethodId is required for verifying a presentation');\n            }\n            if (!params.issuerVerificationMethodId) {\n                throw new Error('HID-SSI-SDK:: params.issuerVerificationMethodId is required for verifying a presentation');\n            }\n            if (!this.vc || !this.hsDid) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            if (!params.signedPresentation.proof) {\n                throw new Error('HID-SSI-SDK:: params.signedPresentation must be signed');\n            }\n            ///---------------------------------------\n            /// Holder\n            let resolvedDidDoc;\n            if (params.holderDid) {\n                resolvedDidDoc = yield this.hsDid.resolve({ did: params.holderDid });\n            }\n            else if (params.holderDidDocSigned) {\n                resolvedDidDoc = {};\n                resolvedDidDoc.didDocument = params.holderDidDocSigned;\n            }\n            else {\n                throw new Error('Either holderDid or holderDidDocSigned should be provided');\n            }\n            const { didDocument: holderDID } = resolvedDidDoc;\n            const holderDidDoc = holderDID;\n            const holderPublicKeyId = params.holderVerificationMethodId;\n            const holderPublicKeyVerMethod = holderDidDoc.verificationMethod.find((x) => x.id == holderPublicKeyId);\n            // Connvert the 45 byte pub key of holder into 48 byte\n            const { publicKeyMultibase: holderPublicKeyMultibase } = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: holderPublicKeyVerMethod.publicKeyMultibase,\n            });\n            holderPublicKeyVerMethod.publicKeyMultibase = holderPublicKeyMultibase;\n            const holderController = {\n                '@context': constants_1.DID.CONTROLLER_CONTEXT,\n                id: holderDidDoc.id,\n                authentication: holderDidDoc.authentication,\n            };\n            // TODO:  need to use domainname.\n            const presentationPurpose = new AuthenticationProofPurpose({\n                controller: holderController,\n                challenge: params.challenge,\n            });\n            const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from(Object.assign({ privateKeyMultibase: '' }, holderPublicKeyVerMethod));\n            const vpSuite_holder = new ed25519_signature_2020_1.Ed25519Signature2020({\n                verificationMethod: holderPublicKeyId,\n                key: keyPair,\n            });\n            ///---------------------------------------\n            /// Issuer\n            const { didDocument: issuerDID } = yield this.hsDid.resolve({ did: params.issuerDid });\n            if (issuerDID === null || issuerDID === undefined) {\n                throw new Error('Issuer DID is not registered');\n            }\n            const issuerDidDoc = issuerDID;\n            const issuerDidDocController = issuerDidDoc.controller;\n            const issuerDidDocControllerVerificationMethod = params.issuerVerificationMethodId.split('#')[0];\n            if (!issuerDidDocController.includes(issuerDidDocControllerVerificationMethod)) {\n                throw new Error(issuerDidDocControllerVerificationMethod + ' is not a controller of ' + params.issuerDid);\n            }\n            const issuerPublicKeyId = params.issuerVerificationMethodId;\n            let issuerPublicKeyVerMethod = issuerDidDoc.verificationMethod.find((x) => x.id == issuerPublicKeyId);\n            if (issuerPublicKeyVerMethod === null || issuerPublicKeyVerMethod === undefined) {\n                const { didDocument: controllerDidDocT } = yield this.hsDid.resolve({\n                    did: issuerDidDocControllerVerificationMethod,\n                });\n                const controllerDidDoc = controllerDidDocT;\n                issuerPublicKeyVerMethod = controllerDidDoc.verificationMethod.find((x) => x.id == issuerPublicKeyId);\n            }\n            // Connvert the 45 byte pub key of issuer into 48 byte\n            const { publicKeyMultibase: issuerPublicKeyMultibase } = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                publicKey: issuerPublicKeyVerMethod.publicKeyMultibase,\n            });\n            issuerPublicKeyVerMethod.publicKeyMultibase = issuerPublicKeyMultibase;\n            const issuerController = {\n                '@context': constants_1.DID.CONTROLLER_CONTEXT,\n                id: issuerDidDoc.id,\n                assertionMethod: issuerDidDoc.assertionMethod,\n            };\n            const purpose = new AssertionProofPurpose({\n                controller: issuerController,\n            });\n            const issuerKeyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from(Object.assign({ privateKeyMultibase: '' }, issuerPublicKeyVerMethod));\n            const vcSuite_issuer = new ed25519_signature_2020_1.Ed25519Signature2020({\n                verificationMethod: issuerPublicKeyId,\n                key: issuerKeyPair,\n            });\n            /* eslint-disable */\n            const that = this;\n            /* eslint-enable */\n            const result = yield vc_js_1.default.verify({\n                presentation: params.signedPresentation,\n                presentationPurpose,\n                purpose,\n                suite: [vpSuite_holder, vcSuite_issuer],\n                documentLoader,\n                unsignedPresentation: true,\n                checkStatus: function (options) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        return yield that.vc.checkCredentialStatus({ credentialId: options.credential.id });\n                    });\n                },\n            });\n            return result;\n        });\n    }\n    signByClientSpec(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.holderDid) {\n                throw new Error('HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided');\n            }\n            if (!params.presentation) {\n                throw new Error('HID-SSI-SDK:: params.presentation is required for signinng a presentation');\n            }\n            if (!params.challenge) {\n                throw new Error('HID-SSI-SDK:: params.challenge is required for signinng a presentation');\n            }\n            if (!params.verificationMethodId) {\n                throw new Error('HID-SSI-SDK:: params.verificationMethodId is required for signinng a presentation');\n            }\n            if (!this.hsDid) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            let resolvedDidDoc;\n            if (params.holderDid) {\n                resolvedDidDoc = yield this.hsDid.resolve({ did: params.holderDid });\n            }\n            else {\n                throw new Error('holderDid should be provided');\n            }\n            const vcs = [];\n            params.presentation.verifiableCredential.forEach((vc) => {\n                return vcs.push(jcs_1.JCS.cannonicalize(vc));\n            });\n            params.presentation.verifiableCredential = Array();\n            params.presentation.verifiableCredential = vcs;\n            const EthereumEip712Signature2021obj = new ethereumeip712signature2021suite_1.EthereumEip712Signature2021({}, params.web3Obj);\n            const proof = yield EthereumEip712Signature2021obj.createProof({\n                document: params.presentation,\n                purpose: new jsonld_signatures_2.purposes.AuthenticationProofPurpose({\n                    challenge: params.challenge,\n                    domain: params.domain,\n                    controller: {\n                        '@context': constants_1.DID.CONTROLLER_CONTEXT,\n                        id: resolvedDidDoc.didDocument.id,\n                        authentication: resolvedDidDoc.didDocument.authentication,\n                    },\n                }),\n                verificationMethod: params.verificationMethodId,\n                date: new Date().toISOString(),\n                documentLoader,\n                domain: params.domain ? { name: params.domain } : undefined,\n            });\n            params.presentation.proof = proof;\n            const signedVP = params.presentation;\n            return signedVP;\n        });\n    }\n    verifyByClientSpec(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (params.holderDid && params.holderDidDocSigned) {\n                    throw new Error('HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided');\n                }\n                if (!params.issuerDid) {\n                    throw new Error('HID-SSI-SDK:: params.issuerDid is required for verifying a presentation');\n                }\n                if (!params.challenge) {\n                    throw new Error('HID-SSI-SDK:: params.challenge is required for verifying a presentation');\n                }\n                if (!params.holderVerificationMethodId) {\n                    throw new Error('HID-SSI-SDK:: params.holderVerificationMethodId is required for verifying a presentation');\n                }\n                if (!params.issuerVerificationMethodId) {\n                    throw new Error('HID-SSI-SDK:: params.issuerVerificationMethodId is required for verifying a presentation');\n                }\n                if (!this.vc || !this.hsDid) {\n                    throw new Error('HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized');\n                }\n                if (!params.signedPresentation.proof) {\n                    throw new Error('HID-SSI-SDK:: params.signedPresentation must be signed');\n                }\n                // Holder DID\n                let resolvedDidDoc;\n                if (params.holderDid) {\n                    resolvedDidDoc = yield this.hsDid.resolve({ did: params.holderDid });\n                }\n                else if (params.holderDidDocSigned) {\n                    resolvedDidDoc = {};\n                    resolvedDidDoc.didDocument = params.holderDidDocSigned;\n                }\n                else {\n                    throw new Error('Either holderDid or holderDidDocSigned should be provided');\n                }\n                // Issuer DID\n                const { didDocument: issuerDID } = yield this.hsDid.resolve({ did: params.issuerDid });\n                if (issuerDID === null || issuerDID === undefined) {\n                    throw new Error('Issuer DID is not registered');\n                }\n                const publicKeyId = params.issuerVerificationMethodId;\n                const issuerDidDoc = issuerDID;\n                const publicKeyVerMethod = issuerDidDoc.verificationMethod.find((x) => x.id == publicKeyId);\n                // TODO: Get rid of this hack later.\n                // Convert 45 byte publick key into 48\n                const { publicKeyMultibase } = utils_1.default.convertedStableLibKeysIntoEd25519verificationkey2020({\n                    publicKey: publicKeyVerMethod.publicKeyMultibase,\n                });\n                publicKeyVerMethod.publicKeyMultibase = publicKeyMultibase;\n                const assertionController = {\n                    '@context': ['DID.CONTROLLER_CONTEXT'],\n                    id: issuerDidDoc.id,\n                    assertionMethod: issuerDidDoc.assertionMethod,\n                };\n                const keyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.from(Object.assign({ privateKeyMultibase: '' }, publicKeyVerMethod));\n                const suite = new ed25519_signature_2020_1.Ed25519Signature2020({\n                    verificationMethod: publicKeyId,\n                    key: keyPair,\n                });\n                const EthereumEip712Signature2021obj = new ethereumeip712signature2021suite_1.EthereumEip712Signature2021({}, params.web3Obj);\n                /* eslint-disable */\n                const that = this;\n                const checkStatus = function (options) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        return yield that.vc.checkCredentialStatus({ credentialId: options.credential.id });\n                    });\n                };\n                let finalResult = {\n                    verified: false,\n                    credentialResults: Array(),\n                    presentationResult: {},\n                    error: null,\n                };\n                switch (params.signedPresentation.proof['type']) {\n                    case 'EthereumEip712Signature2021': {\n                        const res = Array();\n                        const VCs = params.signedPresentation.verifiableCredential;\n                        for (let i = 0; i < VCs.length; i++) {\n                            const result = yield vc_js_1.default.verifyCredential({\n                                credential: JSON.parse(VCs[i]),\n                                controller: assertionController,\n                                suite,\n                                documentLoader,\n                                checkStatus,\n                            });\n                            res.push(result);\n                        }\n                        const proof = params.signedPresentation.proof;\n                        const document = Object.assign({}, params.signedPresentation);\n                        delete document.proof;\n                        const verificaitonResult = yield EthereumEip712Signature2021obj.verifyProof({\n                            document,\n                            domain: params.domain ? { name: params.domain } : undefined,\n                            proof,\n                            types: params.signedPresentation.proof['eip712'].types,\n                            purpose: new AuthenticationProofPurpose({\n                                challenge: params.challenge,\n                                domain: params.domain,\n                                controller: {\n                                    '@context': 'DID.CONTROLLER_CONTEXT',\n                                    id: resolvedDidDoc.didDocument.id,\n                                    authentication: resolvedDidDoc.didDocument.authentication,\n                                },\n                            }),\n                            documentLoader,\n                        });\n                        if (!verificaitonResult.verified) {\n                            throw verificaitonResult.error;\n                        }\n                        finalResult = {\n                            verified: true,\n                            credentialResults: res,\n                            presentationResult: verificaitonResult,\n                            error: null,\n                        };\n                        break;\n                    }\n                    case 'Ed25519Signature2020': {\n                        throw new Error('HID-SSI-SDK:: Error: Ed25519Signature2020 is not supported yet');\n                        break;\n                    }\n                    default: {\n                        throw new Error('HID-SSI-SDK:: Error: Invalid proof type');\n                    }\n                }\n                return finalResult;\n            }\n            catch (error) {\n                return {\n                    verified: false,\n                    credentialResults: Array(),\n                    presentationResult: {},\n                    error: error,\n                };\n            }\n        });\n    }\n}\nexports.default = HypersignVerifiablePresentation;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HIDRpcFactory = void 0;\nconst proto_signing_1 = require(\"@cosmjs/proto-signing\");\nconst stargate_1 = require(\"@cosmjs/stargate\");\nconst generatedProto = __importStar(require(\"../libs/generated/ssi/tx\"));\nconst constants_1 = require(\"./constants\");\nclass HIDRpcFactory {\n    constructor() {\n        this.hidRPCRegistery = new proto_signing_1.Registry(stargate_1.defaultRegistryTypes);\n    }\n    registerRpc(rpcName) {\n        if (!rpcName || !generatedProto[rpcName]) {\n            throw new Error(\"Invalid rpcName\");\n        }\n        const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums[rpcName]}`;\n        this.hidRPCRegistery.register(typeUrl, generatedProto[rpcName]);\n    }\n}\nexports.HIDRpcFactory = HIDRpcFactory;\n","\"use strict\";\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst schema_1 = require(\"../../libs/generated/ssi/schema\");\nconst schemaRPC_1 = require(\"./schemaRPC\");\nconst constants = __importStar(require(\"../constants\"));\nconst utils_1 = __importDefault(require(\"../utils\"));\nconst ed25519 = require('@stablelib/ed25519');\nclass HyperSignSchema {\n    constructor(params = {}) {\n        const { namespace, offlineSigner, nodeRpcEndpoint, nodeRestEndpoint } = params;\n        const nodeRPCEp = nodeRpcEndpoint ? nodeRpcEndpoint : 'MAIN';\n        const nodeRestEp = nodeRestEndpoint ? nodeRestEndpoint : '';\n        this.schemaRpc = new schemaRPC_1.SchemaRpc({ offlineSigner, nodeRpcEndpoint: nodeRPCEp, nodeRestEndpoint: nodeRestEp });\n        this.namespace = namespace && namespace != '' ? namespace : '';\n        (this.type = constants.SCHEMA.SCHEMA_TYPE),\n            (this.modelVersion = '1.0'),\n            (this.id = ''),\n            (this.name = ''),\n            (this.author = ''),\n            (this.authored = '');\n        this.schema = {\n            schema: '',\n            description: '',\n            type: '',\n            properties: '',\n            required: [],\n            additionalProperties: false,\n        };\n    }\n    // Ref:\n    _getSchemaId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const b = yield utils_1.default.getUUID();\n            // ID Structure ->  sch:<method>:<namespace>:<method-specific-id>:<version>\n            let id;\n            if (this.namespace && this.namespace != '') {\n                id = `${constants.SCHEMA.SCHEME}:${constants.SCHEMA.METHOD}:${this.namespace}:${b}:${this.modelVersion}`;\n            }\n            else {\n                id = `${constants.SCHEMA.SCHEME}:${constants.SCHEMA.METHOD}:${b}:${this.modelVersion}`;\n            }\n            return id;\n        });\n    }\n    _getDateTime() {\n        return new Date(new Date().getTime() - 100000).toISOString().slice(0, -5) + 'Z';\n    }\n    /**\n     * Initialise the offlinesigner to interact with Hypersign blockchain\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.schemaRpc) {\n                throw new Error('HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignSchema class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            yield this.schemaRpc.init();\n        });\n    }\n    /**\n     * Generates a new schema doc without proof\n     * @params\n     *  - params.name                 : Name of the schema\n     *  - params.description          : Optional - Description of the schema\n     *  - params.author               : DID of the author\n     *  - params.fields               : Schema fields of type ISchemaFields\n     *  - params.additionalProperties : If additionalProperties can be added, boolean\n     * @returns {Promise<SchemaDocument>} SchemaDocument object\n     */\n    generate(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.author)\n                throw new Error('HID-SSI-SDK:: Error: Author must be passed');\n            this.id = yield this._getSchemaId();\n            this.name = params.name;\n            this.author = params.author;\n            this.authored = this._getDateTime();\n            this.schema = {\n                schema: constants.SCHEMA.SCHEMA_JSON,\n                description: params.description ? params.description : '',\n                type: 'object',\n                properties: '',\n                required: [],\n                additionalProperties: params.additionalProperties,\n            };\n            const t = {};\n            if (params.fields && params.fields.length > 0) {\n                params.fields.forEach((prop) => {\n                    const schemaPropsObj = {};\n                    schemaPropsObj.propName = prop.name;\n                    schemaPropsObj.val = {};\n                    schemaPropsObj.val.type = prop.type;\n                    if (prop.format)\n                        schemaPropsObj.val.format = prop.format;\n                    t[schemaPropsObj.propName] = schemaPropsObj.val;\n                    if (prop.isRequired) {\n                        this.schema.required.push(prop.name);\n                    }\n                });\n                this.schema.properties = JSON.stringify(t);\n            }\n            return {\n                type: this.type,\n                modelVersion: this.modelVersion,\n                id: this.id,\n                name: this.name,\n                author: this.author,\n                authored: this.authored,\n                schema: this.schema,\n            };\n        });\n    }\n    /**\n     * Signs a schema document and attaches proof\n     * @params\n     *  - params.schema               : The schema document without proof\n     *  - params.privateKeyMultibase  : Private Key to sign the doc\n     *  - params.verificationMethodId : VerificationMethodId of the document\n     * @returns {Promise<Schema>} Schema with proof\n     */\n    sign(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.privateKeyMultibase)\n                throw new Error('HID-SSI-SDK:: Error: params.privateKeyMultibase must be passed');\n            if (!params.verificationMethodId)\n                throw new Error('HID-SSI-SDK:: Error: params.verificationMethodId must be passed');\n            if (!params.schema)\n                throw new Error('HID-SSI-SDK:: Error: Schema must be passed');\n            const { privateKeyMultibase: privateKeyMultibaseConverted } = utils_1.default.convertEd25519verificationkey2020toStableLibKeysInto({\n                privKey: params.privateKeyMultibase,\n            });\n            const schemaDoc = params.schema;\n            const dataBytes = (yield schema_1.Schema.encode(schemaDoc)).finish();\n            const signed = ed25519.sign(privateKeyMultibaseConverted, dataBytes);\n            const proof = {\n                type: constants.SCHEMA.SIGNATURE_TYPE,\n                created: this._getDateTime(),\n                verificationMethod: params.verificationMethodId,\n                proofPurpose: constants.SCHEMA.PROOF_PURPOSE,\n                proofValue: Buffer.from(signed).toString('base64'),\n            };\n            schemaDoc.proof = {};\n            Object.assign(schemaDoc.proof, Object.assign({}, proof));\n            return schemaDoc;\n        });\n    }\n    /**\n     * Register a schema Document in Hypersign blockchain - an onchain activity\n     * @params\n     *  - params.schema               : The schema document with schemaProof\n     * @returns {Promise<object>} Result of the registration\n     */\n    register(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.schema)\n                throw new Error('HID-SSI-SDK:: Error: schema must be passed');\n            if (!params.schema.proof)\n                throw new Error('HID-SSI-SDK:: Error: schema.proof must be passed');\n            if (!params.schema.proof.created)\n                throw new Error('HID-SSI-SDK:: Error: schema.proof must Contain created');\n            if (!params.schema.proof.proofPurpose)\n                throw new Error('HID-SSI-SDK:: Error: schema.proof must Contain proofPurpose');\n            if (!params.schema.proof.proofValue)\n                throw new Error('HID-SSI-SDK:: Error: schema.proof must Contain proofValue');\n            if (!params.schema.proof.type)\n                throw new Error('HID-SSI-SDK:: Error: schema.proof must Contain type');\n            if (!params.schema.proof.verificationMethod)\n                throw new Error('HID-SSI-SDK:: Error: schema.proof must Contain verificationMethod');\n            if (!this.schemaRpc) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignSchema class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            return this.schemaRpc.createSchema(params.schema, params.schema.proof);\n        });\n    }\n    /**\n     * Resolves a schema document with schemId from Hypersign blockchain - an onchain activity\n     * @params\n     *  - params.schemaId             : Id of the schema document\n     * @returns {Promise<Schema>} Returns schema document\n     */\n    resolve(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!params.schemaId)\n                throw new Error('HID-SSI-SDK:: Error: SchemaId must be passed');\n            if (!this.schemaRpc) {\n                throw new Error('HID-SSI-SDK:: Error: HypersignSchema class is not instantiated with Offlinesigner or have not been initilized');\n            }\n            const schemaArr = yield this.schemaRpc.resolveSchema(params.schemaId);\n            if (!schemaArr || schemaArr.length < 0) {\n                throw new Error('HID-SSI-SDK:: Error: No schema found, id = ' + params.schemaId);\n            }\n            const schema = schemaArr[0];\n            return schema;\n        });\n    }\n}\nexports.default = HyperSignSchema;\n","\"use strict\";\n/**\n * Copyright (c) 2023, Hypermine Pvt. Ltd.\n * All rights reserved.\n * Author: Hypermine Core Team\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SchemaRpc = void 0;\nconst constants_1 = require(\"../constants\");\nconst generatedProto = __importStar(require(\"../../libs/generated/ssi/tx\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst client_1 = require(\"../hid/client\");\nclass SchemaRpc {\n    constructor({ offlineSigner, nodeRpcEndpoint, nodeRestEndpoint, }) {\n        if (offlineSigner) {\n            this.hidClient = new client_1.HIDClient(offlineSigner, nodeRpcEndpoint, nodeRestEndpoint);\n        }\n        else {\n            this.hidClient = null;\n        }\n        this.schemaRestEp = client_1.HIDClient.hidNodeRestEndpoint + constants_1.HYPERSIGN_NETWORK_SCHEMA_PATH;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: SchemaRpc class is not initialise with offlinesigner');\n            }\n            yield this.hidClient.init();\n        });\n    }\n    createSchema(schema, proof) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hidClient) {\n                throw new Error('HID-SSI-SDK:: Error: SchemaRpc class is not initialise with offlinesigner');\n            }\n            const typeUrl = `${constants_1.HID_COSMOS_MODULE}.${constants_1.HIDRpcEnums.MsgCreateSchema}`;\n            const txMessage = {\n                typeUrl,\n                value: generatedProto[constants_1.HIDRpcEnums.MsgCreateSchema].fromJSON({\n                    schemaDoc: schema,\n                    schemaProof: proof,\n                    creator: client_1.HIDClient.getHidWalletAddress(),\n                }),\n            };\n            // TODO: need to find a way to make it dynamic\n            const fee = 'auto';\n            const hidClient = client_1.HIDClient.getHidClient();\n            const txResult = yield hidClient.signAndBroadcast(client_1.HIDClient.getHidWalletAddress(), [txMessage], fee);\n            return txResult;\n        });\n    }\n    resolveSchema(schemaId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getSchemaUrl = `${this.schemaRestEp}/${schemaId}:`;\n            const response = yield axios_1.default.get(getSchemaUrl);\n            const { schema } = response.data;\n            return schema;\n        });\n    }\n}\nexports.SchemaRpc = SchemaRpc;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants = __importStar(require(\"./constants\"));\nconst { encode, decode } = require(\"base58-universal\");\nconst ed25519_verification_key_2020_1 = require(\"@digitalbazaar/ed25519-verification-key-2020\");\nclass Utils {\n    static getUUID() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const edKeyPair = yield ed25519_verification_key_2020_1.Ed25519VerificationKey2020.generate();\n            const exportedKp = yield edKeyPair.export({ publicKey: true });\n            const { publicKeyMultibase: publicKeyMultibase1 } = this.convertEd25519verificationkey2020toStableLibKeysInto({\n                publicKey: exportedKp.publicKeyMultibase,\n            });\n            return publicKeyMultibase1;\n        });\n    }\n    static checkUrl(url) {\n        // TODO: check if the url is a valid url\n        if (url.charAt(url.length - 1) === \"/\") {\n            return url;\n        }\n        else {\n            return (url = url + \"/\");\n        }\n    }\n    static _encodeMbKey(header, key) {\n        const mbKey = new Uint8Array(header.length + key.length);\n        mbKey.set(header);\n        mbKey.set(key, header.length);\n        return \"z\" + encode(mbKey);\n    }\n    static _decodeMbKey(header, key) {\n        let mbKey = new Uint8Array(key); //header + orginaley\n        mbKey = mbKey.slice(header.length);\n        return mbKey; //Buffer.from(mbKey).toString('base64');\n    }\n    static _decodeMbPubKey(header, key) {\n        let mbKey = new Uint8Array(key); //header + orginaley\n        mbKey = mbKey.slice(header.length);\n        return \"z\" + encode(mbKey); //Buffer.from(mbKey).toString('base64');\n    }\n    static _bufToMultibase(pubKeyBuf) {\n        return \"z\" + encode(pubKeyBuf);\n    }\n    // Converting 45byte public key to 48 by padding header \n    // Converting 88byte private key to 91 by padding header\n    static convertedStableLibKeysIntoEd25519verificationkey2020(stableLibKp) {\n        const result = {};\n        if (stableLibKp.publicKey) {\n            const stableLibPubKeyWithoutZ = stableLibKp.publicKey.substr(1);\n            const stableLibPubKeyWithoutZDecode = decode(stableLibPubKeyWithoutZ);\n            result['publicKeyMultibase'] = Utils._encodeMbKey(constants.KEY_HEADERS.MULTICODEC_ED25519_PUB_HEADER, stableLibPubKeyWithoutZDecode);\n        }\n        if (stableLibKp.privKey) {\n            result['privateKeyMultibase'] = Utils._encodeMbKey(constants.KEY_HEADERS.MULTICODEC_ED25519_PRIV_HEADER, stableLibKp.privKey);\n        }\n        return result;\n    }\n    static convertEd25519verificationkey2020toStableLibKeysInto(ed255192020VerKeys) {\n        const result = {};\n        if (ed255192020VerKeys.publicKey) {\n            const stableLibPubKeyWithoutZ = ed255192020VerKeys.publicKey.substr(1);\n            const stableLibPubKeyWithoutZDecode = decode(stableLibPubKeyWithoutZ);\n            result['publicKeyMultibase'] = Utils._decodeMbPubKey(constants.KEY_HEADERS.MULTICODEC_ED25519_PUB_HEADER, stableLibPubKeyWithoutZDecode);\n        }\n        // privateKeyMultibase = z + encode(header+original)\n        if (ed255192020VerKeys.privKey) {\n            const stableLibPrivKeyWithoutZ = ed255192020VerKeys.privKey.substr(1);\n            const stableLibPrivKeyWithoutZDecode = decode(stableLibPrivKeyWithoutZ);\n            result['privateKeyMultibase'] = Utils._decodeMbKey(constants.KEY_HEADERS.MULTICODEC_ED25519_PRIV_HEADER, stableLibPrivKeyWithoutZDecode);\n        }\n        return result;\n    }\n    static jsonToLdConvertor(json) {\n        const ld = {};\n        for (const key in json) {\n            if (key === \"context\") {\n                ld['@' + key] = json[key];\n            }\n            else {\n                ld[key] = json[key];\n            }\n        }\n        return ld;\n    }\n    static ldToJsonConvertor(ld) {\n        const json = {};\n        for (const key in ld) {\n            if (key === \"@context\") {\n                json['context'] = ld[key];\n            }\n            else {\n                json[key] = ld[key];\n            }\n        }\n        return json;\n    }\n    // TODO: need to find a way to make it dynamic\n    static getFee() {\n        return \"auto\";\n    }\n}\nexports.default = Utils;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdomain_linkege\"] = self[\"webpackChunkdomain_linkege\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5903); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["api_1","require","verifyDNS01","domain","txt","resolveDNSURL","URL","host","actuaTxt","console","log","res","makeCall","data","txtRecords","Answer","filter","record","type","txtRecord","find","includes","verified","error","Error","TXT","exports","verify_1","dns01_1","DomainLinkageVerifier","constructor","startsWith","verify","did","Verify","origin","verifyDnsTxtRecord","url","axios_1","__importDefault","method","headers","__awaiter","Promise","resolve","reject","default","get","post","then","response","catch","DNS01_PREFIX","Object","enumerable","keyencodingconverter_1","convertPublickeyToMultibaseEd25519VerificationKey","constants_1","base58_universal_1","MULTICODEC_ED25519_PUB_HEADER","Uint8Array","_encodeMbKey","header","key","mbKey","length","set","encode","publicKey","publicKeyBytes","decode","substring","publicKeyMultibase","vc_1","jsonld_signatures_1","jsonld_1","ed25519_signature_2020_1","ed25519_verification_key_2020_1","utils_1","suite","Ed25519Signature2020","validateDID","finalResult","results","resp1","resolveDid","resp2","resolveDidConfig","didConfig","credential","linked_dids","id","issuer","push","proof","undefined","purposeResult","verificationMethod","credentialSubject","verificationMethodId","Ed25519VerificationKey2020","controller","result","_verifyCredential","purpose","purposes","AssertionProofPurpose","assertionMethod","documentLoader","verifyCredential","resolverURL","render","_vm","this","_c","_self","attrs","staticRenderFns","staticClass","staticStyle","steps","on","completeStep","isStepActive","finish","_v","$event","import_config","export_config","reset","directives","name","rawName","value","expression","domProps","target","composing","import_file","ref","filetoupload","_e","upload","link","didConfiguration","_s","didDocument","status","download","namespace","rpc","api","mounted","mnemonic","localStorage","getItem","walletAddress","JSON","parse","address","service","serviceEndpoint","split","document","getElementById","style","display","disabled","innerHTML","methods","clear","$refs","file","files","reader","FileReader","onload","e","setItem","stringify","keys","hostname","readAsText","alert","resolveDID","resolveDIDConfig","fetch","filename","blob","Blob","createObjectURL","createElement","href","click","loader","show","div","className","cssText","img","src","appendChild","body","querySelector","remove","msg","time","setTimeout","copy","text","that","navigator","clipboard","writeText","err","generateDID","signcredential","didDocumentBlob","didConfigurationBlob","didDocumentUrl","didConfigurationUrl","didDocumentLink","didConfigurationLink","json","dl","DomainLinkage","button","$emit","generateMnemonic","offlineSigner","createWallet","hsDID","HypersignDID","nodeRestEndpoint","nodeRpcEndpoint","init","seed","generateMnemonicToHDSeed","generateKeys","generate","hsCred","HypersignVerifiableCredential","did_configuration","subjectDid","schemaContext","issuerDid","expirationDate","Date","toISOString","fields","privateKeyMultibase","credentialStatus","signedCredential","issue","jsonld","component","openURl","async","registerDID","signature","ApiOauth","API_URL","access_token","signInfos","verification_method_id","resp","txnResp","signAndRegisterDid","signDid","window","open","copyText","select","setSelectionRange","color","domainLinkage","border","transactionHash","components","HorizontalStepper","icon","title","HelloWorld","completed","dns","payload","forEach","step","StepperMain","Vue","use","JsonViewer","BootstrapVue","BootstrapVueIcons","IconsPlugin","config","productionTip","h","App","$mount","apiKey","module","DirectSecp256k1HdWallet","Bip39","Slip10","Slip10RawIndex","Slip10Curve","makeCosmoshubPath","a","hardened","normal","fromMnemonic","prefix","hdPaths","makeSSIWalletPath","minHardIndex","slipPathKeys","derivePath","Ed25519","seedHD","privkey","defineProperty","ClientSpec","protobufPackage","minimal_1","baseClientSpec","adr036SignerAddress","message","writer","Writer","create","uint32","string","input","Reader","end","len","pos","assign","tag","skipType","fromJSON","object","String","toJSON","obj","fromPartial","Credential","CredentialProof","CredentialStatus","Claim","baseClaim","currentStatus","statusReason","baseCredentialStatus","issuanceDate","credentialHash","claim","fork","ldelim","baseCredentialProof","created","updated","proofPurpose","proofValue","baseCredential","DidDocumentState","SignInfo","Service","VerificationMethod","Metadata","Did","clientSpec_1","baseDid","context","alsoKnownAs","authentication","keyAgreement","capabilityInvocation","capabilityDelegation","v","map","baseMetadata","deactivated","versionId","bool","Boolean","baseVerificationMethod","blockchainAccountId","baseService","baseSignInfo","clientSpec","baseDidDocumentState","didDocumentMetadata","Schema","SchemaProof","SchemaProperty","SchemaDocument","baseSchemaDocument","modelVersion","author","authored","schema","baseSchemaProperty","description","properties","required","additionalProperties","baseSchemaProof","baseSchema","MsgClientImpl","MsgRegisterCredentialStatusResponse","MsgRegisterCredentialStatus","MsgDeactivateDIDResponse","MsgDeactivateDID","MsgCreateSchemaResponse","MsgCreateSchema","MsgUpdateDIDResponse","MsgUpdateDID","MsgCreateDIDResponse","MsgCreateDID","did_1","schema_1","credential_1","baseMsgCreateDID","creator","didDocString","signatures","baseMsgCreateDIDResponse","uint64","longToNumber","Number","baseMsgUpdateDID","version_id","baseMsgUpdateDIDResponse","updateId","baseMsgCreateSchema","schemaDoc","schemaProof","baseMsgCreateSchemaResponse","baseMsgDeactivateDID","didId","baseMsgDeactivateDIDResponse","baseMsgRegisterCredentialStatus","baseMsgRegisterCredentialStatusResponse","CreateDID","request","promise","UpdateDID","CreateSchema","DeactivateDID","RegisterCredentialStatus","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","toNumber","thisArg","_arguments","P","generator","adopt","fulfilled","next","rejected","done","apply","mod","__esModule","did_json_1","ed25519_signature_2020_json_1","security_v2_json_1","credentials_json_1","vc_data_integrety_json_1","lds_ecdsa_secp256k1_recovery2020_json_1","schema_org_json_1","x25519_key_agreement_2020_v1_json_1","nodeDocumentLoader","documentLoaders","node","xhr","did_wellknown_json_1","CONTEXTS","freeze","options","contextUrl","documentUrl","HIDRpcEnums","CredentialStatusEnums","CredentialStatusReasonEnums","HID_MIN_FEE","HID_MIN_GAS","HID_DNOMINATION","HID_DECIMAL","GAS_PRICE","KEY_HEADERS","SCHEMA","VP","VC","DID","CAIP_10_PREFIX","DID_EcdsaSecp256k1VerificationKey2019","DID_EcdsaSecp256k1RecoveryMethod2020","DID_Ed25519VerificationKey2020","HYPERSIGN_NETWORK_BANK_BALANCE_PATH","HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH","HYPERSIGN_NETWORK_SCHEMA_PATH","HYPERSIGN_NETWORK_DID_PATH","HID_COSMOS_MODULE","HYPERSIGN_MAINNET_REST","HYPERSIGN_MAINNET_RPC","HYPERSIGN_TESTNET_REST","HYPERSIGN_TESTNET_RPC","compactProof","CONTROLLER_CONTEXT","SCHEME","METHOD","NAMESPACE","DID_BASE_CONTEXT","DID_KEYAGREEMENT_CONTEXT","VERIFICATION_METHOD_TYPE","BLOCKCHAINACCOUNTID_CONTEXT","PREFIX","CREDENTAIL_SCHEMA_VALIDATOR_TYPE","CREDENTAIL_STATUS_TYPE","CREDENTAIL_BASE_CONTEXT","CREDENTAIL_SECURITY_CONTEXT_V2","CREDENTAIL_SECURITY_SUITE","CREDENTAIL_ECDSA_SECURITY_SUITE","PROOF_PURPOSE","CRED_STATUS_TYPES","CRED_STATUS_REASON_TYPES","SCHEMA_JSON","SCHEMA_TYPE","SIGNATURE_TYPE","MULTICODEC_ED25519_PRIV_HEADER","__createBinding","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","__setModuleDefault","__importStar","prototype","hasOwnProperty","call","CredentialRPC","generatedProto","client_1","hidClient","HIDClient","credentialRestEP","hidNodeRestEndpoint","registerCredentialStatus","typeUrl","txMessage","getHidWalletAddress","fee","getHidClient","txResult","signAndBroadcast","generateCredentialStatusTxnMessage","registerCredentialStatusBulk","txMessages","resolveCredentialStatus","credentialId","get_didUrl","credStatus","vc_js_1","ed25519","credRPC_1","crypto_1","v1_1","ethereumeip712signature2021suite_1","jsonld_signatures_2","extendContextLoader","params","_checkIfAllRequiredPropsAreSent","sentAttributes","requiredProps","some","x","indexOf","_getCredentialSubject","schemaProperty","attributesMap","cs","sentPropes","SchemaProps","props","requiredPros","values","p","_getCredentialContext","schemaId","schemaProperties","schemaUrl","hsSchema","schemaRpc","schemaRestEp","hs","nodeRPCEp","nodeRestEp","offlineConstuctorParams","credStatusRPC","hsDid","credentialSchema","_sign","privateKeyMultibaseConverted","convertEd25519verificationkey2020toStableLibKeysInto","privKey","credentialBytes","signed","sign","Buffer","from","toString","_dateNow","date","slice","getTime","_sha256Hash","sha256","createHash","update","digest","_getId","uuid","getUUID","subjectDidDocSigned","resolvedsubjectDidDoc","issuerDidDoc","subjectDidDoc","Array","vc","schemaInternal","registerCredential","signerDidDoc","publicKeyId","publicKeyVerMethod","convertedKeyPair","convertedStableLibKeysIntoEd25519verificationkey2020","keyPair","LIVE","issuerDID","credIssuerDidDoc","credIssuerController","issuerPublicKeyVerMethod","signedVC","credentialStatusRegistrationResult","code","rawLog","credentialStatusProof","assertionController","checkStatus","checkCredentialStatus","updateCredentialStatus","toUpperCase","issuerDidDocController","verificationMethodController","controllerDidDoc","didDocofController","issuerPublicKeyId","generateRegisterCredentialStatusTxnMessage","txnMessage","registerCredentialStatusTxnBulk","issueByClientSpec","web3Obj","EthereumEip712Signature2021obj","EthereumEip712Signature2021","createProof","primaryType","verifyByClientSpec","verificationResult","verifyProof","types","eip712","IClientSpec","IKeyType","IVerificationRelationships","constant","AuthenticationProofPurpose","didRPC_1","web3_1","IDID_1","DIDDocument","keyType","verificationRelationships","vm","EcdsaSecp256k1RecoveryMethod2020","EcdsaSecp256k1VerificationKey2019","methodSpecificId","_isValidMultibaseBase58String","str","multibaseBase58Regex","test","rpcConstructorParams","didrpc","DIDRpc","didBytes","didDoc","ldToJsonConvertor","_filterVerificationRelationships","vR","set1","Set","set2","has","_getBlockChainAccountID","chainId","web3","inDecimelChainId","utils","hexToNumber","blockChainAccountId","eip155","edKeyPair","seedBytes","exportedKp","export","privateKey","publicKeyMultibase1","newDid","jsonToLdConvertor","register","didDocStringJson","signData","i","X25519KeyAgreementKey2020","X25519KeyAgreementKeyEIP5630","ed25519verificationkey2020","verificationMethods","ed25519PublicKey","updateDID","deactivate","deactivateDID","challenge","resolveddoc","pubkey","item","didDocumentLd","signedDidDocument","createByClientSpec","multibasePublicKey","registerByClientSpec","_a","_b","_d","updateByClientSpec","deactivateByClientSpec","signAndRegisterByClientSpec","signByClientSpec","eth","personal","isArray","didDocBytes","signRespObj","requestMethod","addVerificationMethod","resolvedDidDoc","trim","checkIfVmIdExists","VMLength","didRestEp","stargate_1","math_1","rpcFactory_1","signer","hidNodeEndpoint","registry","HIDRpcFactory","checkUrl","registerRpc","gasPrice","GasPrice","Decimal","fromUserInput","hidNodeClient","SigningStargateClient","connectWithSigner","hidRPCRegistery","accounts","getAccounts","hidWalletAddress","HypersignVerifiablePresentation","HypersignSchema","HypersignSSISdk","vp_1","constructorParams","vp","jcs_1","verifiableCredential","holder","presentation","createPresentation","verifiableCredentials","holderDid","holderDidDocSigned","signedVP","signPresentation","holderVerificationMethodId","issuerVerificationMethodId","signedPresentation","holderDID","holderDidDoc","holderPublicKeyId","holderPublicKeyVerMethod","holderPublicKeyMultibase","holderController","presentationPurpose","vpSuite_holder","issuerDidDocControllerVerificationMethod","controllerDidDocT","issuerPublicKeyMultibase","issuerController","issuerKeyPair","vcSuite_issuer","unsignedPresentation","vcs","JCS","cannonicalize","credentialResults","presentationResult","VCs","verificaitonResult","proto_signing_1","Registry","defaultRegistryTypes","rpcName","schemaRPC_1","constants","HyperSignSchema","SchemaRpc","_getSchemaId","b","_getDateTime","t","prop","schemaPropsObj","propName","val","format","isRequired","dataBytes","createSchema","schemaArr","resolveSchema","getSchemaUrl","Utils","charAt","_decodeMbKey","_decodeMbPubKey","_bufToMultibase","pubKeyBuf","stableLibKp","stableLibPubKeyWithoutZ","substr","stableLibPubKeyWithoutZDecode","ed255192020VerKeys","stableLibPrivKeyWithoutZ","stableLibPrivKeyWithoutZDecode","ld","getFee","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","leafPrototypes","getProto","getPrototypeOf","__proto__","mode","ns","def","current","getOwnPropertyNames","definition","g","Function","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}